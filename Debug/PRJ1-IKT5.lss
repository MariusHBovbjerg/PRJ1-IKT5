
PRJ1-IKT5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800200  00001092  00001126  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001092  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800202  00800202  00001128  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001128  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001158  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00001198  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002395  00000000  00000000  000012e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fbb  00000000  00000000  0000367d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dee  00000000  00000000  00004638  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002d4  00000000  00000000  00005428  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008d4  00000000  00000000  000056fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fa6  00000000  00000000  00005fd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  00006f76  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	7e c0       	rjmp	.+252    	; 0xfe <__ctors_end>
       2:	00 00       	nop
       4:	9b c0       	rjmp	.+310    	; 0x13c <__bad_interrupt>
       6:	00 00       	nop
       8:	99 c0       	rjmp	.+306    	; 0x13c <__bad_interrupt>
       a:	00 00       	nop
       c:	97 c0       	rjmp	.+302    	; 0x13c <__bad_interrupt>
       e:	00 00       	nop
      10:	95 c0       	rjmp	.+298    	; 0x13c <__bad_interrupt>
      12:	00 00       	nop
      14:	f5 c0       	rjmp	.+490    	; 0x200 <__vector_5>
      16:	00 00       	nop
      18:	3c c1       	rjmp	.+632    	; 0x292 <__vector_6>
      1a:	00 00       	nop
      1c:	8f c0       	rjmp	.+286    	; 0x13c <__bad_interrupt>
      1e:	00 00       	nop
      20:	8d c0       	rjmp	.+282    	; 0x13c <__bad_interrupt>
      22:	00 00       	nop
      24:	8b c0       	rjmp	.+278    	; 0x13c <__bad_interrupt>
      26:	00 00       	nop
      28:	89 c0       	rjmp	.+274    	; 0x13c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	87 c0       	rjmp	.+270    	; 0x13c <__bad_interrupt>
      2e:	00 00       	nop
      30:	85 c0       	rjmp	.+266    	; 0x13c <__bad_interrupt>
      32:	00 00       	nop
      34:	83 c0       	rjmp	.+262    	; 0x13c <__bad_interrupt>
      36:	00 00       	nop
      38:	81 c0       	rjmp	.+258    	; 0x13c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	7f c0       	rjmp	.+254    	; 0x13c <__bad_interrupt>
      3e:	00 00       	nop
      40:	7d c0       	rjmp	.+250    	; 0x13c <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c1       	rjmp	.+734    	; 0x324 <__vector_17>
      46:	00 00       	nop
      48:	79 c0       	rjmp	.+242    	; 0x13c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	77 c0       	rjmp	.+238    	; 0x13c <__bad_interrupt>
      4e:	00 00       	nop
      50:	75 c0       	rjmp	.+234    	; 0x13c <__bad_interrupt>
      52:	00 00       	nop
      54:	73 c0       	rjmp	.+230    	; 0x13c <__bad_interrupt>
      56:	00 00       	nop
      58:	71 c0       	rjmp	.+226    	; 0x13c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	6f c0       	rjmp	.+222    	; 0x13c <__bad_interrupt>
      5e:	00 00       	nop
      60:	6d c0       	rjmp	.+218    	; 0x13c <__bad_interrupt>
      62:	00 00       	nop
      64:	6b c0       	rjmp	.+214    	; 0x13c <__bad_interrupt>
      66:	00 00       	nop
      68:	69 c0       	rjmp	.+210    	; 0x13c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	67 c0       	rjmp	.+206    	; 0x13c <__bad_interrupt>
      6e:	00 00       	nop
      70:	65 c0       	rjmp	.+202    	; 0x13c <__bad_interrupt>
      72:	00 00       	nop
      74:	63 c0       	rjmp	.+198    	; 0x13c <__bad_interrupt>
      76:	00 00       	nop
      78:	61 c0       	rjmp	.+194    	; 0x13c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	5f c0       	rjmp	.+190    	; 0x13c <__bad_interrupt>
      7e:	00 00       	nop
      80:	7b c1       	rjmp	.+758    	; 0x378 <__vector_32>
      82:	00 00       	nop
      84:	5b c0       	rjmp	.+182    	; 0x13c <__bad_interrupt>
      86:	00 00       	nop
      88:	59 c0       	rjmp	.+178    	; 0x13c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	57 c0       	rjmp	.+174    	; 0x13c <__bad_interrupt>
      8e:	00 00       	nop
      90:	55 c0       	rjmp	.+170    	; 0x13c <__bad_interrupt>
      92:	00 00       	nop
      94:	53 c0       	rjmp	.+166    	; 0x13c <__bad_interrupt>
      96:	00 00       	nop
      98:	51 c0       	rjmp	.+162    	; 0x13c <__bad_interrupt>
      9a:	00 00       	nop
      9c:	4f c0       	rjmp	.+158    	; 0x13c <__bad_interrupt>
      9e:	00 00       	nop
      a0:	4d c0       	rjmp	.+154    	; 0x13c <__bad_interrupt>
      a2:	00 00       	nop
      a4:	4b c0       	rjmp	.+150    	; 0x13c <__bad_interrupt>
      a6:	00 00       	nop
      a8:	49 c0       	rjmp	.+146    	; 0x13c <__bad_interrupt>
      aa:	00 00       	nop
      ac:	47 c0       	rjmp	.+142    	; 0x13c <__bad_interrupt>
      ae:	00 00       	nop
      b0:	45 c0       	rjmp	.+138    	; 0x13c <__bad_interrupt>
      b2:	00 00       	nop
      b4:	43 c0       	rjmp	.+134    	; 0x13c <__bad_interrupt>
      b6:	00 00       	nop
      b8:	41 c0       	rjmp	.+130    	; 0x13c <__bad_interrupt>
      ba:	00 00       	nop
      bc:	3f c0       	rjmp	.+126    	; 0x13c <__bad_interrupt>
      be:	00 00       	nop
      c0:	3d c0       	rjmp	.+122    	; 0x13c <__bad_interrupt>
      c2:	00 00       	nop
      c4:	3b c0       	rjmp	.+118    	; 0x13c <__bad_interrupt>
      c6:	00 00       	nop
      c8:	39 c0       	rjmp	.+114    	; 0x13c <__bad_interrupt>
      ca:	00 00       	nop
      cc:	37 c0       	rjmp	.+110    	; 0x13c <__bad_interrupt>
      ce:	00 00       	nop
      d0:	35 c0       	rjmp	.+106    	; 0x13c <__bad_interrupt>
      d2:	00 00       	nop
      d4:	33 c0       	rjmp	.+102    	; 0x13c <__bad_interrupt>
      d6:	00 00       	nop
      d8:	31 c0       	rjmp	.+98     	; 0x13c <__bad_interrupt>
      da:	00 00       	nop
      dc:	2f c0       	rjmp	.+94     	; 0x13c <__bad_interrupt>
      de:	00 00       	nop
      e0:	2d c0       	rjmp	.+90     	; 0x13c <__bad_interrupt>
      e2:	00 00       	nop
      e4:	33 02       	muls	r19, r19
      e6:	81 02       	muls	r24, r17
      e8:	aa 02       	muls	r26, r26
      ea:	cc 02       	muls	r28, r28
      ec:	f7 02       	muls	r31, r23
      ee:	22 03       	mulsu	r18, r18
      f0:	4d 03       	fmul	r20, r21
      f2:	80 03       	fmuls	r16, r16
      f4:	a9 03       	fmulsu	r18, r17
      f6:	b3 03       	fmuls	r19, r19
      f8:	ef 03       	fmulsu	r22, r23
      fa:	18 04       	cpc	r1, r8
      fc:	67 04       	cpc	r6, r7

000000fe <__ctors_end>:
      fe:	11 24       	eor	r1, r1
     100:	1f be       	out	0x3f, r1	; 63
     102:	cf ef       	ldi	r28, 0xFF	; 255
     104:	d1 e2       	ldi	r29, 0x21	; 33
     106:	de bf       	out	0x3e, r29	; 62
     108:	cd bf       	out	0x3d, r28	; 61
     10a:	00 e0       	ldi	r16, 0x00	; 0
     10c:	0c bf       	out	0x3c, r16	; 60

0000010e <__do_copy_data>:
     10e:	12 e0       	ldi	r17, 0x02	; 2
     110:	a0 e0       	ldi	r26, 0x00	; 0
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	e2 e9       	ldi	r30, 0x92	; 146
     116:	f0 e1       	ldi	r31, 0x10	; 16
     118:	00 e0       	ldi	r16, 0x00	; 0
     11a:	0b bf       	out	0x3b, r16	; 59
     11c:	02 c0       	rjmp	.+4      	; 0x122 <__do_copy_data+0x14>
     11e:	07 90       	elpm	r0, Z+
     120:	0d 92       	st	X+, r0
     122:	a2 30       	cpi	r26, 0x02	; 2
     124:	b1 07       	cpc	r27, r17
     126:	d9 f7       	brne	.-10     	; 0x11e <__do_copy_data+0x10>

00000128 <__do_clear_bss>:
     128:	22 e0       	ldi	r18, 0x02	; 2
     12a:	a2 e0       	ldi	r26, 0x02	; 2
     12c:	b2 e0       	ldi	r27, 0x02	; 2
     12e:	01 c0       	rjmp	.+2      	; 0x132 <.do_clear_bss_start>

00000130 <.do_clear_bss_loop>:
     130:	1d 92       	st	X+, r1

00000132 <.do_clear_bss_start>:
     132:	a6 30       	cpi	r26, 0x06	; 6
     134:	b2 07       	cpc	r27, r18
     136:	e1 f7       	brne	.-8      	; 0x130 <.do_clear_bss_loop>
     138:	46 d1       	rcall	.+652    	; 0x3c6 <main>
     13a:	a9 c7       	rjmp	.+3922   	; 0x108e <_exit>

0000013c <__bad_interrupt>:
     13c:	61 cf       	rjmp	.-318    	; 0x0 <__vectors>

0000013e <_Z10bLightInitv>:
#include "BLightDriver.h"
#include <stdio.h>
#include <avr/io.h>

void bLightInit(void){
	DDRC = 0xFF;
     13e:	8f ef       	ldi	r24, 0xFF	; 255
     140:	87 b9       	out	0x07, r24	; 7
	TCCR3A = (0<<COM3A1)|(1<<COM3A0)|(0<<WGM31)|(1<<WGM30); // Set compare mode for OCR1A
     142:	81 e4       	ldi	r24, 0x41	; 65
     144:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
	TCCR3B = (0<<WGM33)|(0<<WGM32)|(1<<CS32)|(0<<CS31)|(0<<CS30); // Set Mode 1, PWM Phase correct 8-bit & 256 prescaler
     148:	84 e0       	ldi	r24, 0x04	; 4
     14a:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x700091>
	TIMSK3 = 0b00000010;
     14e:	82 e0       	ldi	r24, 0x02	; 2
     150:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <__TEXT_REGION_LENGTH__+0x700071>
	OCR3A = 0;
     154:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
     158:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
     15c:	08 95       	ret

0000015e <_Z12bLightTogglev>:
}

void bLightToggle(void){
	
	PINC |= 0b00000101; // ben 35 og 37
     15e:	86 b1       	in	r24, 0x06	; 6
     160:	85 60       	ori	r24, 0x05	; 5
     162:	86 b9       	out	0x06, r24	; 6
     164:	08 95       	ret

00000166 <_Z14bLightStrengthi>:

void bLightStrength(int Brightness){

	int dutyCycle = 0;
	
	if (Brightness > 254) {
     166:	8f 3f       	cpi	r24, 0xFF	; 255
     168:	91 05       	cpc	r25, r1
     16a:	24 f4       	brge	.+8      	; 0x174 <_Z14bLightStrengthi+0xe>
		dutyCycle = 254;
	}
	else if (Brightness <= 0) {
     16c:	18 16       	cp	r1, r24
     16e:	19 06       	cpc	r1, r25
     170:	34 f0       	brlt	.+12     	; 0x17e <_Z14bLightStrengthi+0x18>
     172:	03 c0       	rjmp	.+6      	; 0x17a <_Z14bLightStrengthi+0x14>
void bLightStrength(int Brightness){

	int dutyCycle = 0;
	
	if (Brightness > 254) {
		dutyCycle = 254;
     174:	8e ef       	ldi	r24, 0xFE	; 254
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	02 c0       	rjmp	.+4      	; 0x17e <_Z14bLightStrengthi+0x18>
	}
	else if (Brightness <= 0) {
		dutyCycle = 1;
     17a:	81 e0       	ldi	r24, 0x01	; 1
     17c:	90 e0       	ldi	r25, 0x00	; 0
	}
	else {
		dutyCycle = Brightness;
	}

	OCR3A = dutyCycle;
     17e:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
     182:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
     186:	08 95       	ret

00000188 <_Z11initCounterv>:
#include "Sensor.h"
#include <avr/interrupt.h>


void initCounter(){
	EIMSK = 0b00110000; // INT 4 & INT 5 active - BEN 2 & 3.
     188:	80 e3       	ldi	r24, 0x30	; 48
     18a:	8d bb       	out	0x1d, r24	; 29
	EICRB = 0b00001111; // INT 4 & INT 5 rising edge.
     18c:	8f e0       	ldi	r24, 0x0F	; 15
     18e:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x70006a>
     192:	08 95       	ret

00000194 <_Z8fLightOnv>:
void fLightInit(void){
	DDRG = 0xFF; 
}

void fLightOn(void){
	PORTG = 0b00000101; //ben 39 og 41
     194:	85 e0       	ldi	r24, 0x05	; 5
     196:	84 bb       	out	0x14, r24	; 20
     198:	08 95       	ret

0000019a <_Z9fLightOffv>:
}
void fLightOff(void){
	PORTG = 0b00000000;
     19a:	14 ba       	out	0x14, r1	; 20
     19c:	08 95       	ret

0000019e <_Z11SendCharnulc>:
	UBRR0L = ((F_CPU/(16*BAUD))-1);
}

void SendCharnul(char Tegn)
{
	while(!(UCSR0A & (1<<UDRE0))){
     19e:	e0 ec       	ldi	r30, 0xC0	; 192
     1a0:	f0 e0       	ldi	r31, 0x00	; 0
     1a2:	90 81       	ld	r25, Z
     1a4:	95 ff       	sbrs	r25, 5
     1a6:	fd cf       	rjmp	.-6      	; 0x1a2 <_Z11SendCharnulc+0x4>
		
	}
	UDR0 = Tegn;
     1a8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     1ac:	08 95       	ret

000001ae <_Z10SendStringPc>:
}

void SendString(char* Streng)
{
     1ae:	cf 93       	push	r28
     1b0:	df 93       	push	r29
     1b2:	ec 01       	movw	r28, r24
	while(*Streng != '\0'){
     1b4:	88 81       	ld	r24, Y
     1b6:	88 23       	and	r24, r24
     1b8:	29 f0       	breq	.+10     	; 0x1c4 <_Z10SendStringPc+0x16>
     1ba:	21 96       	adiw	r28, 0x01	; 1
		SendCharnul(*Streng);
     1bc:	f0 df       	rcall	.-32     	; 0x19e <_Z11SendCharnulc>
	UDR0 = Tegn;
}

void SendString(char* Streng)
{
	while(*Streng != '\0'){
     1be:	89 91       	ld	r24, Y+
     1c0:	81 11       	cpse	r24, r1
     1c2:	fc cf       	rjmp	.-8      	; 0x1bc <_Z10SendStringPc+0xe>
		SendCharnul(*Streng);
		Streng++;
	}
}
     1c4:	df 91       	pop	r29
     1c6:	cf 91       	pop	r28
     1c8:	08 95       	ret

000001ca <_Z11SendIntegeri>:

void SendInteger(int Tal)
{
     1ca:	cf 93       	push	r28
     1cc:	df 93       	push	r29
     1ce:	cd b7       	in	r28, 0x3d	; 61
     1d0:	de b7       	in	r29, 0x3e	; 62
     1d2:	6e 97       	sbiw	r28, 0x1e	; 30
     1d4:	0f b6       	in	r0, 0x3f	; 63
     1d6:	f8 94       	cli
     1d8:	de bf       	out	0x3e, r29	; 62
     1da:	0f be       	out	0x3f, r0	; 63
     1dc:	cd bf       	out	0x3d, r28	; 61
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     1de:	4a e0       	ldi	r20, 0x0A	; 10
     1e0:	be 01       	movw	r22, r28
     1e2:	6f 5f       	subi	r22, 0xFF	; 255
     1e4:	7f 4f       	sbci	r23, 0xFF	; 255
     1e6:	20 d7       	rcall	.+3648   	; 0x1028 <__itoa_ncheck>
	char intStr[30];
	itoa(Tal, intStr, 10);
	SendString(intStr);
     1e8:	ce 01       	movw	r24, r28
     1ea:	01 96       	adiw	r24, 0x01	; 1
     1ec:	e0 df       	rcall	.-64     	; 0x1ae <_Z10SendStringPc>
}
     1ee:	6e 96       	adiw	r28, 0x1e	; 30
     1f0:	0f b6       	in	r0, 0x3f	; 63
     1f2:	f8 94       	cli
     1f4:	de bf       	out	0x3e, r29	; 62
     1f6:	0f be       	out	0x3f, r0	; 63
     1f8:	cd bf       	out	0x3d, r28	; 61
     1fa:	df 91       	pop	r29
     1fc:	cf 91       	pop	r28
     1fe:	08 95       	ret

00000200 <__vector_5>:


ISR(INT4_vect){ //On rising edge, count + 1
     200:	1f 92       	push	r1
     202:	0f 92       	push	r0
     204:	0f b6       	in	r0, 0x3f	; 63
     206:	0f 92       	push	r0
     208:	11 24       	eor	r1, r1
     20a:	2f 93       	push	r18
     20c:	8f 93       	push	r24
     20e:	9f 93       	push	r25
	if(counter == 3){
     210:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <counter>
     214:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <counter+0x1>
     218:	03 97       	sbiw	r24, 0x03	; 3
     21a:	d1 f4       	brne	.+52     	; 0x250 <__vector_5+0x50>
		
		newCount = true;
     21c:	81 e0       	ldi	r24, 0x01	; 1
     21e:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__data_start>
		counter++;
     222:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <counter>
     226:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <counter+0x1>
     22a:	01 96       	adiw	r24, 0x01	; 1
     22c:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <counter+0x1>
     230:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <counter>
		EIMSK = 0b00000000;
     234:	1d ba       	out	0x1d, r1	; 29
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     236:	2f ef       	ldi	r18, 0xFF	; 255
     238:	89 e6       	ldi	r24, 0x69	; 105
     23a:	98 e1       	ldi	r25, 0x18	; 24
     23c:	21 50       	subi	r18, 0x01	; 1
     23e:	80 40       	sbci	r24, 0x00	; 0
     240:	90 40       	sbci	r25, 0x00	; 0
     242:	e1 f7       	brne	.-8      	; 0x23c <__vector_5+0x3c>
     244:	00 c0       	rjmp	.+0      	; 0x246 <__vector_5+0x46>
     246:	00 00       	nop
		_delay_ms(500);
		EIFR = 0b00110000;
     248:	80 e3       	ldi	r24, 0x30	; 48
     24a:	8c bb       	out	0x1c, r24	; 28
		EIMSK = 0b00110000;
     24c:	8d bb       	out	0x1d, r24	; 29
     24e:	19 c0       	rjmp	.+50     	; 0x282 <__vector_5+0x82>
	}
	else {
		newCount = true;
     250:	81 e0       	ldi	r24, 0x01	; 1
     252:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__data_start>
		counter++;
     256:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <counter>
     25a:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <counter+0x1>
     25e:	01 96       	adiw	r24, 0x01	; 1
     260:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <counter+0x1>
     264:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <counter>
		EIMSK = 0b00000000;
     268:	1d ba       	out	0x1d, r1	; 29
     26a:	2f ef       	ldi	r18, 0xFF	; 255
     26c:	85 ea       	ldi	r24, 0xA5	; 165
     26e:	9e e0       	ldi	r25, 0x0E	; 14
     270:	21 50       	subi	r18, 0x01	; 1
     272:	80 40       	sbci	r24, 0x00	; 0
     274:	90 40       	sbci	r25, 0x00	; 0
     276:	e1 f7       	brne	.-8      	; 0x270 <__vector_5+0x70>
     278:	00 c0       	rjmp	.+0      	; 0x27a <__vector_5+0x7a>
     27a:	00 00       	nop
		_delay_ms(300);
		EIFR = 0b00110000;
     27c:	80 e3       	ldi	r24, 0x30	; 48
     27e:	8c bb       	out	0x1c, r24	; 28
		EIMSK = 0b00110000;
     280:	8d bb       	out	0x1d, r24	; 29
	}
}
     282:	9f 91       	pop	r25
     284:	8f 91       	pop	r24
     286:	2f 91       	pop	r18
     288:	0f 90       	pop	r0
     28a:	0f be       	out	0x3f, r0	; 63
     28c:	0f 90       	pop	r0
     28e:	1f 90       	pop	r1
     290:	18 95       	reti

00000292 <__vector_6>:
ISR(INT5_vect){
     292:	1f 92       	push	r1
     294:	0f 92       	push	r0
     296:	0f b6       	in	r0, 0x3f	; 63
     298:	0f 92       	push	r0
     29a:	11 24       	eor	r1, r1
     29c:	2f 93       	push	r18
     29e:	8f 93       	push	r24
     2a0:	9f 93       	push	r25
	if(counter == 3){
     2a2:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <counter>
     2a6:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <counter+0x1>
     2aa:	03 97       	sbiw	r24, 0x03	; 3
     2ac:	d1 f4       	brne	.+52     	; 0x2e2 <__vector_6+0x50>
		
		newCount = true;
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__data_start>
		counter++;
     2b4:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <counter>
     2b8:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <counter+0x1>
     2bc:	01 96       	adiw	r24, 0x01	; 1
     2be:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <counter+0x1>
     2c2:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <counter>
		EIMSK = 0b00000000;
     2c6:	1d ba       	out	0x1d, r1	; 29
     2c8:	2f ef       	ldi	r18, 0xFF	; 255
     2ca:	89 e6       	ldi	r24, 0x69	; 105
     2cc:	98 e1       	ldi	r25, 0x18	; 24
     2ce:	21 50       	subi	r18, 0x01	; 1
     2d0:	80 40       	sbci	r24, 0x00	; 0
     2d2:	90 40       	sbci	r25, 0x00	; 0
     2d4:	e1 f7       	brne	.-8      	; 0x2ce <__vector_6+0x3c>
     2d6:	00 c0       	rjmp	.+0      	; 0x2d8 <__vector_6+0x46>
     2d8:	00 00       	nop
		_delay_ms(500);
		EIFR = 0b00110000;
     2da:	80 e3       	ldi	r24, 0x30	; 48
     2dc:	8c bb       	out	0x1c, r24	; 28
		EIMSK = 0b00110000;
     2de:	8d bb       	out	0x1d, r24	; 29
     2e0:	19 c0       	rjmp	.+50     	; 0x314 <__vector_6+0x82>
	}
	else {
		newCount = true;
     2e2:	81 e0       	ldi	r24, 0x01	; 1
     2e4:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__data_start>
		counter++;
     2e8:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <counter>
     2ec:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <counter+0x1>
     2f0:	01 96       	adiw	r24, 0x01	; 1
     2f2:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <counter+0x1>
     2f6:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <counter>
		EIMSK = 0b00000000;
     2fa:	1d ba       	out	0x1d, r1	; 29
     2fc:	2f ef       	ldi	r18, 0xFF	; 255
     2fe:	85 ea       	ldi	r24, 0xA5	; 165
     300:	9e e0       	ldi	r25, 0x0E	; 14
     302:	21 50       	subi	r18, 0x01	; 1
     304:	80 40       	sbci	r24, 0x00	; 0
     306:	90 40       	sbci	r25, 0x00	; 0
     308:	e1 f7       	brne	.-8      	; 0x302 <__vector_6+0x70>
     30a:	00 c0       	rjmp	.+0      	; 0x30c <__vector_6+0x7a>
     30c:	00 00       	nop
		_delay_ms(300);
		EIFR = 0b00110000;
     30e:	80 e3       	ldi	r24, 0x30	; 48
     310:	8c bb       	out	0x1c, r24	; 28
		EIMSK = 0b00110000;
     312:	8d bb       	out	0x1d, r24	; 29
	}
}
     314:	9f 91       	pop	r25
     316:	8f 91       	pop	r24
     318:	2f 91       	pop	r18
     31a:	0f 90       	pop	r0
     31c:	0f be       	out	0x3f, r0	; 63
     31e:	0f 90       	pop	r0
     320:	1f 90       	pop	r1
     322:	18 95       	reti

00000324 <__vector_17>:


ISR(TIMER1_COMPA_vect){
     324:	1f 92       	push	r1
     326:	0f 92       	push	r0
     328:	0f b6       	in	r0, 0x3f	; 63
     32a:	0f 92       	push	r0
     32c:	11 24       	eor	r1, r1
     32e:	8f 93       	push	r24
     330:	9f 93       	push	r25
	                                                                                                                                          
	switch(MotorMode){
     332:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__data_end>
     336:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__data_end+0x1>
     33a:	81 30       	cpi	r24, 0x01	; 1
     33c:	91 05       	cpc	r25, r1
     33e:	31 f0       	breq	.+12     	; 0x34c <__vector_17+0x28>
     340:	18 f0       	brcs	.+6      	; 0x348 <__vector_17+0x24>
     342:	02 97       	sbiw	r24, 0x02	; 2
     344:	59 f0       	breq	.+22     	; 0x35c <__vector_17+0x38>
     346:	11 c0       	rjmp	.+34     	; 0x36a <__vector_17+0x46>
		case 0:
			PORTA = 0b00000000;
     348:	12 b8       	out	0x02, r1	; 2
		break;
     34a:	0f c0       	rjmp	.+30     	; 0x36a <__vector_17+0x46>
		case 1:
			if(PINA == 0b00000001){
     34c:	80 b1       	in	r24, 0x00	; 0
     34e:	81 30       	cpi	r24, 0x01	; 1
     350:	11 f4       	brne	.+4      	; 0x356 <__vector_17+0x32>
				PORTA = 0b00000000;
     352:	12 b8       	out	0x02, r1	; 2
     354:	0a c0       	rjmp	.+20     	; 0x36a <__vector_17+0x46>
			}else{
				PORTA = 0b00000001;
     356:	81 e0       	ldi	r24, 0x01	; 1
     358:	82 b9       	out	0x02, r24	; 2
     35a:	07 c0       	rjmp	.+14     	; 0x36a <__vector_17+0x46>
			}
		break;
		case 2:
			if(PINA == 0b00000010){
     35c:	80 b1       	in	r24, 0x00	; 0
     35e:	82 30       	cpi	r24, 0x02	; 2
     360:	11 f4       	brne	.+4      	; 0x366 <__vector_17+0x42>
				PORTA = 0b00000000;
     362:	12 b8       	out	0x02, r1	; 2
     364:	02 c0       	rjmp	.+4      	; 0x36a <__vector_17+0x46>
				}else{
				PORTA = 0b00000010;
     366:	82 e0       	ldi	r24, 0x02	; 2
     368:	82 b9       	out	0x02, r24	; 2
			}
		break;
			
	}
	
}
     36a:	9f 91       	pop	r25
     36c:	8f 91       	pop	r24
     36e:	0f 90       	pop	r0
     370:	0f be       	out	0x3f, r0	; 63
     372:	0f 90       	pop	r0
     374:	1f 90       	pop	r1
     376:	18 95       	reti

00000378 <__vector_32>:

ISR(TIMER3_COMPA_vect){
     378:	1f 92       	push	r1
     37a:	0f 92       	push	r0
     37c:	0f b6       	in	r0, 0x3f	; 63
     37e:	0f 92       	push	r0
     380:	11 24       	eor	r1, r1
     382:	0b b6       	in	r0, 0x3b	; 59
     384:	0f 92       	push	r0
     386:	2f 93       	push	r18
     388:	3f 93       	push	r19
     38a:	4f 93       	push	r20
     38c:	5f 93       	push	r21
     38e:	6f 93       	push	r22
     390:	7f 93       	push	r23
     392:	8f 93       	push	r24
     394:	9f 93       	push	r25
     396:	af 93       	push	r26
     398:	bf 93       	push	r27
     39a:	ef 93       	push	r30
     39c:	ff 93       	push	r31
	
	bLightToggle();
     39e:	df de       	rcall	.-578    	; 0x15e <_Z12bLightTogglev>
}
     3a0:	ff 91       	pop	r31
     3a2:	ef 91       	pop	r30
     3a4:	bf 91       	pop	r27
     3a6:	af 91       	pop	r26
     3a8:	9f 91       	pop	r25
     3aa:	8f 91       	pop	r24
     3ac:	7f 91       	pop	r23
     3ae:	6f 91       	pop	r22
     3b0:	5f 91       	pop	r21
     3b2:	4f 91       	pop	r20
     3b4:	3f 91       	pop	r19
     3b6:	2f 91       	pop	r18
     3b8:	0f 90       	pop	r0
     3ba:	0b be       	out	0x3b, r0	; 59
     3bc:	0f 90       	pop	r0
     3be:	0f be       	out	0x3f, r0	; 63
     3c0:	0f 90       	pop	r0
     3c2:	1f 90       	pop	r1
     3c4:	18 95       	reti

000003c6 <main>:


int main(void)
{
	sei();
     3c6:	78 94       	sei
	initCounter();
     3c8:	df de       	rcall	.-578    	; 0x188 <_Z11initCounterv>
	initMotor();
     3ca:	e8 d2       	rcall	.+1488   	; 0x99c <_Z9initMotorv>
     3cc:	20 e0       	ldi	r18, 0x00	; 0
	InitUART(9600, 8, 0);
     3ce:	48 e0       	ldi	r20, 0x08	; 8
     3d0:	60 e8       	ldi	r22, 0x80	; 128
     3d2:	75 e2       	ldi	r23, 0x25	; 37
     3d4:	80 e0       	ldi	r24, 0x00	; 0
     3d6:	90 e0       	ldi	r25, 0x00	; 0
     3d8:	8f d3       	rcall	.+1822   	; 0xaf8 <_Z8InitUARTmhb>
     3da:	88 e1       	ldi	r24, 0x18	; 24
volatile unsigned int MotorMode = 0;

void InitUARTnul(unsigned long BAUD)
{
	
	UCSR0B = 0b00011000;
     3dc:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
     3e0:	86 e0       	ldi	r24, 0x06	; 6
	
	UCSR0C = 0b00000110;
     3e2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
     3e6:	87 e6       	ldi	r24, 0x67	; 103
	
	UBRR0L = ((F_CPU/(16*BAUD))-1);
     3e8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	sei();
	initCounter();
	initMotor();
	InitUART(9600, 8, 0);
	InitUARTnul(9600);
	bLightInit();
     3ec:	a8 de       	rcall	.-688    	; 0x13e <_Z10bLightInitv>
     3ee:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <counter+0x1>
	counter = 0;
     3f2:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <counter>
     3f6:	12 b8       	out	0x02, r1	; 2
	PORTA = 0b00000000;
     3f8:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__TEXT_REGION_LENGTH__+0x700071>
	TIMSK3 = 0b00000000;
     3fc:	04 e9       	ldi	r16, 0x94	; 148
			
			case 13: // Stop efter 7. brik
			if(newCount){
				playCoinSound(); //Mario coin
				newCount = false;
				TCNT3 = 0;
     3fe:	10 e0       	ldi	r17, 0x00	; 0
     400:	c4 e8       	ldi	r28, 0x84	; 132
				bLightStrength(254);
				_delay_ms(100);
				TCNT1 = 0;
     402:	d0 e0       	ldi	r29, 0x00	; 0
     404:	0f 2e       	mov	r0, r31
				setSpeed(20.0);
				_delay_ms(100);
				fLightOff();
				MotorMode = 0;
				_delay_ms(10);
				TIMSK3 = 0b00000000;
     406:	f1 e7       	ldi	r31, 0x71	; 113
     408:	af 2e       	mov	r10, r31
     40a:	b1 2c       	mov	r11, r1
     40c:	f0 2d       	mov	r31, r0
     40e:	ee 24       	eor	r14, r14
				bLightStrength(254);
				_delay_ms(500);
				TCNT3 = 0;
				bLightStrength(15);
				_delay_ms(400);
				MotorMode = 1;
     410:	e3 94       	inc	r14
     412:	f1 2c       	mov	r15, r1
     414:	0f 2e       	mov	r0, r31
				_delay_ms(100);
				TCNT1 = 0;
				setSpeed(80.0);
				counter = 12;
     416:	fc e0       	ldi	r31, 0x0C	; 12
     418:	8f 2e       	mov	r8, r31
     41a:	91 2c       	mov	r9, r1
     41c:	f0 2d       	mov	r31, r0
     41e:	0f 2e       	mov	r0, r31
				bLightStrength(254);
				MotorMode = 1;
				_delay_ms(100);
				TCNT1 = 0;
				setSpeed(99.0);
				counter = 10;
     420:	fa e0       	ldi	r31, 0x0A	; 10
     422:	6f 2e       	mov	r6, r31
     424:	71 2c       	mov	r7, r1
     426:	f0 2d       	mov	r31, r0
     428:	68 94       	set
				_delay_ms(10);
				newCount = false;
				TCNT1 = 0;
				setSpeed(99.0);
				_delay_ms(150);
				counter = 8;
     42a:	44 24       	eor	r4, r4
     42c:	43 f8       	bld	r4, 3
     42e:	51 2c       	mov	r5, r1
     430:	68 94       	set
			case 7: // stop ved 6. brik
			if(newCount){
				playCoinSound(); //Mario coin
				_delay_ms(10);
				newCount = false;
				MotorMode = 2;
     432:	cc 24       	eor	r12, r12
     434:	c1 f8       	bld	r12, 1
     436:	d1 2c       	mov	r13, r1
     438:	0f 2e       	mov	r0, r31
				TCNT1 = 0;
				setSpeed(99.0);
				TCNT3 = 0;
				bLightStrength(254);
				counter = 7;
     43a:	f7 e0       	ldi	r31, 0x07	; 7
     43c:	2f 2e       	mov	r2, r31
     43e:	31 2c       	mov	r3, r1
     440:	f0 2d       	mov	r31, r0
     442:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <counter>

	
	while(1){
		
		
		SendInteger(counter);		
     446:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <counter+0x1>
     44a:	bf de       	rcall	.-642    	; 0x1ca <_Z11SendIntegeri>
     44c:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <counter>
		switch(counter){
     450:	f0 91 05 02 	lds	r31, 0x0205	; 0x800205 <counter+0x1>
     454:	31 97       	sbiw	r30, 0x01	; 1
     456:	ed 30       	cpi	r30, 0x0D	; 13
     458:	f1 05       	cpc	r31, r1
     45a:	98 f7       	brcc	.-26     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     45c:	88 27       	eor	r24, r24
     45e:	ee 58       	subi	r30, 0x8E	; 142
     460:	ff 4f       	sbci	r31, 0xFF	; 255
     462:	8f 4f       	sbci	r24, 0xFF	; 255
     464:	d9 c5       	rjmp	.+2994   	; 0x1018 <__tablejump2__>
			case 1:   // Start manuelt med brik
			if(newCount){
     466:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
     46a:	88 23       	and	r24, r24
     46c:	51 f3       	breq	.-44     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
				playStartSound();
     46e:	11 d3       	rcall	.+1570   	; 0xa92 <_Z14playStartSoundv>
     470:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
				newCount = false;
     474:	8f e3       	ldi	r24, 0x3F	; 63
     476:	9c e9       	ldi	r25, 0x9C	; 156
     478:	01 97       	sbiw	r24, 0x01	; 1
     47a:	f1 f7       	brne	.-4      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
     47c:	00 c0       	rjmp	.+0      	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
     47e:	00 00       	nop
				_delay_ms(10);
				TCNT3 = 0;
     480:	f8 01       	movw	r30, r16
     482:	11 82       	std	Z+1, r1	; 0x01
     484:	10 82       	st	Z, r1
				bLightStrength(15);
     486:	8f e0       	ldi	r24, 0x0F	; 15
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	6d de       	rcall	.-806    	; 0x166 <_Z14bLightStrengthi>
     48c:	ff ef       	ldi	r31, 0xFF	; 255
     48e:	2b e7       	ldi	r18, 0x7B	; 123
     490:	82 e9       	ldi	r24, 0x92	; 146
     492:	f1 50       	subi	r31, 0x01	; 1
     494:	20 40       	sbci	r18, 0x00	; 0
     496:	80 40       	sbci	r24, 0x00	; 0
     498:	e1 f7       	brne	.-8      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
     49a:	00 c0       	rjmp	.+0      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
     49c:	00 00       	nop
     49e:	82 e0       	ldi	r24, 0x02	; 2
				_delay_ms(3000); //Delay for at spille intro 10 sek
				TIMSK3 = 0b00000010;
     4a0:	f5 01       	movw	r30, r10
     4a2:	80 83       	st	Z, r24
				TCNT3 = 0;
     4a4:	f8 01       	movw	r30, r16
     4a6:	11 82       	std	Z+1, r1	; 0x01
     4a8:	10 82       	st	Z, r1
				bLightStrength(15);
     4aa:	8f e0       	ldi	r24, 0x0F	; 15
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	5b de       	rcall	.-842    	; 0x166 <_Z14bLightStrengthi>
     4b0:	8f e3       	ldi	r24, 0x3F	; 63
     4b2:	9c e9       	ldi	r25, 0x9C	; 156
     4b4:	01 97       	sbiw	r24, 0x01	; 1
     4b6:	f1 f7       	brne	.-4      	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
     4b8:	00 c0       	rjmp	.+0      	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
     4ba:	00 00       	nop
				_delay_ms(10);
				fLightOn();
     4bc:	6b de       	rcall	.-810    	; 0x194 <_Z8fLightOnv>
     4be:	9f ef       	ldi	r25, 0xFF	; 255
     4c0:	e9 ef       	ldi	r30, 0xF9	; 249
     4c2:	f0 e0       	ldi	r31, 0x00	; 0
     4c4:	91 50       	subi	r25, 0x01	; 1
     4c6:	e0 40       	sbci	r30, 0x00	; 0
     4c8:	f0 40       	sbci	r31, 0x00	; 0
     4ca:	e1 f7       	brne	.-8      	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
     4cc:	00 c0       	rjmp	.+0      	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
     4ce:	00 00       	nop
     4d0:	f0 92 03 02 	sts	0x0203, r15	; 0x800203 <__data_end+0x1>
				_delay_ms(20);
				MotorMode = 1;
     4d4:	e0 92 02 02 	sts	0x0202, r14	; 0x800202 <__data_end>
     4d8:	2f ef       	ldi	r18, 0xFF	; 255
     4da:	81 ee       	ldi	r24, 0xE1	; 225
     4dc:	94 e0       	ldi	r25, 0x04	; 4
     4de:	21 50       	subi	r18, 0x01	; 1
     4e0:	80 40       	sbci	r24, 0x00	; 0
     4e2:	90 40       	sbci	r25, 0x00	; 0
     4e4:	e1 f7       	brne	.-8      	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
     4e6:	00 c0       	rjmp	.+0      	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
     4e8:	00 00       	nop
				_delay_ms(100);
				TCNT1 = 0;
     4ea:	19 82       	std	Y+1, r1	; 0x01
     4ec:	18 82       	st	Y, r1
				setSpeed(99.0);
     4ee:	60 e0       	ldi	r22, 0x00	; 0
     4f0:	70 e0       	ldi	r23, 0x00	; 0
     4f2:	86 ec       	ldi	r24, 0xC6	; 198
     4f4:	92 e4       	ldi	r25, 0x42	; 66
     4f6:	68 d2       	rcall	.+1232   	; 0x9c8 <_Z8setSpeedf>
     4f8:	f0 92 05 02 	sts	0x0205, r15	; 0x800205 <counter+0x1>
				counter = 1;
     4fc:	e0 92 04 02 	sts	0x0204, r14	; 0x800204 <counter>
     500:	a0 cf       	rjmp	.-192    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
			
			
			break;
			
			case 2:  // 1. brik
			if(newCount){
     502:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
     506:	88 23       	and	r24, r24
     508:	09 f4       	brne	.+2      	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
				TCNT3 = 0;
     50a:	9b cf       	rjmp	.-202    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     50c:	f8 01       	movw	r30, r16
     50e:	11 82       	std	Z+1, r1	; 0x01
				bLightStrength(15);
     510:	10 82       	st	Z, r1
     512:	8f e0       	ldi	r24, 0x0F	; 15
     514:	90 e0       	ldi	r25, 0x00	; 0
     516:	27 de       	rcall	.-946    	; 0x166 <_Z14bLightStrengthi>
				playCoinSound();
     518:	ab d2       	rcall	.+1366   	; 0xa70 <_Z13playCoinSoundv>
     51a:	8f e3       	ldi	r24, 0x3F	; 63
     51c:	9c e9       	ldi	r25, 0x9C	; 156
     51e:	01 97       	sbiw	r24, 0x01	; 1
     520:	f1 f7       	brne	.-4      	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
     522:	00 c0       	rjmp	.+0      	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
     524:	00 00       	nop
				_delay_ms(10);
				newCount = false;
     526:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
				TCNT1 = 0;
     52a:	19 82       	std	Y+1, r1	; 0x01
     52c:	18 82       	st	Y, r1
				setSpeed(99.0);
     52e:	60 e0       	ldi	r22, 0x00	; 0
     530:	70 e0       	ldi	r23, 0x00	; 0
     532:	86 ec       	ldi	r24, 0xC6	; 198
     534:	92 e4       	ldi	r25, 0x42	; 66
     536:	48 d2       	rcall	.+1168   	; 0x9c8 <_Z8setSpeedf>
     538:	9f ef       	ldi	r25, 0xFF	; 255
     53a:	e2 e5       	ldi	r30, 0x52	; 82
     53c:	f7 e0       	ldi	r31, 0x07	; 7
     53e:	91 50       	subi	r25, 0x01	; 1
     540:	e0 40       	sbci	r30, 0x00	; 0
     542:	f0 40       	sbci	r31, 0x00	; 0
     544:	e1 f7       	brne	.-8      	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
     546:	00 c0       	rjmp	.+0      	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
     548:	00 00       	nop
     54a:	d0 92 05 02 	sts	0x0205, r13	; 0x800205 <counter+0x1>
				_delay_ms(150);
				counter = 2;
     54e:	c0 92 04 02 	sts	0x0204, r12	; 0x800204 <counter>
			}
			
			break;
			
			case 3:   // 2. brik
			if(newCount){
     552:	77 cf       	rjmp	.-274    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     554:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
     558:	88 23       	and	r24, r24
     55a:	09 f4       	brne	.+2      	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
				TCNT3 = 0;
     55c:	72 cf       	rjmp	.-284    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     55e:	f8 01       	movw	r30, r16
     560:	11 82       	std	Z+1, r1	; 0x01
				bLightStrength(15);
     562:	10 82       	st	Z, r1
     564:	8f e0       	ldi	r24, 0x0F	; 15
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	fe dd       	rcall	.-1028   	; 0x166 <_Z14bLightStrengthi>
				playCoinSound(); //Mario coin
     56a:	82 d2       	rcall	.+1284   	; 0xa70 <_Z13playCoinSoundv>
     56c:	8f e3       	ldi	r24, 0x3F	; 63
     56e:	9c e9       	ldi	r25, 0x9C	; 156
     570:	01 97       	sbiw	r24, 0x01	; 1
     572:	f1 f7       	brne	.-4      	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
     574:	00 c0       	rjmp	.+0      	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
     576:	00 00       	nop
				_delay_ms(10);
				newCount = false;
     578:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
				TCNT1 = 0;
     57c:	19 82       	std	Y+1, r1	; 0x01
     57e:	18 82       	st	Y, r1
				setSpeed(99.0);
     580:	60 e0       	ldi	r22, 0x00	; 0
     582:	70 e0       	ldi	r23, 0x00	; 0
     584:	86 ec       	ldi	r24, 0xC6	; 198
     586:	92 e4       	ldi	r25, 0x42	; 66
     588:	1f d2       	rcall	.+1086   	; 0x9c8 <_Z8setSpeedf>
     58a:	e3 e0       	ldi	r30, 0x03	; 3
				counter = 3;
     58c:	f0 e0       	ldi	r31, 0x00	; 0
     58e:	f0 93 05 02 	sts	0x0205, r31	; 0x800205 <counter+0x1>
     592:	e0 93 04 02 	sts	0x0204, r30	; 0x800204 <counter>
		
			
			break;
			
			case 4:   // 3. brik på bakken
			if(newCount){
     596:	55 cf       	rjmp	.-342    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     598:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
     59c:	88 23       	and	r24, r24
     59e:	09 f4       	brne	.+2      	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
				TCNT3 = 0;
     5a0:	50 cf       	rjmp	.-352    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     5a2:	f8 01       	movw	r30, r16
     5a4:	11 82       	std	Z+1, r1	; 0x01
				bLightStrength(15);
     5a6:	10 82       	st	Z, r1
     5a8:	8f e0       	ldi	r24, 0x0F	; 15
     5aa:	90 e0       	ldi	r25, 0x00	; 0
				playCoinSound(); //Mario coin
     5ac:	dc dd       	rcall	.-1096   	; 0x166 <_Z14bLightStrengthi>
     5ae:	60 d2       	rcall	.+1216   	; 0xa70 <_Z13playCoinSoundv>
     5b0:	8f e3       	ldi	r24, 0x3F	; 63
     5b2:	9c e9       	ldi	r25, 0x9C	; 156
     5b4:	01 97       	sbiw	r24, 0x01	; 1
     5b6:	f1 f7       	brne	.-4      	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
     5b8:	00 c0       	rjmp	.+0      	; 0x5ba <__LOCK_REGION_LENGTH__+0x1ba>
     5ba:	00 00       	nop
				_delay_ms(10);
				newCount = false;
     5bc:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
				TCNT1 = 0;
     5c0:	19 82       	std	Y+1, r1	; 0x01
     5c2:	18 82       	st	Y, r1
				setSpeed(99.0);
     5c4:	60 e0       	ldi	r22, 0x00	; 0
     5c6:	70 e0       	ldi	r23, 0x00	; 0
     5c8:	86 ec       	ldi	r24, 0xC6	; 198
     5ca:	92 e4       	ldi	r25, 0x42	; 66
     5cc:	fd d1       	rcall	.+1018   	; 0x9c8 <_Z8setSpeedf>
     5ce:	9f ef       	ldi	r25, 0xFF	; 255
     5d0:	e2 e5       	ldi	r30, 0x52	; 82
     5d2:	f7 e0       	ldi	r31, 0x07	; 7
     5d4:	91 50       	subi	r25, 0x01	; 1
     5d6:	e0 40       	sbci	r30, 0x00	; 0
     5d8:	f0 40       	sbci	r31, 0x00	; 0
     5da:	e1 f7       	brne	.-8      	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
     5dc:	00 c0       	rjmp	.+0      	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
				_delay_ms(150);
				counter = 4;
     5de:	00 00       	nop
     5e0:	84 e0       	ldi	r24, 0x04	; 4
     5e2:	90 e0       	ldi	r25, 0x00	; 0
     5e4:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <counter+0x1>
     5e8:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <counter>
			}
			break;
			
			case 5:  // 4. brik
			if(newCount){
     5ec:	2a cf       	rjmp	.-428    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     5ee:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
     5f2:	88 23       	and	r24, r24
     5f4:	09 f4       	brne	.+2      	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
				TCNT3 = 0;
     5f6:	25 cf       	rjmp	.-438    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     5f8:	f8 01       	movw	r30, r16
				bLightStrength(15);
     5fa:	11 82       	std	Z+1, r1	; 0x01
     5fc:	10 82       	st	Z, r1
     5fe:	8f e0       	ldi	r24, 0x0F	; 15
     600:	90 e0       	ldi	r25, 0x00	; 0
				playCoinSound(); //Mario coin
     602:	b1 dd       	rcall	.-1182   	; 0x166 <_Z14bLightStrengthi>
     604:	35 d2       	rcall	.+1130   	; 0xa70 <_Z13playCoinSoundv>
     606:	8f e3       	ldi	r24, 0x3F	; 63
     608:	9c e9       	ldi	r25, 0x9C	; 156
     60a:	01 97       	sbiw	r24, 0x01	; 1
     60c:	f1 f7       	brne	.-4      	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
     60e:	00 c0       	rjmp	.+0      	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
     610:	00 00       	nop
				_delay_ms(10);
				newCount = false;
     612:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
				TCNT1 = 0;
     616:	19 82       	std	Y+1, r1	; 0x01
     618:	18 82       	st	Y, r1
				setSpeed(99.0);
     61a:	60 e0       	ldi	r22, 0x00	; 0
     61c:	70 e0       	ldi	r23, 0x00	; 0
     61e:	86 ec       	ldi	r24, 0xC6	; 198
     620:	92 e4       	ldi	r25, 0x42	; 66
     622:	d2 d1       	rcall	.+932    	; 0x9c8 <_Z8setSpeedf>
     624:	9f ef       	ldi	r25, 0xFF	; 255
     626:	e2 e5       	ldi	r30, 0x52	; 82
     628:	f7 e0       	ldi	r31, 0x07	; 7
     62a:	91 50       	subi	r25, 0x01	; 1
     62c:	e0 40       	sbci	r30, 0x00	; 0
     62e:	f0 40       	sbci	r31, 0x00	; 0
     630:	e1 f7       	brne	.-8      	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
     632:	00 c0       	rjmp	.+0      	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
				_delay_ms(150);
				counter = 5;
     634:	00 00       	nop
     636:	85 e0       	ldi	r24, 0x05	; 5
     638:	90 e0       	ldi	r25, 0x00	; 0
     63a:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <counter+0x1>
     63e:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <counter>
			}
			
			break;
			
			case 6:  // 5. brik
			if(newCount){
     642:	ff ce       	rjmp	.-514    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     644:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
     648:	88 23       	and	r24, r24
				TCNT3 = 0;
     64a:	09 f4       	brne	.+2      	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
     64c:	fa ce       	rjmp	.-524    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     64e:	f8 01       	movw	r30, r16
				bLightStrength(15);
     650:	11 82       	std	Z+1, r1	; 0x01
     652:	10 82       	st	Z, r1
     654:	8f e0       	ldi	r24, 0x0F	; 15
     656:	90 e0       	ldi	r25, 0x00	; 0
				playCoinSound(); //Mario coin
     658:	86 dd       	rcall	.-1268   	; 0x166 <_Z14bLightStrengthi>
     65a:	0a d2       	rcall	.+1044   	; 0xa70 <_Z13playCoinSoundv>
     65c:	8f e3       	ldi	r24, 0x3F	; 63
     65e:	9c e9       	ldi	r25, 0x9C	; 156
     660:	01 97       	sbiw	r24, 0x01	; 1
     662:	f1 f7       	brne	.-4      	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
     664:	00 c0       	rjmp	.+0      	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
     666:	00 00       	nop
				_delay_ms(10);
				newCount = false;
     668:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
				TCNT1 = 0;
     66c:	19 82       	std	Y+1, r1	; 0x01
     66e:	18 82       	st	Y, r1
				setSpeed(80);
     670:	60 e0       	ldi	r22, 0x00	; 0
     672:	70 e0       	ldi	r23, 0x00	; 0
     674:	80 ea       	ldi	r24, 0xA0	; 160
     676:	92 e4       	ldi	r25, 0x42	; 66
     678:	a7 d1       	rcall	.+846    	; 0x9c8 <_Z8setSpeedf>
     67a:	9f ef       	ldi	r25, 0xFF	; 255
     67c:	e2 e5       	ldi	r30, 0x52	; 82
     67e:	f7 e0       	ldi	r31, 0x07	; 7
     680:	91 50       	subi	r25, 0x01	; 1
     682:	e0 40       	sbci	r30, 0x00	; 0
     684:	f0 40       	sbci	r31, 0x00	; 0
     686:	e1 f7       	brne	.-8      	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
     688:	00 c0       	rjmp	.+0      	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
     68a:	00 00       	nop
				_delay_ms(150);
				counter = 6;
     68c:	86 e0       	ldi	r24, 0x06	; 6
     68e:	90 e0       	ldi	r25, 0x00	; 0
     690:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <counter+0x1>
     694:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <counter>
			}
			
			break;
			
			case 7: // stop ved 6. brik
			if(newCount){
     698:	d4 ce       	rjmp	.-600    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     69a:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
     69e:	88 23       	and	r24, r24
				playCoinSound(); //Mario coin
     6a0:	09 f4       	brne	.+2      	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
     6a2:	cf ce       	rjmp	.-610    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     6a4:	e5 d1       	rcall	.+970    	; 0xa70 <_Z13playCoinSoundv>
     6a6:	ef e3       	ldi	r30, 0x3F	; 63
     6a8:	fc e9       	ldi	r31, 0x9C	; 156
     6aa:	31 97       	sbiw	r30, 0x01	; 1
     6ac:	f1 f7       	brne	.-4      	; 0x6aa <__LOCK_REGION_LENGTH__+0x2aa>
     6ae:	00 c0       	rjmp	.+0      	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
				_delay_ms(10);
				newCount = false;
     6b0:	00 00       	nop
     6b2:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
				MotorMode = 2;
     6b6:	d0 92 03 02 	sts	0x0203, r13	; 0x800203 <__data_end+0x1>
     6ba:	c0 92 02 02 	sts	0x0202, r12	; 0x800202 <__data_end>
				TCNT1 = 0;
     6be:	19 82       	std	Y+1, r1	; 0x01
				setSpeed(99.0);
     6c0:	18 82       	st	Y, r1
     6c2:	60 e0       	ldi	r22, 0x00	; 0
     6c4:	70 e0       	ldi	r23, 0x00	; 0
     6c6:	86 ec       	ldi	r24, 0xC6	; 198
     6c8:	92 e4       	ldi	r25, 0x42	; 66
				TCNT3 = 0;
     6ca:	7e d1       	rcall	.+764    	; 0x9c8 <_Z8setSpeedf>
     6cc:	f8 01       	movw	r30, r16
     6ce:	11 82       	std	Z+1, r1	; 0x01
				bLightStrength(254);
     6d0:	10 82       	st	Z, r1
     6d2:	8e ef       	ldi	r24, 0xFE	; 254
     6d4:	90 e0       	ldi	r25, 0x00	; 0
     6d6:	47 dd       	rcall	.-1394   	; 0x166 <_Z14bLightStrengthi>
				counter = 7;
     6d8:	30 92 05 02 	sts	0x0205, r3	; 0x800205 <counter+0x1>
     6dc:	20 92 04 02 	sts	0x0204, r2	; 0x800204 <counter>
     6e0:	ff ef       	ldi	r31, 0xFF	; 255
     6e2:	29 e6       	ldi	r18, 0x69	; 105
     6e4:	88 e1       	ldi	r24, 0x18	; 24
     6e6:	f1 50       	subi	r31, 0x01	; 1
     6e8:	20 40       	sbci	r18, 0x00	; 0
     6ea:	80 40       	sbci	r24, 0x00	; 0
     6ec:	e1 f7       	brne	.-8      	; 0x6e6 <__LOCK_REGION_LENGTH__+0x2e6>
				_delay_ms(500);
				TCNT3 = 0;
     6ee:	00 c0       	rjmp	.+0      	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
     6f0:	00 00       	nop
     6f2:	f8 01       	movw	r30, r16
				bLightStrength(15);
     6f4:	11 82       	std	Z+1, r1	; 0x01
     6f6:	10 82       	st	Z, r1
     6f8:	8f e0       	ldi	r24, 0x0F	; 15
     6fa:	90 e0       	ldi	r25, 0x00	; 0
			}
			
			break;
			
			case 8: // tilbage forbi 6. brik
			if(newCount){
     6fc:	34 dd       	rcall	.-1432   	; 0x166 <_Z14bLightStrengthi>
     6fe:	a1 ce       	rjmp	.-702    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     700:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
     704:	88 23       	and	r24, r24
				TCNT3 = 0;
     706:	09 f4       	brne	.+2      	; 0x70a <__LOCK_REGION_LENGTH__+0x30a>
     708:	9c ce       	rjmp	.-712    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     70a:	f8 01       	movw	r30, r16
				bLightStrength(15);
     70c:	11 82       	std	Z+1, r1	; 0x01
     70e:	10 82       	st	Z, r1
     710:	8f e0       	ldi	r24, 0x0F	; 15
     712:	90 e0       	ldi	r25, 0x00	; 0
				playCoinSound(); //Mario coin
     714:	28 dd       	rcall	.-1456   	; 0x166 <_Z14bLightStrengthi>
     716:	ac d1       	rcall	.+856    	; 0xa70 <_Z13playCoinSoundv>
     718:	8f e3       	ldi	r24, 0x3F	; 63
     71a:	9c e9       	ldi	r25, 0x9C	; 156
     71c:	01 97       	sbiw	r24, 0x01	; 1
     71e:	f1 f7       	brne	.-4      	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
     720:	00 c0       	rjmp	.+0      	; 0x722 <__LOCK_REGION_LENGTH__+0x322>
     722:	00 00       	nop
				_delay_ms(10);
				newCount = false;
     724:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
				TCNT1 = 0;
     728:	19 82       	std	Y+1, r1	; 0x01
     72a:	18 82       	st	Y, r1
				setSpeed(99.0);
     72c:	60 e0       	ldi	r22, 0x00	; 0
     72e:	70 e0       	ldi	r23, 0x00	; 0
     730:	86 ec       	ldi	r24, 0xC6	; 198
     732:	92 e4       	ldi	r25, 0x42	; 66
     734:	49 d1       	rcall	.+658    	; 0x9c8 <_Z8setSpeedf>
     736:	9f ef       	ldi	r25, 0xFF	; 255
     738:	e2 e5       	ldi	r30, 0x52	; 82
     73a:	f7 e0       	ldi	r31, 0x07	; 7
     73c:	91 50       	subi	r25, 0x01	; 1
     73e:	e0 40       	sbci	r30, 0x00	; 0
     740:	f0 40       	sbci	r31, 0x00	; 0
     742:	e1 f7       	brne	.-8      	; 0x73c <__LOCK_REGION_LENGTH__+0x33c>
     744:	00 c0       	rjmp	.+0      	; 0x746 <__LOCK_REGION_LENGTH__+0x346>
     746:	00 00       	nop
				_delay_ms(150);
				counter = 8;
     748:	50 92 05 02 	sts	0x0205, r5	; 0x800205 <counter+0x1>
     74c:	40 92 04 02 	sts	0x0204, r4	; 0x800204 <counter>
			
			break;
			
			case 9:
			
			counter++;
     750:	78 ce       	rjmp	.-784    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     752:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <counter>
     756:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <counter+0x1>
     75a:	01 96       	adiw	r24, 0x01	; 1
     75c:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <counter+0x1>
     760:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <counter>
			break;
			
			case 10: //Stop ved 5. brik igen
			if(newCount){
     764:	6e ce       	rjmp	.-804    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     766:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
     76a:	88 23       	and	r24, r24
     76c:	09 f4       	brne	.+2      	; 0x770 <__LOCK_REGION_LENGTH__+0x370>
				playCoinSound(); //Mario coin
     76e:	69 ce       	rjmp	.-814    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     770:	7f d1       	rcall	.+766    	; 0xa70 <_Z13playCoinSoundv>
     772:	8f e3       	ldi	r24, 0x3F	; 63
     774:	9c e9       	ldi	r25, 0x9C	; 156
     776:	01 97       	sbiw	r24, 0x01	; 1
     778:	f1 f7       	brne	.-4      	; 0x776 <__LOCK_REGION_LENGTH__+0x376>
     77a:	00 c0       	rjmp	.+0      	; 0x77c <__LOCK_REGION_LENGTH__+0x37c>
				_delay_ms(10);
				newCount = false;
     77c:	00 00       	nop
     77e:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
				TCNT3 = 0;
     782:	f8 01       	movw	r30, r16
     784:	11 82       	std	Z+1, r1	; 0x01
				bLightStrength(254);
     786:	10 82       	st	Z, r1
     788:	8e ef       	ldi	r24, 0xFE	; 254
     78a:	90 e0       	ldi	r25, 0x00	; 0
     78c:	ec dc       	rcall	.-1576   	; 0x166 <_Z14bLightStrengthi>
				MotorMode = 1;
     78e:	f0 92 03 02 	sts	0x0203, r15	; 0x800203 <__data_end+0x1>
     792:	e0 92 02 02 	sts	0x0202, r14	; 0x800202 <__data_end>
     796:	ff ef       	ldi	r31, 0xFF	; 255
     798:	21 ee       	ldi	r18, 0xE1	; 225
     79a:	84 e0       	ldi	r24, 0x04	; 4
     79c:	f1 50       	subi	r31, 0x01	; 1
     79e:	20 40       	sbci	r18, 0x00	; 0
     7a0:	80 40       	sbci	r24, 0x00	; 0
     7a2:	e1 f7       	brne	.-8      	; 0x79c <__LOCK_REGION_LENGTH__+0x39c>
     7a4:	00 c0       	rjmp	.+0      	; 0x7a6 <__LOCK_REGION_LENGTH__+0x3a6>
				_delay_ms(100);
				TCNT1 = 0;
     7a6:	00 00       	nop
     7a8:	19 82       	std	Y+1, r1	; 0x01
				setSpeed(99.0);
     7aa:	18 82       	st	Y, r1
     7ac:	60 e0       	ldi	r22, 0x00	; 0
     7ae:	70 e0       	ldi	r23, 0x00	; 0
     7b0:	86 ec       	ldi	r24, 0xC6	; 198
				counter = 10;
     7b2:	92 e4       	ldi	r25, 0x42	; 66
     7b4:	09 d1       	rcall	.+530    	; 0x9c8 <_Z8setSpeedf>
     7b6:	70 92 05 02 	sts	0x0205, r7	; 0x800205 <counter+0x1>
     7ba:	60 92 04 02 	sts	0x0204, r6	; 0x800204 <counter>
     7be:	9f ef       	ldi	r25, 0xFF	; 255
     7c0:	e9 e6       	ldi	r30, 0x69	; 105
     7c2:	f8 e1       	ldi	r31, 0x18	; 24
     7c4:	91 50       	subi	r25, 0x01	; 1
     7c6:	e0 40       	sbci	r30, 0x00	; 0
     7c8:	f0 40       	sbci	r31, 0x00	; 0
     7ca:	e1 f7       	brne	.-8      	; 0x7c4 <__LOCK_REGION_LENGTH__+0x3c4>
				_delay_ms(500);
				TCNT3 = 0;
     7cc:	00 c0       	rjmp	.+0      	; 0x7ce <__LOCK_REGION_LENGTH__+0x3ce>
     7ce:	00 00       	nop
     7d0:	f8 01       	movw	r30, r16
				bLightStrength(15);
     7d2:	11 82       	std	Z+1, r1	; 0x01
     7d4:	10 82       	st	Z, r1
     7d6:	8f e0       	ldi	r24, 0x0F	; 15
     7d8:	90 e0       	ldi	r25, 0x00	; 0
     7da:	c5 dc       	rcall	.-1654   	; 0x166 <_Z14bLightStrengthi>
		
			}
			break;
			
			case 11: // 5. brik igen
			if(newCount){
     7dc:	32 ce       	rjmp	.-924    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     7de:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
     7e2:	88 23       	and	r24, r24
				TCNT3 = 0;
     7e4:	09 f4       	brne	.+2      	; 0x7e8 <__LOCK_REGION_LENGTH__+0x3e8>
     7e6:	2d ce       	rjmp	.-934    	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     7e8:	f8 01       	movw	r30, r16
				bLightStrength(15);
     7ea:	11 82       	std	Z+1, r1	; 0x01
     7ec:	10 82       	st	Z, r1
     7ee:	8f e0       	ldi	r24, 0x0F	; 15
				playCoinSound(); //Mario coin
     7f0:	90 e0       	ldi	r25, 0x00	; 0
     7f2:	b9 dc       	rcall	.-1678   	; 0x166 <_Z14bLightStrengthi>
     7f4:	3d d1       	rcall	.+634    	; 0xa70 <_Z13playCoinSoundv>
     7f6:	8f e3       	ldi	r24, 0x3F	; 63
     7f8:	9c e9       	ldi	r25, 0x9C	; 156
     7fa:	01 97       	sbiw	r24, 0x01	; 1
     7fc:	f1 f7       	brne	.-4      	; 0x7fa <__LOCK_REGION_LENGTH__+0x3fa>
     7fe:	00 c0       	rjmp	.+0      	; 0x800 <__LOCK_REGION_LENGTH__+0x400>
				_delay_ms(10);
				newCount = false;
     800:	00 00       	nop
     802:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
				MotorMode = 1;
     806:	f0 92 03 02 	sts	0x0203, r15	; 0x800203 <__data_end+0x1>
     80a:	e0 92 02 02 	sts	0x0202, r14	; 0x800202 <__data_end>
     80e:	9f ef       	ldi	r25, 0xFF	; 255
     810:	e1 ee       	ldi	r30, 0xE1	; 225
     812:	f4 e0       	ldi	r31, 0x04	; 4
     814:	91 50       	subi	r25, 0x01	; 1
     816:	e0 40       	sbci	r30, 0x00	; 0
     818:	f0 40       	sbci	r31, 0x00	; 0
				_delay_ms(100);
				TCNT1 = 0;
     81a:	e1 f7       	brne	.-8      	; 0x814 <__LOCK_REGION_LENGTH__+0x414>
     81c:	00 c0       	rjmp	.+0      	; 0x81e <__LOCK_REGION_LENGTH__+0x41e>
				setSpeed(80.0);
     81e:	00 00       	nop
     820:	19 82       	std	Y+1, r1	; 0x01
     822:	18 82       	st	Y, r1
     824:	60 e0       	ldi	r22, 0x00	; 0
     826:	70 e0       	ldi	r23, 0x00	; 0
     828:	80 ea       	ldi	r24, 0xA0	; 160
     82a:	92 e4       	ldi	r25, 0x42	; 66
			}
			break;
			
			case 12: // 6. brik igen 
			if(newCount){
     82c:	cd d0       	rcall	.+410    	; 0x9c8 <_Z8setSpeedf>
     82e:	09 ce       	rjmp	.-1006   	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     830:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
				playCoinSound(); //Mario coin
     834:	88 23       	and	r24, r24
     836:	09 f4       	brne	.+2      	; 0x83a <__LOCK_REGION_LENGTH__+0x43a>
     838:	04 ce       	rjmp	.-1016   	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     83a:	1a d1       	rcall	.+564    	; 0xa70 <_Z13playCoinSoundv>
     83c:	8f e3       	ldi	r24, 0x3F	; 63
     83e:	9c e9       	ldi	r25, 0x9C	; 156
     840:	01 97       	sbiw	r24, 0x01	; 1
     842:	f1 f7       	brne	.-4      	; 0x840 <__LOCK_REGION_LENGTH__+0x440>
				_delay_ms(10);
				newCount = false;
     844:	00 c0       	rjmp	.+0      	; 0x846 <__LOCK_REGION_LENGTH__+0x446>
     846:	00 00       	nop
				TCNT1 = 0;
     848:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
				setSpeed(0);
     84c:	19 82       	std	Y+1, r1	; 0x01
     84e:	18 82       	st	Y, r1
     850:	60 e0       	ldi	r22, 0x00	; 0
     852:	70 e0       	ldi	r23, 0x00	; 0
     854:	cb 01       	movw	r24, r22
				MotorMode = 0;
     856:	b8 d0       	rcall	.+368    	; 0x9c8 <_Z8setSpeedf>
     858:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <__data_end+0x1>
     85c:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <__data_end>
				TCNT3 = 0;
     860:	f8 01       	movw	r30, r16
     862:	11 82       	std	Z+1, r1	; 0x01
				bLightStrength(254);
     864:	10 82       	st	Z, r1
     866:	8e ef       	ldi	r24, 0xFE	; 254
     868:	90 e0       	ldi	r25, 0x00	; 0
     86a:	7d dc       	rcall	.-1798   	; 0x166 <_Z14bLightStrengthi>
     86c:	ff ef       	ldi	r31, 0xFF	; 255
     86e:	29 e6       	ldi	r18, 0x69	; 105
     870:	88 e1       	ldi	r24, 0x18	; 24
     872:	f1 50       	subi	r31, 0x01	; 1
     874:	20 40       	sbci	r18, 0x00	; 0
     876:	80 40       	sbci	r24, 0x00	; 0
     878:	e1 f7       	brne	.-8      	; 0x872 <__LOCK_REGION_LENGTH__+0x472>
     87a:	00 c0       	rjmp	.+0      	; 0x87c <__LOCK_REGION_LENGTH__+0x47c>
				_delay_ms(500);
				TCNT3 = 0;
     87c:	00 00       	nop
     87e:	f8 01       	movw	r30, r16
				bLightStrength(15);
     880:	11 82       	std	Z+1, r1	; 0x01
     882:	10 82       	st	Z, r1
     884:	8f e0       	ldi	r24, 0x0F	; 15
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	6e dc       	rcall	.-1828   	; 0x166 <_Z14bLightStrengthi>
     88a:	ff ef       	ldi	r31, 0xFF	; 255
     88c:	27 e8       	ldi	r18, 0x87	; 135
     88e:	83 e1       	ldi	r24, 0x13	; 19
     890:	f1 50       	subi	r31, 0x01	; 1
     892:	20 40       	sbci	r18, 0x00	; 0
     894:	80 40       	sbci	r24, 0x00	; 0
     896:	e1 f7       	brne	.-8      	; 0x890 <__LOCK_REGION_LENGTH__+0x490>
				_delay_ms(400);
				MotorMode = 1;
     898:	00 c0       	rjmp	.+0      	; 0x89a <__LOCK_REGION_LENGTH__+0x49a>
     89a:	00 00       	nop
     89c:	f0 92 03 02 	sts	0x0203, r15	; 0x800203 <__data_end+0x1>
     8a0:	e0 92 02 02 	sts	0x0202, r14	; 0x800202 <__data_end>
     8a4:	9f ef       	ldi	r25, 0xFF	; 255
     8a6:	e1 ee       	ldi	r30, 0xE1	; 225
     8a8:	f4 e0       	ldi	r31, 0x04	; 4
     8aa:	91 50       	subi	r25, 0x01	; 1
     8ac:	e0 40       	sbci	r30, 0x00	; 0
     8ae:	f0 40       	sbci	r31, 0x00	; 0
				_delay_ms(100);
				TCNT1 = 0;
     8b0:	e1 f7       	brne	.-8      	; 0x8aa <__LOCK_REGION_LENGTH__+0x4aa>
     8b2:	00 c0       	rjmp	.+0      	; 0x8b4 <__LOCK_REGION_LENGTH__+0x4b4>
				setSpeed(80.0);
     8b4:	00 00       	nop
     8b6:	19 82       	std	Y+1, r1	; 0x01
     8b8:	18 82       	st	Y, r1
     8ba:	60 e0       	ldi	r22, 0x00	; 0
     8bc:	70 e0       	ldi	r23, 0x00	; 0
     8be:	80 ea       	ldi	r24, 0xA0	; 160
				counter = 12;
     8c0:	92 e4       	ldi	r25, 0x42	; 66
     8c2:	82 d0       	rcall	.+260    	; 0x9c8 <_Z8setSpeedf>
     8c4:	90 92 05 02 	sts	0x0205, r9	; 0x800205 <counter+0x1>
     8c8:	80 92 04 02 	sts	0x0204, r8	; 0x800204 <counter>
			}
			
			break;
			
			case 13: // Stop efter 7. brik
			if(newCount){
     8cc:	ba cd       	rjmp	.-1164   	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     8ce:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
				playCoinSound(); //Mario coin
     8d2:	88 23       	and	r24, r24
     8d4:	09 f4       	brne	.+2      	; 0x8d8 <__LOCK_REGION_LENGTH__+0x4d8>
				newCount = false;
     8d6:	b5 cd       	rjmp	.-1174   	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
     8d8:	cb d0       	rcall	.+406    	; 0xa70 <_Z13playCoinSoundv>
				TCNT3 = 0;
     8da:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
     8de:	f8 01       	movw	r30, r16
				bLightStrength(254);
     8e0:	11 82       	std	Z+1, r1	; 0x01
     8e2:	10 82       	st	Z, r1
     8e4:	8e ef       	ldi	r24, 0xFE	; 254
     8e6:	90 e0       	ldi	r25, 0x00	; 0
     8e8:	3e dc       	rcall	.-1924   	; 0x166 <_Z14bLightStrengthi>
     8ea:	ff ef       	ldi	r31, 0xFF	; 255
     8ec:	21 ee       	ldi	r18, 0xE1	; 225
     8ee:	84 e0       	ldi	r24, 0x04	; 4
     8f0:	f1 50       	subi	r31, 0x01	; 1
     8f2:	20 40       	sbci	r18, 0x00	; 0
     8f4:	80 40       	sbci	r24, 0x00	; 0
     8f6:	e1 f7       	brne	.-8      	; 0x8f0 <__LOCK_REGION_LENGTH__+0x4f0>
				_delay_ms(100);
				TCNT1 = 0;
     8f8:	00 c0       	rjmp	.+0      	; 0x8fa <__LOCK_REGION_LENGTH__+0x4fa>
     8fa:	00 00       	nop
				setSpeed(80.0);
     8fc:	19 82       	std	Y+1, r1	; 0x01
     8fe:	18 82       	st	Y, r1
     900:	60 e0       	ldi	r22, 0x00	; 0
     902:	70 e0       	ldi	r23, 0x00	; 0
     904:	80 ea       	ldi	r24, 0xA0	; 160
     906:	92 e4       	ldi	r25, 0x42	; 66
     908:	5f d0       	rcall	.+190    	; 0x9c8 <_Z8setSpeedf>
     90a:	9f ef       	ldi	r25, 0xFF	; 255
     90c:	e1 ee       	ldi	r30, 0xE1	; 225
     90e:	f4 e0       	ldi	r31, 0x04	; 4
     910:	91 50       	subi	r25, 0x01	; 1
     912:	e0 40       	sbci	r30, 0x00	; 0
     914:	f0 40       	sbci	r31, 0x00	; 0
     916:	e1 f7       	brne	.-8      	; 0x910 <__LOCK_REGION_LENGTH__+0x510>
				_delay_ms(100);
				TCNT1 = 0;
     918:	00 c0       	rjmp	.+0      	; 0x91a <__LOCK_REGION_LENGTH__+0x51a>
				setSpeed(60.0);
     91a:	00 00       	nop
     91c:	19 82       	std	Y+1, r1	; 0x01
     91e:	18 82       	st	Y, r1
     920:	60 e0       	ldi	r22, 0x00	; 0
     922:	70 e0       	ldi	r23, 0x00	; 0
     924:	80 e7       	ldi	r24, 0x70	; 112
     926:	92 e4       	ldi	r25, 0x42	; 66
     928:	4f d0       	rcall	.+158    	; 0x9c8 <_Z8setSpeedf>
     92a:	2f ef       	ldi	r18, 0xFF	; 255
     92c:	81 ee       	ldi	r24, 0xE1	; 225
     92e:	94 e0       	ldi	r25, 0x04	; 4
     930:	21 50       	subi	r18, 0x01	; 1
     932:	80 40       	sbci	r24, 0x00	; 0
     934:	90 40       	sbci	r25, 0x00	; 0
				_delay_ms(100);
				TCNT1 = 0;
     936:	e1 f7       	brne	.-8      	; 0x930 <__LOCK_REGION_LENGTH__+0x530>
     938:	00 c0       	rjmp	.+0      	; 0x93a <__LOCK_REGION_LENGTH__+0x53a>
				setSpeed(40.0);
     93a:	00 00       	nop
     93c:	19 82       	std	Y+1, r1	; 0x01
     93e:	18 82       	st	Y, r1
     940:	60 e0       	ldi	r22, 0x00	; 0
     942:	70 e0       	ldi	r23, 0x00	; 0
     944:	80 e2       	ldi	r24, 0x20	; 32
     946:	92 e4       	ldi	r25, 0x42	; 66
     948:	3f d0       	rcall	.+126    	; 0x9c8 <_Z8setSpeedf>
     94a:	ef ef       	ldi	r30, 0xFF	; 255
     94c:	f1 ee       	ldi	r31, 0xE1	; 225
     94e:	24 e0       	ldi	r18, 0x04	; 4
     950:	e1 50       	subi	r30, 0x01	; 1
     952:	f0 40       	sbci	r31, 0x00	; 0
     954:	20 40       	sbci	r18, 0x00	; 0
     956:	e1 f7       	brne	.-8      	; 0x950 <__LOCK_REGION_LENGTH__+0x550>
				_delay_ms(100);
				TCNT1 = 0;
     958:	00 c0       	rjmp	.+0      	; 0x95a <__LOCK_REGION_LENGTH__+0x55a>
     95a:	00 00       	nop
				setSpeed(20.0);
     95c:	19 82       	std	Y+1, r1	; 0x01
     95e:	18 82       	st	Y, r1
     960:	60 e0       	ldi	r22, 0x00	; 0
     962:	70 e0       	ldi	r23, 0x00	; 0
     964:	80 ea       	ldi	r24, 0xA0	; 160
     966:	91 e4       	ldi	r25, 0x41	; 65
     968:	2f d0       	rcall	.+94     	; 0x9c8 <_Z8setSpeedf>
     96a:	8f ef       	ldi	r24, 0xFF	; 255
     96c:	91 ee       	ldi	r25, 0xE1	; 225
     96e:	e4 e0       	ldi	r30, 0x04	; 4
     970:	81 50       	subi	r24, 0x01	; 1
     972:	90 40       	sbci	r25, 0x00	; 0
     974:	e0 40       	sbci	r30, 0x00	; 0
     976:	e1 f7       	brne	.-8      	; 0x970 <__LOCK_REGION_LENGTH__+0x570>
     978:	00 c0       	rjmp	.+0      	; 0x97a <__LOCK_REGION_LENGTH__+0x57a>
				_delay_ms(100);
				fLightOff();
     97a:	00 00       	nop
     97c:	0e dc       	rcall	.-2020   	; 0x19a <_Z9fLightOffv>
				MotorMode = 0;
     97e:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <__data_end+0x1>
     982:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <__data_end>
     986:	8f e3       	ldi	r24, 0x3F	; 63
     988:	9c e9       	ldi	r25, 0x9C	; 156
     98a:	01 97       	sbiw	r24, 0x01	; 1
     98c:	f1 f7       	brne	.-4      	; 0x98a <__LOCK_REGION_LENGTH__+0x58a>
     98e:	00 c0       	rjmp	.+0      	; 0x990 <__LOCK_REGION_LENGTH__+0x590>
     990:	00 00       	nop
				_delay_ms(10);
				TIMSK3 = 0b00000000;
     992:	f5 01       	movw	r30, r10
     994:	10 82       	st	Z, r1
				PORTC = 0b00000000;
     996:	18 b8       	out	0x08, r1	; 8
				playEndSound(); //Mario end
     998:	8d d0       	rcall	.+282    	; 0xab4 <_Z12playEndSoundv>
     99a:	53 cd       	rjmp	.-1370   	; 0x442 <__LOCK_REGION_LENGTH__+0x42>

0000099c <_Z9initMotorv>:
#include "MotorDriver.h"
#include <stdio.h>
#include <avr/io.h>

void initMotor(){
	TCCR1A = (1<<COM1A1)|(0<<COM1A0)|(1<<WGM11)|(0<<WGM10); // Set compare mode 3 for OCR1A, clear on upcount, set on downcount.
     99c:	82 e8       	ldi	r24, 0x82	; 130
     99e:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
	TCCR1B = (1<<WGM13)|(0<<WGM12)|(1<<CS12)|(0<<CS11)|(0<<CS10); // Set Mode 10, PWM Phase correct ICR1 TOP & 256 prescaler
     9a2:	84 e1       	ldi	r24, 0x14	; 20
     9a4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
	ICR1 = 125;
     9a8:	8d e7       	ldi	r24, 0x7D	; 125
     9aa:	90 e0       	ldi	r25, 0x00	; 0
     9ac:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x700087>
     9b0:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x700086>
	TIMSK1 = 0b00000010;
     9b4:	82 e0       	ldi	r24, 0x02	; 2
     9b6:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x70006f>
	OCR1A = 0;
     9ba:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     9be:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
	DDRA = 0xFF; // Make pin A ports outputs, so we can trigger the H-Bridge.
     9c2:	8f ef       	ldi	r24, 0xFF	; 255
     9c4:	81 b9       	out	0x01, r24	; 1
     9c6:	08 95       	ret

000009c8 <_Z8setSpeedf>:
}

void setSpeed(float speed) {
     9c8:	cf 92       	push	r12
     9ca:	df 92       	push	r13
     9cc:	ef 92       	push	r14
     9ce:	ff 92       	push	r15
     9d0:	cf 93       	push	r28
     9d2:	df 93       	push	r29
     9d4:	6b 01       	movw	r12, r22
     9d6:	7c 01       	movw	r14, r24
	
	if(speed > 100){
     9d8:	20 e0       	ldi	r18, 0x00	; 0
     9da:	30 e0       	ldi	r19, 0x00	; 0
     9dc:	48 ec       	ldi	r20, 0xC8	; 200
     9de:	52 e4       	ldi	r21, 0x42	; 66
     9e0:	92 d2       	rcall	.+1316   	; 0xf06 <__gesf2>
     9e2:	18 16       	cp	r1, r24
     9e4:	64 f0       	brlt	.+24     	; 0x9fe <_Z8setSpeedf+0x36>
		speed = 100;
	}
	if(speed < 0){
     9e6:	20 e0       	ldi	r18, 0x00	; 0
     9e8:	30 e0       	ldi	r19, 0x00	; 0
     9ea:	a9 01       	movw	r20, r18
     9ec:	c7 01       	movw	r24, r14
     9ee:	b6 01       	movw	r22, r12
     9f0:	40 d1       	rcall	.+640    	; 0xc72 <__cmpsf2>
     9f2:	88 23       	and	r24, r24
     9f4:	64 f4       	brge	.+24     	; 0xa0e <_Z8setSpeedf+0x46>
		speed = 0;
     9f6:	c1 2c       	mov	r12, r1
     9f8:	d1 2c       	mov	r13, r1
     9fa:	76 01       	movw	r14, r12
     9fc:	08 c0       	rjmp	.+16     	; 0xa0e <_Z8setSpeedf+0x46>
}

void setSpeed(float speed) {
	
	if(speed > 100){
		speed = 100;
     9fe:	0f 2e       	mov	r0, r31
     a00:	c1 2c       	mov	r12, r1
     a02:	d1 2c       	mov	r13, r1
     a04:	f8 ec       	ldi	r31, 0xC8	; 200
     a06:	ef 2e       	mov	r14, r31
     a08:	f2 e4       	ldi	r31, 0x42	; 66
     a0a:	ff 2e       	mov	r15, r31
     a0c:	f0 2d       	mov	r31, r0
	}
	if(speed < 0){
		speed = 0;
	}
	speed = speed / 100;
	OCR1A = (1-speed)*ICR1;
     a0e:	c0 91 86 00 	lds	r28, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x700086>
     a12:	d0 91 87 00 	lds	r29, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x700087>
     a16:	20 e0       	ldi	r18, 0x00	; 0
     a18:	30 e0       	ldi	r19, 0x00	; 0
     a1a:	48 ec       	ldi	r20, 0xC8	; 200
     a1c:	52 e4       	ldi	r21, 0x42	; 66
     a1e:	c7 01       	movw	r24, r14
     a20:	b6 01       	movw	r22, r12
     a22:	2b d1       	rcall	.+598    	; 0xc7a <__divsf3>
     a24:	9b 01       	movw	r18, r22
     a26:	ac 01       	movw	r20, r24
     a28:	60 e0       	ldi	r22, 0x00	; 0
     a2a:	70 e0       	ldi	r23, 0x00	; 0
     a2c:	80 e8       	ldi	r24, 0x80	; 128
     a2e:	9f e3       	ldi	r25, 0x3F	; 63
     a30:	bb d0       	rcall	.+374    	; 0xba8 <__subsf3>
     a32:	6b 01       	movw	r12, r22
     a34:	7c 01       	movw	r14, r24
     a36:	be 01       	movw	r22, r28
     a38:	80 e0       	ldi	r24, 0x00	; 0
     a3a:	90 e0       	ldi	r25, 0x00	; 0
     a3c:	b2 d1       	rcall	.+868    	; 0xda2 <__floatunsisf>
     a3e:	9b 01       	movw	r18, r22
     a40:	ac 01       	movw	r20, r24
     a42:	c7 01       	movw	r24, r14
     a44:	b6 01       	movw	r22, r12
     a46:	63 d2       	rcall	.+1222   	; 0xf0e <__mulsf3>
     a48:	80 d1       	rcall	.+768    	; 0xd4a <__fixunssfsi>
     a4a:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
     a4e:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
     a52:	df 91       	pop	r29
     a54:	cf 91       	pop	r28
     a56:	ff 90       	pop	r15
     a58:	ef 90       	pop	r14
     a5a:	df 90       	pop	r13
     a5c:	cf 90       	pop	r12
     a5e:	08 95       	ret

00000a60 <_Z8SendCharc>:
	volumeMax();
}

void SendChar(char Tegn)
{
   while(!(UCSR2A & (1<<UDRE2))){
     a60:	e0 ed       	ldi	r30, 0xD0	; 208
     a62:	f0 e0       	ldi	r31, 0x00	; 0
     a64:	90 81       	ld	r25, Z
     a66:	95 ff       	sbrs	r25, 5
     a68:	fd cf       	rjmp	.-6      	; 0xa64 <_Z8SendCharc+0x4>
	   
   }
   UDR2 = Tegn;
     a6a:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
     a6e:	08 95       	ret

00000a70 <_Z13playCoinSoundv>:
}

void playCoinSound()
{
	SendChar(0x7E);
     a70:	8e e7       	ldi	r24, 0x7E	; 126
     a72:	f6 df       	rcall	.-20     	; 0xa60 <_Z8SendCharc>
	SendChar(0x0F);
     a74:	8f e0       	ldi	r24, 0x0F	; 15
     a76:	f4 df       	rcall	.-24     	; 0xa60 <_Z8SendCharc>
	SendChar(0x00);
     a78:	80 e0       	ldi	r24, 0x00	; 0
     a7a:	f2 df       	rcall	.-28     	; 0xa60 <_Z8SendCharc>
	SendChar(0x01);
     a7c:	81 e0       	ldi	r24, 0x01	; 1
     a7e:	f0 df       	rcall	.-32     	; 0xa60 <_Z8SendCharc>
	SendChar(0x02);
     a80:	82 e0       	ldi	r24, 0x02	; 2
     a82:	ee df       	rcall	.-36     	; 0xa60 <_Z8SendCharc>
	SendChar(0xFF);
     a84:	8f ef       	ldi	r24, 0xFF	; 255
     a86:	ec df       	rcall	.-40     	; 0xa60 <_Z8SendCharc>
	SendChar(0xEE);
     a88:	8e ee       	ldi	r24, 0xEE	; 238
     a8a:	ea df       	rcall	.-44     	; 0xa60 <_Z8SendCharc>
     a8c:	8f ee       	ldi	r24, 0xEF	; 239
	SendChar(0xEF);
     a8e:	e8 cf       	rjmp	.-48     	; 0xa60 <_Z8SendCharc>
     a90:	08 95       	ret

00000a92 <_Z14playStartSoundv>:
     a92:	8e e7       	ldi	r24, 0x7E	; 126
     a94:	e5 df       	rcall	.-54     	; 0xa60 <_Z8SendCharc>
};

void playStartSound()
{
	SendChar(0x7E);
	SendChar(0x0F);
     a96:	8f e0       	ldi	r24, 0x0F	; 15
     a98:	e3 df       	rcall	.-58     	; 0xa60 <_Z8SendCharc>
	SendChar(0x00);
     a9a:	80 e0       	ldi	r24, 0x00	; 0
     a9c:	e1 df       	rcall	.-62     	; 0xa60 <_Z8SendCharc>
	SendChar(0x01);
     a9e:	81 e0       	ldi	r24, 0x01	; 1
     aa0:	df df       	rcall	.-66     	; 0xa60 <_Z8SendCharc>
	SendChar(0x01);
     aa2:	81 e0       	ldi	r24, 0x01	; 1
     aa4:	dd df       	rcall	.-70     	; 0xa60 <_Z8SendCharc>
	SendChar(0xFF);
     aa6:	8f ef       	ldi	r24, 0xFF	; 255
     aa8:	db df       	rcall	.-74     	; 0xa60 <_Z8SendCharc>
	SendChar(0xEF);
     aaa:	8f ee       	ldi	r24, 0xEF	; 239
     aac:	d9 df       	rcall	.-78     	; 0xa60 <_Z8SendCharc>
     aae:	8f ee       	ldi	r24, 0xEF	; 239
	SendChar(0xEF);
     ab0:	d7 cf       	rjmp	.-82     	; 0xa60 <_Z8SendCharc>
     ab2:	08 95       	ret

00000ab4 <_Z12playEndSoundv>:
     ab4:	8e e7       	ldi	r24, 0x7E	; 126
     ab6:	d4 df       	rcall	.-88     	; 0xa60 <_Z8SendCharc>
};

void playEndSound()
{
	SendChar(0x7E);
	SendChar(0x0F);
     ab8:	8f e0       	ldi	r24, 0x0F	; 15
     aba:	d2 df       	rcall	.-92     	; 0xa60 <_Z8SendCharc>
	SendChar(0x00);
     abc:	80 e0       	ldi	r24, 0x00	; 0
     abe:	d0 df       	rcall	.-96     	; 0xa60 <_Z8SendCharc>
	SendChar(0x01);
     ac0:	81 e0       	ldi	r24, 0x01	; 1
     ac2:	ce df       	rcall	.-100    	; 0xa60 <_Z8SendCharc>
	SendChar(0x03);
     ac4:	83 e0       	ldi	r24, 0x03	; 3
     ac6:	cc df       	rcall	.-104    	; 0xa60 <_Z8SendCharc>
	SendChar(0xFF);
     ac8:	8f ef       	ldi	r24, 0xFF	; 255
     aca:	ca df       	rcall	.-108    	; 0xa60 <_Z8SendCharc>
	SendChar(0xED);
     acc:	8d ee       	ldi	r24, 0xED	; 237
     ace:	c8 df       	rcall	.-112    	; 0xa60 <_Z8SendCharc>
     ad0:	8f ee       	ldi	r24, 0xEF	; 239
	SendChar(0xEF);
     ad2:	c6 cf       	rjmp	.-116    	; 0xa60 <_Z8SendCharc>
     ad4:	08 95       	ret

00000ad6 <_Z9volumeMaxv>:
     ad6:	8e e7       	ldi	r24, 0x7E	; 126
     ad8:	c3 df       	rcall	.-122    	; 0xa60 <_Z8SendCharc>

void volumeMax()
{

	SendChar(0x7E);
	SendChar(0x06);
     ada:	86 e0       	ldi	r24, 0x06	; 6
     adc:	c1 df       	rcall	.-126    	; 0xa60 <_Z8SendCharc>
	SendChar(0x00);
     ade:	80 e0       	ldi	r24, 0x00	; 0
     ae0:	bf df       	rcall	.-130    	; 0xa60 <_Z8SendCharc>
	SendChar(0x00);
     ae2:	80 e0       	ldi	r24, 0x00	; 0
     ae4:	bd df       	rcall	.-134    	; 0xa60 <_Z8SendCharc>
	SendChar(0x1E);
     ae6:	8e e1       	ldi	r24, 0x1E	; 30
     ae8:	bb df       	rcall	.-138    	; 0xa60 <_Z8SendCharc>
	SendChar(0xFF);
     aea:	8f ef       	ldi	r24, 0xFF	; 255
     aec:	b9 df       	rcall	.-142    	; 0xa60 <_Z8SendCharc>
	SendChar(0xDC);
     aee:	8c ed       	ldi	r24, 0xDC	; 220
     af0:	b7 df       	rcall	.-146    	; 0xa60 <_Z8SendCharc>
     af2:	8f ee       	ldi	r24, 0xEF	; 239
	SendChar(0xEF);
     af4:	b5 cf       	rjmp	.-150    	; 0xa60 <_Z8SendCharc>
     af6:	08 95       	ret

00000af8 <_Z8InitUARTmhb>:
     af8:	0f 93       	push	r16
     afa:	1f 93       	push	r17
#include <avr/io.h>
#include <avr/interrupt.h>

void InitUART(unsigned long BAUD, unsigned char DataBit, bool Rx_Int)
{
   if(Rx_Int){
     afc:	22 23       	and	r18, r18
     afe:	29 f0       	breq	.+10     	; 0xb0a <_Z8InitUARTmhb+0x12>
	  UCSR2B = 0b10011000; 
     b00:	28 e9       	ldi	r18, 0x98	; 152
     b02:	20 93 d1 00 	sts	0x00D1, r18	; 0x8000d1 <__TEXT_REGION_LENGTH__+0x7000d1>
	  sei();
     b06:	78 94       	sei
     b08:	03 c0       	rjmp	.+6      	; 0xb10 <_Z8InitUARTmhb+0x18>
   }else{
	   UCSR2B = 0b00011000;
     b0a:	28 e1       	ldi	r18, 0x18	; 24
     b0c:	20 93 d1 00 	sts	0x00D1, r18	; 0x8000d1 <__TEXT_REGION_LENGTH__+0x7000d1>
   }
   if((BAUD >= 300) && (BAUD <= 115200) && (DataBit >= 5) && (DataBit <= 8)){
     b10:	8b 01       	movw	r16, r22
     b12:	9c 01       	movw	r18, r24
     b14:	0c 52       	subi	r16, 0x2C	; 44
     b16:	11 40       	sbci	r17, 0x01	; 1
     b18:	21 09       	sbc	r18, r1
     b1a:	31 09       	sbc	r19, r1
     b1c:	05 3d       	cpi	r16, 0xD5	; 213
     b1e:	10 4c       	sbci	r17, 0xC0	; 192
     b20:	21 40       	sbci	r18, 0x01	; 1
     b22:	31 05       	cpc	r19, r1
     b24:	08 f5       	brcc	.+66     	; 0xb68 <_Z8InitUARTmhb+0x70>
     b26:	2b ef       	ldi	r18, 0xFB	; 251
     b28:	24 0f       	add	r18, r20
     b2a:	24 30       	cpi	r18, 0x04	; 4
     b2c:	e8 f4       	brcc	.+58     	; 0xb68 <_Z8InitUARTmhb+0x70>
	   switch(DataBit){
     b2e:	46 30       	cpi	r20, 0x06	; 6
     b30:	61 f0       	breq	.+24     	; 0xb4a <_Z8InitUARTmhb+0x52>
     b32:	18 f4       	brcc	.+6      	; 0xb3a <_Z8InitUARTmhb+0x42>
     b34:	45 30       	cpi	r20, 0x05	; 5
     b36:	31 f0       	breq	.+12     	; 0xb44 <_Z8InitUARTmhb+0x4c>
     b38:	14 c0       	rjmp	.+40     	; 0xb62 <_Z8InitUARTmhb+0x6a>
     b3a:	47 30       	cpi	r20, 0x07	; 7
     b3c:	51 f0       	breq	.+20     	; 0xb52 <_Z8InitUARTmhb+0x5a>
     b3e:	48 30       	cpi	r20, 0x08	; 8
     b40:	61 f0       	breq	.+24     	; 0xb5a <_Z8InitUARTmhb+0x62>
     b42:	0f c0       	rjmp	.+30     	; 0xb62 <_Z8InitUARTmhb+0x6a>
		   case 5:
			   UCSR2C = 0b00000000;
     b44:	10 92 d2 00 	sts	0x00D2, r1	; 0x8000d2 <__TEXT_REGION_LENGTH__+0x7000d2>
			   break;
     b48:	0f c0       	rjmp	.+30     	; 0xb68 <_Z8InitUARTmhb+0x70>
		   
		   case 6:
			   UCSR2C = 0b00000010;
     b4a:	22 e0       	ldi	r18, 0x02	; 2
     b4c:	20 93 d2 00 	sts	0x00D2, r18	; 0x8000d2 <__TEXT_REGION_LENGTH__+0x7000d2>
			   break;
     b50:	0b c0       	rjmp	.+22     	; 0xb68 <_Z8InitUARTmhb+0x70>
		   
		   case 7:
			   UCSR2C = 0b00000100;
     b52:	24 e0       	ldi	r18, 0x04	; 4
     b54:	20 93 d2 00 	sts	0x00D2, r18	; 0x8000d2 <__TEXT_REGION_LENGTH__+0x7000d2>
			   break;
     b58:	07 c0       	rjmp	.+14     	; 0xb68 <_Z8InitUARTmhb+0x70>
		   
		   case 8:
			   UCSR2C = 0b00000110;
     b5a:	26 e0       	ldi	r18, 0x06	; 6
     b5c:	20 93 d2 00 	sts	0x00D2, r18	; 0x8000d2 <__TEXT_REGION_LENGTH__+0x7000d2>
			   break;
     b60:	03 c0       	rjmp	.+6      	; 0xb68 <_Z8InitUARTmhb+0x70>
		   
		   default:
			   UCSR2C = 0b00000110;
     b62:	26 e0       	ldi	r18, 0x06	; 6
     b64:	20 93 d2 00 	sts	0x00D2, r18	; 0x8000d2 <__TEXT_REGION_LENGTH__+0x7000d2>
			   break;
	   }
	}
	UBRR2L = ((F_CPU/(16*BAUD))-1);
     b68:	dc 01       	movw	r26, r24
     b6a:	cb 01       	movw	r24, r22
     b6c:	88 0f       	add	r24, r24
     b6e:	99 1f       	adc	r25, r25
     b70:	aa 1f       	adc	r26, r26
     b72:	bb 1f       	adc	r27, r27
     b74:	88 0f       	add	r24, r24
     b76:	99 1f       	adc	r25, r25
     b78:	aa 1f       	adc	r26, r26
     b7a:	bb 1f       	adc	r27, r27
     b7c:	9c 01       	movw	r18, r24
     b7e:	ad 01       	movw	r20, r26
     b80:	22 0f       	add	r18, r18
     b82:	33 1f       	adc	r19, r19
     b84:	44 1f       	adc	r20, r20
     b86:	55 1f       	adc	r21, r21
     b88:	22 0f       	add	r18, r18
     b8a:	33 1f       	adc	r19, r19
     b8c:	44 1f       	adc	r20, r20
     b8e:	55 1f       	adc	r21, r21
     b90:	60 e0       	ldi	r22, 0x00	; 0
     b92:	74 e2       	ldi	r23, 0x24	; 36
     b94:	84 ef       	ldi	r24, 0xF4	; 244
     b96:	90 e0       	ldi	r25, 0x00	; 0
     b98:	1d d2       	rcall	.+1082   	; 0xfd4 <__udivmodsi4>
     b9a:	21 50       	subi	r18, 0x01	; 1
     b9c:	20 93 d4 00 	sts	0x00D4, r18	; 0x8000d4 <__TEXT_REGION_LENGTH__+0x7000d4>
	volumeMax();
     ba0:	9a df       	rcall	.-204    	; 0xad6 <_Z9volumeMaxv>
     ba2:	1f 91       	pop	r17
}
     ba4:	0f 91       	pop	r16
     ba6:	08 95       	ret

00000ba8 <__subsf3>:
     ba8:	50 58       	subi	r21, 0x80	; 128

00000baa <__addsf3>:
     baa:	bb 27       	eor	r27, r27
     bac:	aa 27       	eor	r26, r26
     bae:	0e d0       	rcall	.+28     	; 0xbcc <__addsf3x>
     bb0:	70 c1       	rjmp	.+736    	; 0xe92 <__fp_round>
     bb2:	61 d1       	rcall	.+706    	; 0xe76 <__fp_pscA>
     bb4:	30 f0       	brcs	.+12     	; 0xbc2 <__addsf3+0x18>
     bb6:	66 d1       	rcall	.+716    	; 0xe84 <__fp_pscB>
     bb8:	20 f0       	brcs	.+8      	; 0xbc2 <__addsf3+0x18>
     bba:	31 f4       	brne	.+12     	; 0xbc8 <__addsf3+0x1e>
     bbc:	9f 3f       	cpi	r25, 0xFF	; 255
     bbe:	11 f4       	brne	.+4      	; 0xbc4 <__addsf3+0x1a>
     bc0:	1e f4       	brtc	.+6      	; 0xbc8 <__addsf3+0x1e>
     bc2:	56 c1       	rjmp	.+684    	; 0xe70 <__fp_nan>
     bc4:	0e f4       	brtc	.+2      	; 0xbc8 <__addsf3+0x1e>
     bc6:	e0 95       	com	r30
     bc8:	e7 fb       	bst	r30, 7
     bca:	4c c1       	rjmp	.+664    	; 0xe64 <__fp_inf>

00000bcc <__addsf3x>:
     bcc:	e9 2f       	mov	r30, r25
     bce:	72 d1       	rcall	.+740    	; 0xeb4 <__fp_split3>
     bd0:	80 f3       	brcs	.-32     	; 0xbb2 <__addsf3+0x8>
     bd2:	ba 17       	cp	r27, r26
     bd4:	62 07       	cpc	r22, r18
     bd6:	73 07       	cpc	r23, r19
     bd8:	84 07       	cpc	r24, r20
     bda:	95 07       	cpc	r25, r21
     bdc:	18 f0       	brcs	.+6      	; 0xbe4 <__addsf3x+0x18>
     bde:	71 f4       	brne	.+28     	; 0xbfc <__addsf3x+0x30>
     be0:	9e f5       	brtc	.+102    	; 0xc48 <__addsf3x+0x7c>
     be2:	8a c1       	rjmp	.+788    	; 0xef8 <__fp_zero>
     be4:	0e f4       	brtc	.+2      	; 0xbe8 <__addsf3x+0x1c>
     be6:	e0 95       	com	r30
     be8:	0b 2e       	mov	r0, r27
     bea:	ba 2f       	mov	r27, r26
     bec:	a0 2d       	mov	r26, r0
     bee:	0b 01       	movw	r0, r22
     bf0:	b9 01       	movw	r22, r18
     bf2:	90 01       	movw	r18, r0
     bf4:	0c 01       	movw	r0, r24
     bf6:	ca 01       	movw	r24, r20
     bf8:	a0 01       	movw	r20, r0
     bfa:	11 24       	eor	r1, r1
     bfc:	ff 27       	eor	r31, r31
     bfe:	59 1b       	sub	r21, r25
     c00:	99 f0       	breq	.+38     	; 0xc28 <__addsf3x+0x5c>
     c02:	59 3f       	cpi	r21, 0xF9	; 249
     c04:	50 f4       	brcc	.+20     	; 0xc1a <__addsf3x+0x4e>
     c06:	50 3e       	cpi	r21, 0xE0	; 224
     c08:	68 f1       	brcs	.+90     	; 0xc64 <__addsf3x+0x98>
     c0a:	1a 16       	cp	r1, r26
     c0c:	f0 40       	sbci	r31, 0x00	; 0
     c0e:	a2 2f       	mov	r26, r18
     c10:	23 2f       	mov	r18, r19
     c12:	34 2f       	mov	r19, r20
     c14:	44 27       	eor	r20, r20
     c16:	58 5f       	subi	r21, 0xF8	; 248
     c18:	f3 cf       	rjmp	.-26     	; 0xc00 <__addsf3x+0x34>
     c1a:	46 95       	lsr	r20
     c1c:	37 95       	ror	r19
     c1e:	27 95       	ror	r18
     c20:	a7 95       	ror	r26
     c22:	f0 40       	sbci	r31, 0x00	; 0
     c24:	53 95       	inc	r21
     c26:	c9 f7       	brne	.-14     	; 0xc1a <__addsf3x+0x4e>
     c28:	7e f4       	brtc	.+30     	; 0xc48 <__addsf3x+0x7c>
     c2a:	1f 16       	cp	r1, r31
     c2c:	ba 0b       	sbc	r27, r26
     c2e:	62 0b       	sbc	r22, r18
     c30:	73 0b       	sbc	r23, r19
     c32:	84 0b       	sbc	r24, r20
     c34:	ba f0       	brmi	.+46     	; 0xc64 <__addsf3x+0x98>
     c36:	91 50       	subi	r25, 0x01	; 1
     c38:	a1 f0       	breq	.+40     	; 0xc62 <__addsf3x+0x96>
     c3a:	ff 0f       	add	r31, r31
     c3c:	bb 1f       	adc	r27, r27
     c3e:	66 1f       	adc	r22, r22
     c40:	77 1f       	adc	r23, r23
     c42:	88 1f       	adc	r24, r24
     c44:	c2 f7       	brpl	.-16     	; 0xc36 <__addsf3x+0x6a>
     c46:	0e c0       	rjmp	.+28     	; 0xc64 <__addsf3x+0x98>
     c48:	ba 0f       	add	r27, r26
     c4a:	62 1f       	adc	r22, r18
     c4c:	73 1f       	adc	r23, r19
     c4e:	84 1f       	adc	r24, r20
     c50:	48 f4       	brcc	.+18     	; 0xc64 <__addsf3x+0x98>
     c52:	87 95       	ror	r24
     c54:	77 95       	ror	r23
     c56:	67 95       	ror	r22
     c58:	b7 95       	ror	r27
     c5a:	f7 95       	ror	r31
     c5c:	9e 3f       	cpi	r25, 0xFE	; 254
     c5e:	08 f0       	brcs	.+2      	; 0xc62 <__addsf3x+0x96>
     c60:	b3 cf       	rjmp	.-154    	; 0xbc8 <__addsf3+0x1e>
     c62:	93 95       	inc	r25
     c64:	88 0f       	add	r24, r24
     c66:	08 f0       	brcs	.+2      	; 0xc6a <__addsf3x+0x9e>
     c68:	99 27       	eor	r25, r25
     c6a:	ee 0f       	add	r30, r30
     c6c:	97 95       	ror	r25
     c6e:	87 95       	ror	r24
     c70:	08 95       	ret

00000c72 <__cmpsf2>:
     c72:	d4 d0       	rcall	.+424    	; 0xe1c <__fp_cmp>
     c74:	08 f4       	brcc	.+2      	; 0xc78 <__cmpsf2+0x6>
     c76:	81 e0       	ldi	r24, 0x01	; 1
     c78:	08 95       	ret

00000c7a <__divsf3>:
     c7a:	0c d0       	rcall	.+24     	; 0xc94 <__divsf3x>
     c7c:	0a c1       	rjmp	.+532    	; 0xe92 <__fp_round>
     c7e:	02 d1       	rcall	.+516    	; 0xe84 <__fp_pscB>
     c80:	40 f0       	brcs	.+16     	; 0xc92 <__divsf3+0x18>
     c82:	f9 d0       	rcall	.+498    	; 0xe76 <__fp_pscA>
     c84:	30 f0       	brcs	.+12     	; 0xc92 <__divsf3+0x18>
     c86:	21 f4       	brne	.+8      	; 0xc90 <__divsf3+0x16>
     c88:	5f 3f       	cpi	r21, 0xFF	; 255
     c8a:	19 f0       	breq	.+6      	; 0xc92 <__divsf3+0x18>
     c8c:	eb c0       	rjmp	.+470    	; 0xe64 <__fp_inf>
     c8e:	51 11       	cpse	r21, r1
     c90:	34 c1       	rjmp	.+616    	; 0xefa <__fp_szero>
     c92:	ee c0       	rjmp	.+476    	; 0xe70 <__fp_nan>

00000c94 <__divsf3x>:
     c94:	0f d1       	rcall	.+542    	; 0xeb4 <__fp_split3>
     c96:	98 f3       	brcs	.-26     	; 0xc7e <__divsf3+0x4>

00000c98 <__divsf3_pse>:
     c98:	99 23       	and	r25, r25
     c9a:	c9 f3       	breq	.-14     	; 0xc8e <__divsf3+0x14>
     c9c:	55 23       	and	r21, r21
     c9e:	b1 f3       	breq	.-20     	; 0xc8c <__divsf3+0x12>
     ca0:	95 1b       	sub	r25, r21
     ca2:	55 0b       	sbc	r21, r21
     ca4:	bb 27       	eor	r27, r27
     ca6:	aa 27       	eor	r26, r26
     ca8:	62 17       	cp	r22, r18
     caa:	73 07       	cpc	r23, r19
     cac:	84 07       	cpc	r24, r20
     cae:	38 f0       	brcs	.+14     	; 0xcbe <__divsf3_pse+0x26>
     cb0:	9f 5f       	subi	r25, 0xFF	; 255
     cb2:	5f 4f       	sbci	r21, 0xFF	; 255
     cb4:	22 0f       	add	r18, r18
     cb6:	33 1f       	adc	r19, r19
     cb8:	44 1f       	adc	r20, r20
     cba:	aa 1f       	adc	r26, r26
     cbc:	a9 f3       	breq	.-22     	; 0xca8 <__divsf3_pse+0x10>
     cbe:	33 d0       	rcall	.+102    	; 0xd26 <__divsf3_pse+0x8e>
     cc0:	0e 2e       	mov	r0, r30
     cc2:	3a f0       	brmi	.+14     	; 0xcd2 <__divsf3_pse+0x3a>
     cc4:	e0 e8       	ldi	r30, 0x80	; 128
     cc6:	30 d0       	rcall	.+96     	; 0xd28 <__divsf3_pse+0x90>
     cc8:	91 50       	subi	r25, 0x01	; 1
     cca:	50 40       	sbci	r21, 0x00	; 0
     ccc:	e6 95       	lsr	r30
     cce:	00 1c       	adc	r0, r0
     cd0:	ca f7       	brpl	.-14     	; 0xcc4 <__divsf3_pse+0x2c>
     cd2:	29 d0       	rcall	.+82     	; 0xd26 <__divsf3_pse+0x8e>
     cd4:	fe 2f       	mov	r31, r30
     cd6:	27 d0       	rcall	.+78     	; 0xd26 <__divsf3_pse+0x8e>
     cd8:	66 0f       	add	r22, r22
     cda:	77 1f       	adc	r23, r23
     cdc:	88 1f       	adc	r24, r24
     cde:	bb 1f       	adc	r27, r27
     ce0:	26 17       	cp	r18, r22
     ce2:	37 07       	cpc	r19, r23
     ce4:	48 07       	cpc	r20, r24
     ce6:	ab 07       	cpc	r26, r27
     ce8:	b0 e8       	ldi	r27, 0x80	; 128
     cea:	09 f0       	breq	.+2      	; 0xcee <__divsf3_pse+0x56>
     cec:	bb 0b       	sbc	r27, r27
     cee:	80 2d       	mov	r24, r0
     cf0:	bf 01       	movw	r22, r30
     cf2:	ff 27       	eor	r31, r31
     cf4:	93 58       	subi	r25, 0x83	; 131
     cf6:	5f 4f       	sbci	r21, 0xFF	; 255
     cf8:	2a f0       	brmi	.+10     	; 0xd04 <__divsf3_pse+0x6c>
     cfa:	9e 3f       	cpi	r25, 0xFE	; 254
     cfc:	51 05       	cpc	r21, r1
     cfe:	68 f0       	brcs	.+26     	; 0xd1a <__divsf3_pse+0x82>
     d00:	b1 c0       	rjmp	.+354    	; 0xe64 <__fp_inf>
     d02:	fb c0       	rjmp	.+502    	; 0xefa <__fp_szero>
     d04:	5f 3f       	cpi	r21, 0xFF	; 255
     d06:	ec f3       	brlt	.-6      	; 0xd02 <__divsf3_pse+0x6a>
     d08:	98 3e       	cpi	r25, 0xE8	; 232
     d0a:	dc f3       	brlt	.-10     	; 0xd02 <__divsf3_pse+0x6a>
     d0c:	86 95       	lsr	r24
     d0e:	77 95       	ror	r23
     d10:	67 95       	ror	r22
     d12:	b7 95       	ror	r27
     d14:	f7 95       	ror	r31
     d16:	9f 5f       	subi	r25, 0xFF	; 255
     d18:	c9 f7       	brne	.-14     	; 0xd0c <__divsf3_pse+0x74>
     d1a:	88 0f       	add	r24, r24
     d1c:	91 1d       	adc	r25, r1
     d1e:	96 95       	lsr	r25
     d20:	87 95       	ror	r24
     d22:	97 f9       	bld	r25, 7
     d24:	08 95       	ret
     d26:	e1 e0       	ldi	r30, 0x01	; 1
     d28:	66 0f       	add	r22, r22
     d2a:	77 1f       	adc	r23, r23
     d2c:	88 1f       	adc	r24, r24
     d2e:	bb 1f       	adc	r27, r27
     d30:	62 17       	cp	r22, r18
     d32:	73 07       	cpc	r23, r19
     d34:	84 07       	cpc	r24, r20
     d36:	ba 07       	cpc	r27, r26
     d38:	20 f0       	brcs	.+8      	; 0xd42 <__divsf3_pse+0xaa>
     d3a:	62 1b       	sub	r22, r18
     d3c:	73 0b       	sbc	r23, r19
     d3e:	84 0b       	sbc	r24, r20
     d40:	ba 0b       	sbc	r27, r26
     d42:	ee 1f       	adc	r30, r30
     d44:	88 f7       	brcc	.-30     	; 0xd28 <__divsf3_pse+0x90>
     d46:	e0 95       	com	r30
     d48:	08 95       	ret

00000d4a <__fixunssfsi>:
     d4a:	bc d0       	rcall	.+376    	; 0xec4 <__fp_splitA>
     d4c:	88 f0       	brcs	.+34     	; 0xd70 <__fixunssfsi+0x26>
     d4e:	9f 57       	subi	r25, 0x7F	; 127
     d50:	90 f0       	brcs	.+36     	; 0xd76 <__fixunssfsi+0x2c>
     d52:	b9 2f       	mov	r27, r25
     d54:	99 27       	eor	r25, r25
     d56:	b7 51       	subi	r27, 0x17	; 23
     d58:	a0 f0       	brcs	.+40     	; 0xd82 <__fixunssfsi+0x38>
     d5a:	d1 f0       	breq	.+52     	; 0xd90 <__fixunssfsi+0x46>
     d5c:	66 0f       	add	r22, r22
     d5e:	77 1f       	adc	r23, r23
     d60:	88 1f       	adc	r24, r24
     d62:	99 1f       	adc	r25, r25
     d64:	1a f0       	brmi	.+6      	; 0xd6c <__fixunssfsi+0x22>
     d66:	ba 95       	dec	r27
     d68:	c9 f7       	brne	.-14     	; 0xd5c <__fixunssfsi+0x12>
     d6a:	12 c0       	rjmp	.+36     	; 0xd90 <__fixunssfsi+0x46>
     d6c:	b1 30       	cpi	r27, 0x01	; 1
     d6e:	81 f0       	breq	.+32     	; 0xd90 <__fixunssfsi+0x46>
     d70:	c3 d0       	rcall	.+390    	; 0xef8 <__fp_zero>
     d72:	b1 e0       	ldi	r27, 0x01	; 1
     d74:	08 95       	ret
     d76:	c0 c0       	rjmp	.+384    	; 0xef8 <__fp_zero>
     d78:	67 2f       	mov	r22, r23
     d7a:	78 2f       	mov	r23, r24
     d7c:	88 27       	eor	r24, r24
     d7e:	b8 5f       	subi	r27, 0xF8	; 248
     d80:	39 f0       	breq	.+14     	; 0xd90 <__fixunssfsi+0x46>
     d82:	b9 3f       	cpi	r27, 0xF9	; 249
     d84:	cc f3       	brlt	.-14     	; 0xd78 <__fixunssfsi+0x2e>
     d86:	86 95       	lsr	r24
     d88:	77 95       	ror	r23
     d8a:	67 95       	ror	r22
     d8c:	b3 95       	inc	r27
     d8e:	d9 f7       	brne	.-10     	; 0xd86 <__fixunssfsi+0x3c>
     d90:	3e f4       	brtc	.+14     	; 0xda0 <__fixunssfsi+0x56>
     d92:	90 95       	com	r25
     d94:	80 95       	com	r24
     d96:	70 95       	com	r23
     d98:	61 95       	neg	r22
     d9a:	7f 4f       	sbci	r23, 0xFF	; 255
     d9c:	8f 4f       	sbci	r24, 0xFF	; 255
     d9e:	9f 4f       	sbci	r25, 0xFF	; 255
     da0:	08 95       	ret

00000da2 <__floatunsisf>:
     da2:	e8 94       	clt
     da4:	09 c0       	rjmp	.+18     	; 0xdb8 <__floatsisf+0x12>

00000da6 <__floatsisf>:
     da6:	97 fb       	bst	r25, 7
     da8:	3e f4       	brtc	.+14     	; 0xdb8 <__floatsisf+0x12>
     daa:	90 95       	com	r25
     dac:	80 95       	com	r24
     dae:	70 95       	com	r23
     db0:	61 95       	neg	r22
     db2:	7f 4f       	sbci	r23, 0xFF	; 255
     db4:	8f 4f       	sbci	r24, 0xFF	; 255
     db6:	9f 4f       	sbci	r25, 0xFF	; 255
     db8:	99 23       	and	r25, r25
     dba:	a9 f0       	breq	.+42     	; 0xde6 <__floatsisf+0x40>
     dbc:	f9 2f       	mov	r31, r25
     dbe:	96 e9       	ldi	r25, 0x96	; 150
     dc0:	bb 27       	eor	r27, r27
     dc2:	93 95       	inc	r25
     dc4:	f6 95       	lsr	r31
     dc6:	87 95       	ror	r24
     dc8:	77 95       	ror	r23
     dca:	67 95       	ror	r22
     dcc:	b7 95       	ror	r27
     dce:	f1 11       	cpse	r31, r1
     dd0:	f8 cf       	rjmp	.-16     	; 0xdc2 <__floatsisf+0x1c>
     dd2:	fa f4       	brpl	.+62     	; 0xe12 <__floatsisf+0x6c>
     dd4:	bb 0f       	add	r27, r27
     dd6:	11 f4       	brne	.+4      	; 0xddc <__floatsisf+0x36>
     dd8:	60 ff       	sbrs	r22, 0
     dda:	1b c0       	rjmp	.+54     	; 0xe12 <__floatsisf+0x6c>
     ddc:	6f 5f       	subi	r22, 0xFF	; 255
     dde:	7f 4f       	sbci	r23, 0xFF	; 255
     de0:	8f 4f       	sbci	r24, 0xFF	; 255
     de2:	9f 4f       	sbci	r25, 0xFF	; 255
     de4:	16 c0       	rjmp	.+44     	; 0xe12 <__floatsisf+0x6c>
     de6:	88 23       	and	r24, r24
     de8:	11 f0       	breq	.+4      	; 0xdee <__floatsisf+0x48>
     dea:	96 e9       	ldi	r25, 0x96	; 150
     dec:	11 c0       	rjmp	.+34     	; 0xe10 <__floatsisf+0x6a>
     dee:	77 23       	and	r23, r23
     df0:	21 f0       	breq	.+8      	; 0xdfa <__floatsisf+0x54>
     df2:	9e e8       	ldi	r25, 0x8E	; 142
     df4:	87 2f       	mov	r24, r23
     df6:	76 2f       	mov	r23, r22
     df8:	05 c0       	rjmp	.+10     	; 0xe04 <__floatsisf+0x5e>
     dfa:	66 23       	and	r22, r22
     dfc:	71 f0       	breq	.+28     	; 0xe1a <__floatsisf+0x74>
     dfe:	96 e8       	ldi	r25, 0x86	; 134
     e00:	86 2f       	mov	r24, r22
     e02:	70 e0       	ldi	r23, 0x00	; 0
     e04:	60 e0       	ldi	r22, 0x00	; 0
     e06:	2a f0       	brmi	.+10     	; 0xe12 <__floatsisf+0x6c>
     e08:	9a 95       	dec	r25
     e0a:	66 0f       	add	r22, r22
     e0c:	77 1f       	adc	r23, r23
     e0e:	88 1f       	adc	r24, r24
     e10:	da f7       	brpl	.-10     	; 0xe08 <__floatsisf+0x62>
     e12:	88 0f       	add	r24, r24
     e14:	96 95       	lsr	r25
     e16:	87 95       	ror	r24
     e18:	97 f9       	bld	r25, 7
     e1a:	08 95       	ret

00000e1c <__fp_cmp>:
     e1c:	99 0f       	add	r25, r25
     e1e:	00 08       	sbc	r0, r0
     e20:	55 0f       	add	r21, r21
     e22:	aa 0b       	sbc	r26, r26
     e24:	e0 e8       	ldi	r30, 0x80	; 128
     e26:	fe ef       	ldi	r31, 0xFE	; 254
     e28:	16 16       	cp	r1, r22
     e2a:	17 06       	cpc	r1, r23
     e2c:	e8 07       	cpc	r30, r24
     e2e:	f9 07       	cpc	r31, r25
     e30:	c0 f0       	brcs	.+48     	; 0xe62 <__fp_cmp+0x46>
     e32:	12 16       	cp	r1, r18
     e34:	13 06       	cpc	r1, r19
     e36:	e4 07       	cpc	r30, r20
     e38:	f5 07       	cpc	r31, r21
     e3a:	98 f0       	brcs	.+38     	; 0xe62 <__fp_cmp+0x46>
     e3c:	62 1b       	sub	r22, r18
     e3e:	73 0b       	sbc	r23, r19
     e40:	84 0b       	sbc	r24, r20
     e42:	95 0b       	sbc	r25, r21
     e44:	39 f4       	brne	.+14     	; 0xe54 <__fp_cmp+0x38>
     e46:	0a 26       	eor	r0, r26
     e48:	61 f0       	breq	.+24     	; 0xe62 <__fp_cmp+0x46>
     e4a:	23 2b       	or	r18, r19
     e4c:	24 2b       	or	r18, r20
     e4e:	25 2b       	or	r18, r21
     e50:	21 f4       	brne	.+8      	; 0xe5a <__fp_cmp+0x3e>
     e52:	08 95       	ret
     e54:	0a 26       	eor	r0, r26
     e56:	09 f4       	brne	.+2      	; 0xe5a <__fp_cmp+0x3e>
     e58:	a1 40       	sbci	r26, 0x01	; 1
     e5a:	a6 95       	lsr	r26
     e5c:	8f ef       	ldi	r24, 0xFF	; 255
     e5e:	81 1d       	adc	r24, r1
     e60:	81 1d       	adc	r24, r1
     e62:	08 95       	ret

00000e64 <__fp_inf>:
     e64:	97 f9       	bld	r25, 7
     e66:	9f 67       	ori	r25, 0x7F	; 127
     e68:	80 e8       	ldi	r24, 0x80	; 128
     e6a:	70 e0       	ldi	r23, 0x00	; 0
     e6c:	60 e0       	ldi	r22, 0x00	; 0
     e6e:	08 95       	ret

00000e70 <__fp_nan>:
     e70:	9f ef       	ldi	r25, 0xFF	; 255
     e72:	80 ec       	ldi	r24, 0xC0	; 192
     e74:	08 95       	ret

00000e76 <__fp_pscA>:
     e76:	00 24       	eor	r0, r0
     e78:	0a 94       	dec	r0
     e7a:	16 16       	cp	r1, r22
     e7c:	17 06       	cpc	r1, r23
     e7e:	18 06       	cpc	r1, r24
     e80:	09 06       	cpc	r0, r25
     e82:	08 95       	ret

00000e84 <__fp_pscB>:
     e84:	00 24       	eor	r0, r0
     e86:	0a 94       	dec	r0
     e88:	12 16       	cp	r1, r18
     e8a:	13 06       	cpc	r1, r19
     e8c:	14 06       	cpc	r1, r20
     e8e:	05 06       	cpc	r0, r21
     e90:	08 95       	ret

00000e92 <__fp_round>:
     e92:	09 2e       	mov	r0, r25
     e94:	03 94       	inc	r0
     e96:	00 0c       	add	r0, r0
     e98:	11 f4       	brne	.+4      	; 0xe9e <__fp_round+0xc>
     e9a:	88 23       	and	r24, r24
     e9c:	52 f0       	brmi	.+20     	; 0xeb2 <__fp_round+0x20>
     e9e:	bb 0f       	add	r27, r27
     ea0:	40 f4       	brcc	.+16     	; 0xeb2 <__fp_round+0x20>
     ea2:	bf 2b       	or	r27, r31
     ea4:	11 f4       	brne	.+4      	; 0xeaa <__fp_round+0x18>
     ea6:	60 ff       	sbrs	r22, 0
     ea8:	04 c0       	rjmp	.+8      	; 0xeb2 <__fp_round+0x20>
     eaa:	6f 5f       	subi	r22, 0xFF	; 255
     eac:	7f 4f       	sbci	r23, 0xFF	; 255
     eae:	8f 4f       	sbci	r24, 0xFF	; 255
     eb0:	9f 4f       	sbci	r25, 0xFF	; 255
     eb2:	08 95       	ret

00000eb4 <__fp_split3>:
     eb4:	57 fd       	sbrc	r21, 7
     eb6:	90 58       	subi	r25, 0x80	; 128
     eb8:	44 0f       	add	r20, r20
     eba:	55 1f       	adc	r21, r21
     ebc:	59 f0       	breq	.+22     	; 0xed4 <__fp_splitA+0x10>
     ebe:	5f 3f       	cpi	r21, 0xFF	; 255
     ec0:	71 f0       	breq	.+28     	; 0xede <__fp_splitA+0x1a>
     ec2:	47 95       	ror	r20

00000ec4 <__fp_splitA>:
     ec4:	88 0f       	add	r24, r24
     ec6:	97 fb       	bst	r25, 7
     ec8:	99 1f       	adc	r25, r25
     eca:	61 f0       	breq	.+24     	; 0xee4 <__fp_splitA+0x20>
     ecc:	9f 3f       	cpi	r25, 0xFF	; 255
     ece:	79 f0       	breq	.+30     	; 0xeee <__fp_splitA+0x2a>
     ed0:	87 95       	ror	r24
     ed2:	08 95       	ret
     ed4:	12 16       	cp	r1, r18
     ed6:	13 06       	cpc	r1, r19
     ed8:	14 06       	cpc	r1, r20
     eda:	55 1f       	adc	r21, r21
     edc:	f2 cf       	rjmp	.-28     	; 0xec2 <__fp_split3+0xe>
     ede:	46 95       	lsr	r20
     ee0:	f1 df       	rcall	.-30     	; 0xec4 <__fp_splitA>
     ee2:	08 c0       	rjmp	.+16     	; 0xef4 <__fp_splitA+0x30>
     ee4:	16 16       	cp	r1, r22
     ee6:	17 06       	cpc	r1, r23
     ee8:	18 06       	cpc	r1, r24
     eea:	99 1f       	adc	r25, r25
     eec:	f1 cf       	rjmp	.-30     	; 0xed0 <__fp_splitA+0xc>
     eee:	86 95       	lsr	r24
     ef0:	71 05       	cpc	r23, r1
     ef2:	61 05       	cpc	r22, r1
     ef4:	08 94       	sec
     ef6:	08 95       	ret

00000ef8 <__fp_zero>:
     ef8:	e8 94       	clt

00000efa <__fp_szero>:
     efa:	bb 27       	eor	r27, r27
     efc:	66 27       	eor	r22, r22
     efe:	77 27       	eor	r23, r23
     f00:	cb 01       	movw	r24, r22
     f02:	97 f9       	bld	r25, 7
     f04:	08 95       	ret

00000f06 <__gesf2>:
     f06:	8a df       	rcall	.-236    	; 0xe1c <__fp_cmp>
     f08:	08 f4       	brcc	.+2      	; 0xf0c <__gesf2+0x6>
     f0a:	8f ef       	ldi	r24, 0xFF	; 255
     f0c:	08 95       	ret

00000f0e <__mulsf3>:
     f0e:	0b d0       	rcall	.+22     	; 0xf26 <__mulsf3x>
     f10:	c0 cf       	rjmp	.-128    	; 0xe92 <__fp_round>
     f12:	b1 df       	rcall	.-158    	; 0xe76 <__fp_pscA>
     f14:	28 f0       	brcs	.+10     	; 0xf20 <__mulsf3+0x12>
     f16:	b6 df       	rcall	.-148    	; 0xe84 <__fp_pscB>
     f18:	18 f0       	brcs	.+6      	; 0xf20 <__mulsf3+0x12>
     f1a:	95 23       	and	r25, r21
     f1c:	09 f0       	breq	.+2      	; 0xf20 <__mulsf3+0x12>
     f1e:	a2 cf       	rjmp	.-188    	; 0xe64 <__fp_inf>
     f20:	a7 cf       	rjmp	.-178    	; 0xe70 <__fp_nan>
     f22:	11 24       	eor	r1, r1
     f24:	ea cf       	rjmp	.-44     	; 0xefa <__fp_szero>

00000f26 <__mulsf3x>:
     f26:	c6 df       	rcall	.-116    	; 0xeb4 <__fp_split3>
     f28:	a0 f3       	brcs	.-24     	; 0xf12 <__mulsf3+0x4>

00000f2a <__mulsf3_pse>:
     f2a:	95 9f       	mul	r25, r21
     f2c:	d1 f3       	breq	.-12     	; 0xf22 <__mulsf3+0x14>
     f2e:	95 0f       	add	r25, r21
     f30:	50 e0       	ldi	r21, 0x00	; 0
     f32:	55 1f       	adc	r21, r21
     f34:	62 9f       	mul	r22, r18
     f36:	f0 01       	movw	r30, r0
     f38:	72 9f       	mul	r23, r18
     f3a:	bb 27       	eor	r27, r27
     f3c:	f0 0d       	add	r31, r0
     f3e:	b1 1d       	adc	r27, r1
     f40:	63 9f       	mul	r22, r19
     f42:	aa 27       	eor	r26, r26
     f44:	f0 0d       	add	r31, r0
     f46:	b1 1d       	adc	r27, r1
     f48:	aa 1f       	adc	r26, r26
     f4a:	64 9f       	mul	r22, r20
     f4c:	66 27       	eor	r22, r22
     f4e:	b0 0d       	add	r27, r0
     f50:	a1 1d       	adc	r26, r1
     f52:	66 1f       	adc	r22, r22
     f54:	82 9f       	mul	r24, r18
     f56:	22 27       	eor	r18, r18
     f58:	b0 0d       	add	r27, r0
     f5a:	a1 1d       	adc	r26, r1
     f5c:	62 1f       	adc	r22, r18
     f5e:	73 9f       	mul	r23, r19
     f60:	b0 0d       	add	r27, r0
     f62:	a1 1d       	adc	r26, r1
     f64:	62 1f       	adc	r22, r18
     f66:	83 9f       	mul	r24, r19
     f68:	a0 0d       	add	r26, r0
     f6a:	61 1d       	adc	r22, r1
     f6c:	22 1f       	adc	r18, r18
     f6e:	74 9f       	mul	r23, r20
     f70:	33 27       	eor	r19, r19
     f72:	a0 0d       	add	r26, r0
     f74:	61 1d       	adc	r22, r1
     f76:	23 1f       	adc	r18, r19
     f78:	84 9f       	mul	r24, r20
     f7a:	60 0d       	add	r22, r0
     f7c:	21 1d       	adc	r18, r1
     f7e:	82 2f       	mov	r24, r18
     f80:	76 2f       	mov	r23, r22
     f82:	6a 2f       	mov	r22, r26
     f84:	11 24       	eor	r1, r1
     f86:	9f 57       	subi	r25, 0x7F	; 127
     f88:	50 40       	sbci	r21, 0x00	; 0
     f8a:	8a f0       	brmi	.+34     	; 0xfae <__mulsf3_pse+0x84>
     f8c:	e1 f0       	breq	.+56     	; 0xfc6 <__mulsf3_pse+0x9c>
     f8e:	88 23       	and	r24, r24
     f90:	4a f0       	brmi	.+18     	; 0xfa4 <__mulsf3_pse+0x7a>
     f92:	ee 0f       	add	r30, r30
     f94:	ff 1f       	adc	r31, r31
     f96:	bb 1f       	adc	r27, r27
     f98:	66 1f       	adc	r22, r22
     f9a:	77 1f       	adc	r23, r23
     f9c:	88 1f       	adc	r24, r24
     f9e:	91 50       	subi	r25, 0x01	; 1
     fa0:	50 40       	sbci	r21, 0x00	; 0
     fa2:	a9 f7       	brne	.-22     	; 0xf8e <__mulsf3_pse+0x64>
     fa4:	9e 3f       	cpi	r25, 0xFE	; 254
     fa6:	51 05       	cpc	r21, r1
     fa8:	70 f0       	brcs	.+28     	; 0xfc6 <__mulsf3_pse+0x9c>
     faa:	5c cf       	rjmp	.-328    	; 0xe64 <__fp_inf>
     fac:	a6 cf       	rjmp	.-180    	; 0xefa <__fp_szero>
     fae:	5f 3f       	cpi	r21, 0xFF	; 255
     fb0:	ec f3       	brlt	.-6      	; 0xfac <__mulsf3_pse+0x82>
     fb2:	98 3e       	cpi	r25, 0xE8	; 232
     fb4:	dc f3       	brlt	.-10     	; 0xfac <__mulsf3_pse+0x82>
     fb6:	86 95       	lsr	r24
     fb8:	77 95       	ror	r23
     fba:	67 95       	ror	r22
     fbc:	b7 95       	ror	r27
     fbe:	f7 95       	ror	r31
     fc0:	e7 95       	ror	r30
     fc2:	9f 5f       	subi	r25, 0xFF	; 255
     fc4:	c1 f7       	brne	.-16     	; 0xfb6 <__mulsf3_pse+0x8c>
     fc6:	fe 2b       	or	r31, r30
     fc8:	88 0f       	add	r24, r24
     fca:	91 1d       	adc	r25, r1
     fcc:	96 95       	lsr	r25
     fce:	87 95       	ror	r24
     fd0:	97 f9       	bld	r25, 7
     fd2:	08 95       	ret

00000fd4 <__udivmodsi4>:
     fd4:	a1 e2       	ldi	r26, 0x21	; 33
     fd6:	1a 2e       	mov	r1, r26
     fd8:	aa 1b       	sub	r26, r26
     fda:	bb 1b       	sub	r27, r27
     fdc:	fd 01       	movw	r30, r26
     fde:	0d c0       	rjmp	.+26     	; 0xffa <__udivmodsi4_ep>

00000fe0 <__udivmodsi4_loop>:
     fe0:	aa 1f       	adc	r26, r26
     fe2:	bb 1f       	adc	r27, r27
     fe4:	ee 1f       	adc	r30, r30
     fe6:	ff 1f       	adc	r31, r31
     fe8:	a2 17       	cp	r26, r18
     fea:	b3 07       	cpc	r27, r19
     fec:	e4 07       	cpc	r30, r20
     fee:	f5 07       	cpc	r31, r21
     ff0:	20 f0       	brcs	.+8      	; 0xffa <__udivmodsi4_ep>
     ff2:	a2 1b       	sub	r26, r18
     ff4:	b3 0b       	sbc	r27, r19
     ff6:	e4 0b       	sbc	r30, r20
     ff8:	f5 0b       	sbc	r31, r21

00000ffa <__udivmodsi4_ep>:
     ffa:	66 1f       	adc	r22, r22
     ffc:	77 1f       	adc	r23, r23
     ffe:	88 1f       	adc	r24, r24
    1000:	99 1f       	adc	r25, r25
    1002:	1a 94       	dec	r1
    1004:	69 f7       	brne	.-38     	; 0xfe0 <__udivmodsi4_loop>
    1006:	60 95       	com	r22
    1008:	70 95       	com	r23
    100a:	80 95       	com	r24
    100c:	90 95       	com	r25
    100e:	9b 01       	movw	r18, r22
    1010:	ac 01       	movw	r20, r24
    1012:	bd 01       	movw	r22, r26
    1014:	cf 01       	movw	r24, r30
    1016:	08 95       	ret

00001018 <__tablejump2__>:
    1018:	ee 0f       	add	r30, r30
    101a:	ff 1f       	adc	r31, r31
    101c:	88 1f       	adc	r24, r24
    101e:	8b bf       	out	0x3b, r24	; 59
    1020:	07 90       	elpm	r0, Z+
    1022:	f6 91       	elpm	r31, Z
    1024:	e0 2d       	mov	r30, r0
    1026:	19 94       	eijmp

00001028 <__itoa_ncheck>:
    1028:	bb 27       	eor	r27, r27
    102a:	4a 30       	cpi	r20, 0x0A	; 10
    102c:	31 f4       	brne	.+12     	; 0x103a <__itoa_ncheck+0x12>
    102e:	99 23       	and	r25, r25
    1030:	22 f4       	brpl	.+8      	; 0x103a <__itoa_ncheck+0x12>
    1032:	bd e2       	ldi	r27, 0x2D	; 45
    1034:	90 95       	com	r25
    1036:	81 95       	neg	r24
    1038:	9f 4f       	sbci	r25, 0xFF	; 255
    103a:	01 c0       	rjmp	.+2      	; 0x103e <__utoa_common>

0000103c <__utoa_ncheck>:
    103c:	bb 27       	eor	r27, r27

0000103e <__utoa_common>:
    103e:	fb 01       	movw	r30, r22
    1040:	55 27       	eor	r21, r21
    1042:	aa 27       	eor	r26, r26
    1044:	88 0f       	add	r24, r24
    1046:	99 1f       	adc	r25, r25
    1048:	aa 1f       	adc	r26, r26
    104a:	a4 17       	cp	r26, r20
    104c:	10 f0       	brcs	.+4      	; 0x1052 <__utoa_common+0x14>
    104e:	a4 1b       	sub	r26, r20
    1050:	83 95       	inc	r24
    1052:	50 51       	subi	r21, 0x10	; 16
    1054:	b9 f7       	brne	.-18     	; 0x1044 <__utoa_common+0x6>
    1056:	a0 5d       	subi	r26, 0xD0	; 208
    1058:	aa 33       	cpi	r26, 0x3A	; 58
    105a:	08 f0       	brcs	.+2      	; 0x105e <__utoa_common+0x20>
    105c:	a9 5d       	subi	r26, 0xD9	; 217
    105e:	a1 93       	st	Z+, r26
    1060:	00 97       	sbiw	r24, 0x00	; 0
    1062:	79 f7       	brne	.-34     	; 0x1042 <__utoa_common+0x4>
    1064:	b1 11       	cpse	r27, r1
    1066:	b1 93       	st	Z+, r27
    1068:	11 92       	st	Z+, r1
    106a:	cb 01       	movw	r24, r22
    106c:	00 c0       	rjmp	.+0      	; 0x106e <strrev>

0000106e <strrev>:
    106e:	dc 01       	movw	r26, r24
    1070:	fc 01       	movw	r30, r24
    1072:	67 2f       	mov	r22, r23
    1074:	71 91       	ld	r23, Z+
    1076:	77 23       	and	r23, r23
    1078:	e1 f7       	brne	.-8      	; 0x1072 <strrev+0x4>
    107a:	32 97       	sbiw	r30, 0x02	; 2
    107c:	04 c0       	rjmp	.+8      	; 0x1086 <strrev+0x18>
    107e:	7c 91       	ld	r23, X
    1080:	6d 93       	st	X+, r22
    1082:	70 83       	st	Z, r23
    1084:	62 91       	ld	r22, -Z
    1086:	ae 17       	cp	r26, r30
    1088:	bf 07       	cpc	r27, r31
    108a:	c8 f3       	brcs	.-14     	; 0x107e <strrev+0x10>
    108c:	08 95       	ret

0000108e <_exit>:
    108e:	f8 94       	cli

00001090 <__stop_program>:
    1090:	ff cf       	rjmp	.-2      	; 0x1090 <__stop_program>
