
PRJ1-IKT5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800200  00000ecc  00000f60  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ecc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800202  00800202  00000f62  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000f62  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f94  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000160  00000000  00000000  00000fd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000022ab  00000000  00000000  00001134  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fc9  00000000  00000000  000033df  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d83  00000000  00000000  000043a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002f4  00000000  00000000  0000512c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000905  00000000  00000000  00005420  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000db1  00000000  00000000  00005d25  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  00006ad6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	7e c0       	rjmp	.+252    	; 0xfe <__ctors_end>
   2:	00 00       	nop
   4:	9b c0       	rjmp	.+310    	; 0x13c <__bad_interrupt>
   6:	00 00       	nop
   8:	99 c0       	rjmp	.+306    	; 0x13c <__bad_interrupt>
   a:	00 00       	nop
   c:	97 c0       	rjmp	.+302    	; 0x13c <__bad_interrupt>
   e:	00 00       	nop
  10:	95 c0       	rjmp	.+298    	; 0x13c <__bad_interrupt>
  12:	00 00       	nop
  14:	f7 c0       	rjmp	.+494    	; 0x204 <__vector_5>
  16:	00 00       	nop
  18:	3d c1       	rjmp	.+634    	; 0x294 <__vector_6>
  1a:	00 00       	nop
  1c:	8f c0       	rjmp	.+286    	; 0x13c <__bad_interrupt>
  1e:	00 00       	nop
  20:	8d c0       	rjmp	.+282    	; 0x13c <__bad_interrupt>
  22:	00 00       	nop
  24:	8b c0       	rjmp	.+278    	; 0x13c <__bad_interrupt>
  26:	00 00       	nop
  28:	89 c0       	rjmp	.+274    	; 0x13c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	87 c0       	rjmp	.+270    	; 0x13c <__bad_interrupt>
  2e:	00 00       	nop
  30:	85 c0       	rjmp	.+266    	; 0x13c <__bad_interrupt>
  32:	00 00       	nop
  34:	83 c0       	rjmp	.+262    	; 0x13c <__bad_interrupt>
  36:	00 00       	nop
  38:	81 c0       	rjmp	.+258    	; 0x13c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	7f c0       	rjmp	.+254    	; 0x13c <__bad_interrupt>
  3e:	00 00       	nop
  40:	7d c0       	rjmp	.+250    	; 0x13c <__bad_interrupt>
  42:	00 00       	nop
  44:	6f c1       	rjmp	.+734    	; 0x324 <__vector_17>
  46:	00 00       	nop
  48:	79 c0       	rjmp	.+242    	; 0x13c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	77 c0       	rjmp	.+238    	; 0x13c <__bad_interrupt>
  4e:	00 00       	nop
  50:	75 c0       	rjmp	.+234    	; 0x13c <__bad_interrupt>
  52:	00 00       	nop
  54:	73 c0       	rjmp	.+230    	; 0x13c <__bad_interrupt>
  56:	00 00       	nop
  58:	71 c0       	rjmp	.+226    	; 0x13c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	6f c0       	rjmp	.+222    	; 0x13c <__bad_interrupt>
  5e:	00 00       	nop
  60:	6d c0       	rjmp	.+218    	; 0x13c <__bad_interrupt>
  62:	00 00       	nop
  64:	6b c0       	rjmp	.+214    	; 0x13c <__bad_interrupt>
  66:	00 00       	nop
  68:	69 c0       	rjmp	.+210    	; 0x13c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	67 c0       	rjmp	.+206    	; 0x13c <__bad_interrupt>
  6e:	00 00       	nop
  70:	65 c0       	rjmp	.+202    	; 0x13c <__bad_interrupt>
  72:	00 00       	nop
  74:	63 c0       	rjmp	.+198    	; 0x13c <__bad_interrupt>
  76:	00 00       	nop
  78:	61 c0       	rjmp	.+194    	; 0x13c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	5f c0       	rjmp	.+190    	; 0x13c <__bad_interrupt>
  7e:	00 00       	nop
  80:	7b c1       	rjmp	.+758    	; 0x378 <__vector_32>
  82:	00 00       	nop
  84:	5b c0       	rjmp	.+182    	; 0x13c <__bad_interrupt>
  86:	00 00       	nop
  88:	59 c0       	rjmp	.+178    	; 0x13c <__bad_interrupt>
  8a:	00 00       	nop
  8c:	57 c0       	rjmp	.+174    	; 0x13c <__bad_interrupt>
  8e:	00 00       	nop
  90:	55 c0       	rjmp	.+170    	; 0x13c <__bad_interrupt>
  92:	00 00       	nop
  94:	53 c0       	rjmp	.+166    	; 0x13c <__bad_interrupt>
  96:	00 00       	nop
  98:	51 c0       	rjmp	.+162    	; 0x13c <__bad_interrupt>
  9a:	00 00       	nop
  9c:	4f c0       	rjmp	.+158    	; 0x13c <__bad_interrupt>
  9e:	00 00       	nop
  a0:	4d c0       	rjmp	.+154    	; 0x13c <__bad_interrupt>
  a2:	00 00       	nop
  a4:	4b c0       	rjmp	.+150    	; 0x13c <__bad_interrupt>
  a6:	00 00       	nop
  a8:	49 c0       	rjmp	.+146    	; 0x13c <__bad_interrupt>
  aa:	00 00       	nop
  ac:	47 c0       	rjmp	.+142    	; 0x13c <__bad_interrupt>
  ae:	00 00       	nop
  b0:	45 c0       	rjmp	.+138    	; 0x13c <__bad_interrupt>
  b2:	00 00       	nop
  b4:	43 c0       	rjmp	.+134    	; 0x13c <__bad_interrupt>
  b6:	00 00       	nop
  b8:	41 c0       	rjmp	.+130    	; 0x13c <__bad_interrupt>
  ba:	00 00       	nop
  bc:	3f c0       	rjmp	.+126    	; 0x13c <__bad_interrupt>
  be:	00 00       	nop
  c0:	3d c0       	rjmp	.+122    	; 0x13c <__bad_interrupt>
  c2:	00 00       	nop
  c4:	3b c0       	rjmp	.+118    	; 0x13c <__bad_interrupt>
  c6:	00 00       	nop
  c8:	39 c0       	rjmp	.+114    	; 0x13c <__bad_interrupt>
  ca:	00 00       	nop
  cc:	37 c0       	rjmp	.+110    	; 0x13c <__bad_interrupt>
  ce:	00 00       	nop
  d0:	35 c0       	rjmp	.+106    	; 0x13c <__bad_interrupt>
  d2:	00 00       	nop
  d4:	33 c0       	rjmp	.+102    	; 0x13c <__bad_interrupt>
  d6:	00 00       	nop
  d8:	31 c0       	rjmp	.+98     	; 0x13c <__bad_interrupt>
  da:	00 00       	nop
  dc:	2f c0       	rjmp	.+94     	; 0x13c <__bad_interrupt>
  de:	00 00       	nop
  e0:	2d c0       	rjmp	.+90     	; 0x13c <__bad_interrupt>
  e2:	00 00       	nop
  e4:	38 02       	muls	r19, r24
  e6:	76 02       	muls	r23, r22
  e8:	99 02       	muls	r25, r25
  ea:	be 02       	muls	r27, r30
  ec:	e3 02       	muls	r30, r19
  ee:	08 03       	fmul	r16, r16
  f0:	2c 03       	fmul	r18, r20
  f2:	5a 03       	fmul	r21, r18
  f4:	7e 03       	fmul	r23, r22
  f6:	89 03       	fmulsu	r16, r17
  f8:	be 03       	fmulsu	r19, r22
  fa:	e8 03       	fmulsu	r22, r16
  fc:	1a 04       	cpc	r1, r10

000000fe <__ctors_end>:
  fe:	11 24       	eor	r1, r1
 100:	1f be       	out	0x3f, r1	; 63
 102:	cf ef       	ldi	r28, 0xFF	; 255
 104:	d1 e2       	ldi	r29, 0x21	; 33
 106:	de bf       	out	0x3e, r29	; 62
 108:	cd bf       	out	0x3d, r28	; 61
 10a:	00 e0       	ldi	r16, 0x00	; 0
 10c:	0c bf       	out	0x3c, r16	; 60

0000010e <__do_copy_data>:
 10e:	12 e0       	ldi	r17, 0x02	; 2
 110:	a0 e0       	ldi	r26, 0x00	; 0
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	ec ec       	ldi	r30, 0xCC	; 204
 116:	fe e0       	ldi	r31, 0x0E	; 14
 118:	00 e0       	ldi	r16, 0x00	; 0
 11a:	0b bf       	out	0x3b, r16	; 59
 11c:	02 c0       	rjmp	.+4      	; 0x122 <__do_copy_data+0x14>
 11e:	07 90       	elpm	r0, Z+
 120:	0d 92       	st	X+, r0
 122:	a2 30       	cpi	r26, 0x02	; 2
 124:	b1 07       	cpc	r27, r17
 126:	d9 f7       	brne	.-10     	; 0x11e <__do_copy_data+0x10>

00000128 <__do_clear_bss>:
 128:	22 e0       	ldi	r18, 0x02	; 2
 12a:	a2 e0       	ldi	r26, 0x02	; 2
 12c:	b2 e0       	ldi	r27, 0x02	; 2
 12e:	01 c0       	rjmp	.+2      	; 0x132 <.do_clear_bss_start>

00000130 <.do_clear_bss_loop>:
 130:	1d 92       	st	X+, r1

00000132 <.do_clear_bss_start>:
 132:	a6 30       	cpi	r26, 0x06	; 6
 134:	b2 07       	cpc	r27, r18
 136:	e1 f7       	brne	.-8      	; 0x130 <.do_clear_bss_loop>
 138:	46 d1       	rcall	.+652    	; 0x3c6 <main>
 13a:	c6 c6       	rjmp	.+3468   	; 0xec8 <_exit>

0000013c <__bad_interrupt>:
 13c:	61 cf       	rjmp	.-318    	; 0x0 <__vectors>

0000013e <_Z10bLightInitv>:
#include "BLightDriver.h"
#include <stdio.h>
#include <avr/io.h>

void bLightInit(void){
	DDRC = 0xFF;
 13e:	8f ef       	ldi	r24, 0xFF	; 255
 140:	87 b9       	out	0x07, r24	; 7
	TCCR3A = (1<<COM3A1)|(1<<COM3A0)|(0<<WGM31)|(1<<WGM30); // Set compare mode for OCR1A
 142:	81 ec       	ldi	r24, 0xC1	; 193
 144:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x700090>
	TCCR3B = (0<<WGM33)|(0<<WGM32)|(1<<CS32)|(0<<CS31)|(0<<CS30); // Set Mode 1, PWM Phase correct 8-bit & 256 prescaler
 148:	84 e0       	ldi	r24, 0x04	; 4
 14a:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x700091>
	TIMSK3 = 0b00000010;
 14e:	82 e0       	ldi	r24, 0x02	; 2
 150:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <__TEXT_REGION_LENGTH__+0x700071>
	OCR3A = 0;
 154:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
 158:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
	PINC = 0b00001010;
 15c:	8a e0       	ldi	r24, 0x0A	; 10
 15e:	86 b9       	out	0x06, r24	; 6
 160:	08 95       	ret

00000162 <_Z12bLightTogglev>:
}

void bLightToggle(void){
	
	PINC = ~PINC; // ben 35 og 37
 162:	86 b1       	in	r24, 0x06	; 6
 164:	80 95       	com	r24
 166:	86 b9       	out	0x06, r24	; 6
 168:	08 95       	ret

0000016a <_Z14bLightStrengthi>:

void bLightStrength(int Brightness){

	int dutyCycle = 0;
	
	if (Brightness > 254) {
 16a:	8f 3f       	cpi	r24, 0xFF	; 255
 16c:	91 05       	cpc	r25, r1
 16e:	24 f4       	brge	.+8      	; 0x178 <_Z14bLightStrengthi+0xe>
		dutyCycle = 254;
	}
	else if (Brightness <= 0) {
 170:	18 16       	cp	r1, r24
 172:	19 06       	cpc	r1, r25
 174:	34 f0       	brlt	.+12     	; 0x182 <_Z14bLightStrengthi+0x18>
 176:	03 c0       	rjmp	.+6      	; 0x17e <_Z14bLightStrengthi+0x14>
void bLightStrength(int Brightness){

	int dutyCycle = 0;
	
	if (Brightness > 254) {
		dutyCycle = 254;
 178:	8e ef       	ldi	r24, 0xFE	; 254
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	02 c0       	rjmp	.+4      	; 0x182 <_Z14bLightStrengthi+0x18>
	}
	else if (Brightness <= 0) {
		dutyCycle = 1;
 17e:	81 e0       	ldi	r24, 0x01	; 1
 180:	90 e0       	ldi	r25, 0x00	; 0
	}
	else {
		dutyCycle = Brightness;
	}

	OCR3A = dutyCycle;
 182:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
 186:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
 18a:	08 95       	ret

0000018c <_Z11initCounterv>:
#include "Sensor.h"
#include <avr/interrupt.h>


void initCounter(){
	EIMSK = 0b00110000; // INT 4 & INT 5 active - BEN 2.
 18c:	80 e3       	ldi	r24, 0x30	; 48
 18e:	8d bb       	out	0x1d, r24	; 29
	EICRB = 0b00001111; // INT 4 & INT 5 rising edge.
 190:	8f e0       	ldi	r24, 0x0F	; 15
 192:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x70006a>
 196:	08 95       	ret

00000198 <_Z8fLightOnv>:
void fLightInit(void){
	DDRG = 0xFF; 
}

void fLightOn(void){
	PORTG = 0b00000101; //ben 39 og 41
 198:	85 e0       	ldi	r24, 0x05	; 5
 19a:	84 bb       	out	0x14, r24	; 20
 19c:	08 95       	ret

0000019e <_Z9fLightOffv>:
}
void fLightOff(void){
	PORTG = 0b00000000;
 19e:	14 ba       	out	0x14, r1	; 20
 1a0:	08 95       	ret

000001a2 <_Z11SendCharnulc>:
	UBRR0L = ((F_CPU/(16*BAUD))-1);
}

void SendCharnul(char Tegn)
{
	while(!(UCSR0A & (1<<UDRE0))){
 1a2:	e0 ec       	ldi	r30, 0xC0	; 192
 1a4:	f0 e0       	ldi	r31, 0x00	; 0
 1a6:	90 81       	ld	r25, Z
 1a8:	95 ff       	sbrs	r25, 5
 1aa:	fd cf       	rjmp	.-6      	; 0x1a6 <_Z11SendCharnulc+0x4>
		
	}
	UDR0 = Tegn;
 1ac:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 1b0:	08 95       	ret

000001b2 <_Z10SendStringPc>:
}

void SendString(char* Streng)
{
 1b2:	cf 93       	push	r28
 1b4:	df 93       	push	r29
 1b6:	ec 01       	movw	r28, r24
	while(*Streng != '\0'){
 1b8:	88 81       	ld	r24, Y
 1ba:	88 23       	and	r24, r24
 1bc:	29 f0       	breq	.+10     	; 0x1c8 <_Z10SendStringPc+0x16>
 1be:	21 96       	adiw	r28, 0x01	; 1
		SendCharnul(*Streng);
 1c0:	f0 df       	rcall	.-32     	; 0x1a2 <_Z11SendCharnulc>
	UDR0 = Tegn;
}

void SendString(char* Streng)
{
	while(*Streng != '\0'){
 1c2:	89 91       	ld	r24, Y+
 1c4:	81 11       	cpse	r24, r1
 1c6:	fc cf       	rjmp	.-8      	; 0x1c0 <_Z10SendStringPc+0xe>
		SendCharnul(*Streng);
		Streng++;
	}
}
 1c8:	df 91       	pop	r29
 1ca:	cf 91       	pop	r28
 1cc:	08 95       	ret

000001ce <_Z11SendIntegeri>:

void SendInteger(int Tal)
{
 1ce:	cf 93       	push	r28
 1d0:	df 93       	push	r29
 1d2:	cd b7       	in	r28, 0x3d	; 61
 1d4:	de b7       	in	r29, 0x3e	; 62
 1d6:	6e 97       	sbiw	r28, 0x1e	; 30
 1d8:	0f b6       	in	r0, 0x3f	; 63
 1da:	f8 94       	cli
 1dc:	de bf       	out	0x3e, r29	; 62
 1de:	0f be       	out	0x3f, r0	; 63
 1e0:	cd bf       	out	0x3d, r28	; 61
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 1e2:	4a e0       	ldi	r20, 0x0A	; 10
 1e4:	be 01       	movw	r22, r28
 1e6:	6f 5f       	subi	r22, 0xFF	; 255
 1e8:	7f 4f       	sbci	r23, 0xFF	; 255
 1ea:	3b d6       	rcall	.+3190   	; 0xe62 <__itoa_ncheck>
	char intStr[30];
	itoa(Tal, intStr, 10);
	SendString(intStr);
 1ec:	ce 01       	movw	r24, r28
 1ee:	01 96       	adiw	r24, 0x01	; 1
 1f0:	e0 df       	rcall	.-64     	; 0x1b2 <_Z10SendStringPc>
}
 1f2:	6e 96       	adiw	r28, 0x1e	; 30
 1f4:	0f b6       	in	r0, 0x3f	; 63
 1f6:	f8 94       	cli
 1f8:	de bf       	out	0x3e, r29	; 62
 1fa:	0f be       	out	0x3f, r0	; 63
 1fc:	cd bf       	out	0x3d, r28	; 61
 1fe:	df 91       	pop	r29
 200:	cf 91       	pop	r28
 202:	08 95       	ret

00000204 <__vector_5>:


ISR(INT4_vect){ //On rising edge, count + 1
 204:	1f 92       	push	r1
 206:	0f 92       	push	r0
 208:	0f b6       	in	r0, 0x3f	; 63
 20a:	0f 92       	push	r0
 20c:	11 24       	eor	r1, r1
 20e:	2f 93       	push	r18
 210:	8f 93       	push	r24
 212:	9f 93       	push	r25
	if(counter == 3){
 214:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <counter>
 218:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <counter+0x1>
 21c:	03 97       	sbiw	r24, 0x03	; 3
 21e:	c9 f4       	brne	.+50     	; 0x252 <__vector_5+0x4e>
		
		newCount = true;
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__data_start>
		counter++;
 226:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <counter>
 22a:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <counter+0x1>
 22e:	01 96       	adiw	r24, 0x01	; 1
 230:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <counter+0x1>
 234:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <counter>
		EIMSK = 0b00000000;
 238:	1d ba       	out	0x1d, r1	; 29
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 23a:	2f ef       	ldi	r18, 0xFF	; 255
 23c:	89 e6       	ldi	r24, 0x69	; 105
 23e:	98 e1       	ldi	r25, 0x18	; 24
 240:	21 50       	subi	r18, 0x01	; 1
 242:	80 40       	sbci	r24, 0x00	; 0
 244:	90 40       	sbci	r25, 0x00	; 0
 246:	e1 f7       	brne	.-8      	; 0x240 <__vector_5+0x3c>
 248:	00 c0       	rjmp	.+0      	; 0x24a <__vector_5+0x46>
 24a:	00 00       	nop
		_delay_ms(500);
		EIFR = 0b00110000;
 24c:	80 e3       	ldi	r24, 0x30	; 48
 24e:	8c bb       	out	0x1c, r24	; 28
		EIMSK = 0b00110000;
 250:	8d bb       	out	0x1d, r24	; 29
	}
	newCount = true;
 252:	81 e0       	ldi	r24, 0x01	; 1
 254:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__data_start>
	counter++;
 258:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <counter>
 25c:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <counter+0x1>
 260:	01 96       	adiw	r24, 0x01	; 1
 262:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <counter+0x1>
 266:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <counter>
	EIMSK = 0b00000000;
 26a:	1d ba       	out	0x1d, r1	; 29
 26c:	2f ef       	ldi	r18, 0xFF	; 255
 26e:	85 ea       	ldi	r24, 0xA5	; 165
 270:	9e e0       	ldi	r25, 0x0E	; 14
 272:	21 50       	subi	r18, 0x01	; 1
 274:	80 40       	sbci	r24, 0x00	; 0
 276:	90 40       	sbci	r25, 0x00	; 0
 278:	e1 f7       	brne	.-8      	; 0x272 <__vector_5+0x6e>
 27a:	00 c0       	rjmp	.+0      	; 0x27c <__vector_5+0x78>
 27c:	00 00       	nop
	_delay_ms(300);
	EIFR = 0b00110000;
 27e:	80 e3       	ldi	r24, 0x30	; 48
 280:	8c bb       	out	0x1c, r24	; 28
	EIMSK = 0b00110000;
 282:	8d bb       	out	0x1d, r24	; 29
}
 284:	9f 91       	pop	r25
 286:	8f 91       	pop	r24
 288:	2f 91       	pop	r18
 28a:	0f 90       	pop	r0
 28c:	0f be       	out	0x3f, r0	; 63
 28e:	0f 90       	pop	r0
 290:	1f 90       	pop	r1
 292:	18 95       	reti

00000294 <__vector_6>:
ISR(INT5_vect){
 294:	1f 92       	push	r1
 296:	0f 92       	push	r0
 298:	0f b6       	in	r0, 0x3f	; 63
 29a:	0f 92       	push	r0
 29c:	11 24       	eor	r1, r1
 29e:	2f 93       	push	r18
 2a0:	8f 93       	push	r24
 2a2:	9f 93       	push	r25
	if(counter == 3){
 2a4:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <counter>
 2a8:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <counter+0x1>
 2ac:	03 97       	sbiw	r24, 0x03	; 3
 2ae:	c9 f4       	brne	.+50     	; 0x2e2 <__vector_6+0x4e>
		
		newCount = true;
 2b0:	81 e0       	ldi	r24, 0x01	; 1
 2b2:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__data_start>
		counter++;
 2b6:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <counter>
 2ba:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <counter+0x1>
 2be:	01 96       	adiw	r24, 0x01	; 1
 2c0:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <counter+0x1>
 2c4:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <counter>
		EIMSK = 0b00000000;
 2c8:	1d ba       	out	0x1d, r1	; 29
 2ca:	2f ef       	ldi	r18, 0xFF	; 255
 2cc:	89 e6       	ldi	r24, 0x69	; 105
 2ce:	98 e1       	ldi	r25, 0x18	; 24
 2d0:	21 50       	subi	r18, 0x01	; 1
 2d2:	80 40       	sbci	r24, 0x00	; 0
 2d4:	90 40       	sbci	r25, 0x00	; 0
 2d6:	e1 f7       	brne	.-8      	; 0x2d0 <__vector_6+0x3c>
 2d8:	00 c0       	rjmp	.+0      	; 0x2da <__vector_6+0x46>
 2da:	00 00       	nop
		_delay_ms(500);
		EIFR = 0b00110000;
 2dc:	80 e3       	ldi	r24, 0x30	; 48
 2de:	8c bb       	out	0x1c, r24	; 28
		EIMSK = 0b00110000;
 2e0:	8d bb       	out	0x1d, r24	; 29
	}
	newCount = true;
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__data_start>
	counter++;
 2e8:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <counter>
 2ec:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <counter+0x1>
 2f0:	01 96       	adiw	r24, 0x01	; 1
 2f2:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <counter+0x1>
 2f6:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <counter>
	EIMSK = 0b00000000;
 2fa:	1d ba       	out	0x1d, r1	; 29
 2fc:	2f ef       	ldi	r18, 0xFF	; 255
 2fe:	85 ea       	ldi	r24, 0xA5	; 165
 300:	9e e0       	ldi	r25, 0x0E	; 14
 302:	21 50       	subi	r18, 0x01	; 1
 304:	80 40       	sbci	r24, 0x00	; 0
 306:	90 40       	sbci	r25, 0x00	; 0
 308:	e1 f7       	brne	.-8      	; 0x302 <__vector_6+0x6e>
 30a:	00 c0       	rjmp	.+0      	; 0x30c <__vector_6+0x78>
 30c:	00 00       	nop
	_delay_ms(300);
	EIFR = 0b00110000;
 30e:	80 e3       	ldi	r24, 0x30	; 48
 310:	8c bb       	out	0x1c, r24	; 28
	EIMSK = 0b00110000;
 312:	8d bb       	out	0x1d, r24	; 29
}
 314:	9f 91       	pop	r25
 316:	8f 91       	pop	r24
 318:	2f 91       	pop	r18
 31a:	0f 90       	pop	r0
 31c:	0f be       	out	0x3f, r0	; 63
 31e:	0f 90       	pop	r0
 320:	1f 90       	pop	r1
 322:	18 95       	reti

00000324 <__vector_17>:


ISR(TIMER1_COMPA_vect){
 324:	1f 92       	push	r1
 326:	0f 92       	push	r0
 328:	0f b6       	in	r0, 0x3f	; 63
 32a:	0f 92       	push	r0
 32c:	11 24       	eor	r1, r1
 32e:	8f 93       	push	r24
 330:	9f 93       	push	r25
	                                                                                                                                          
	switch(MotorMode){
 332:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <__data_end>
 336:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <__data_end+0x1>
 33a:	81 30       	cpi	r24, 0x01	; 1
 33c:	91 05       	cpc	r25, r1
 33e:	31 f0       	breq	.+12     	; 0x34c <__vector_17+0x28>
 340:	18 f0       	brcs	.+6      	; 0x348 <__vector_17+0x24>
 342:	02 97       	sbiw	r24, 0x02	; 2
 344:	59 f0       	breq	.+22     	; 0x35c <__vector_17+0x38>
 346:	11 c0       	rjmp	.+34     	; 0x36a <__vector_17+0x46>
		case 0:
			PORTA = 0b00000000;
 348:	12 b8       	out	0x02, r1	; 2
		break;
 34a:	0f c0       	rjmp	.+30     	; 0x36a <__vector_17+0x46>
		case 1:
			if(PINA == 0b00000001){
 34c:	80 b1       	in	r24, 0x00	; 0
 34e:	81 30       	cpi	r24, 0x01	; 1
 350:	11 f4       	brne	.+4      	; 0x356 <__vector_17+0x32>
				PORTA = 0b00000000;
 352:	12 b8       	out	0x02, r1	; 2
 354:	0a c0       	rjmp	.+20     	; 0x36a <__vector_17+0x46>
			}else{
				PORTA = 0b00000001;
 356:	81 e0       	ldi	r24, 0x01	; 1
 358:	82 b9       	out	0x02, r24	; 2
 35a:	07 c0       	rjmp	.+14     	; 0x36a <__vector_17+0x46>
			}
		break;
		case 2:
			if(PINA == 0b00000010){
 35c:	80 b1       	in	r24, 0x00	; 0
 35e:	82 30       	cpi	r24, 0x02	; 2
 360:	11 f4       	brne	.+4      	; 0x366 <__vector_17+0x42>
				PORTA = 0b00000000;
 362:	12 b8       	out	0x02, r1	; 2
 364:	02 c0       	rjmp	.+4      	; 0x36a <__vector_17+0x46>
				}else{
				PORTA = 0b00000010;
 366:	82 e0       	ldi	r24, 0x02	; 2
 368:	82 b9       	out	0x02, r24	; 2
			}
		break;
			
	}
	
}
 36a:	9f 91       	pop	r25
 36c:	8f 91       	pop	r24
 36e:	0f 90       	pop	r0
 370:	0f be       	out	0x3f, r0	; 63
 372:	0f 90       	pop	r0
 374:	1f 90       	pop	r1
 376:	18 95       	reti

00000378 <__vector_32>:

ISR(TIMER3_COMPA_vect){
 378:	1f 92       	push	r1
 37a:	0f 92       	push	r0
 37c:	0f b6       	in	r0, 0x3f	; 63
 37e:	0f 92       	push	r0
 380:	11 24       	eor	r1, r1
 382:	0b b6       	in	r0, 0x3b	; 59
 384:	0f 92       	push	r0
 386:	2f 93       	push	r18
 388:	3f 93       	push	r19
 38a:	4f 93       	push	r20
 38c:	5f 93       	push	r21
 38e:	6f 93       	push	r22
 390:	7f 93       	push	r23
 392:	8f 93       	push	r24
 394:	9f 93       	push	r25
 396:	af 93       	push	r26
 398:	bf 93       	push	r27
 39a:	ef 93       	push	r30
 39c:	ff 93       	push	r31
	
	bLightToggle();
 39e:	e1 de       	rcall	.-574    	; 0x162 <_Z12bLightTogglev>
}
 3a0:	ff 91       	pop	r31
 3a2:	ef 91       	pop	r30
 3a4:	bf 91       	pop	r27
 3a6:	af 91       	pop	r26
 3a8:	9f 91       	pop	r25
 3aa:	8f 91       	pop	r24
 3ac:	7f 91       	pop	r23
 3ae:	6f 91       	pop	r22
 3b0:	5f 91       	pop	r21
 3b2:	4f 91       	pop	r20
 3b4:	3f 91       	pop	r19
 3b6:	2f 91       	pop	r18
 3b8:	0f 90       	pop	r0
 3ba:	0b be       	out	0x3b, r0	; 59
 3bc:	0f 90       	pop	r0
 3be:	0f be       	out	0x3f, r0	; 63
 3c0:	0f 90       	pop	r0
 3c2:	1f 90       	pop	r1
 3c4:	18 95       	reti

000003c6 <main>:


int main(void)
{
	sei();
 3c6:	78 94       	sei
	initCounter();
 3c8:	e1 de       	rcall	.-574    	; 0x18c <_Z11initCounterv>
	initMotor();
 3ca:	62 d2       	rcall	.+1220   	; 0x890 <_Z9initMotorv>
 3cc:	20 e0       	ldi	r18, 0x00	; 0
	InitUART(9600, 8, 0);
 3ce:	48 e0       	ldi	r20, 0x08	; 8
 3d0:	60 e8       	ldi	r22, 0x80	; 128
 3d2:	75 e2       	ldi	r23, 0x25	; 37
 3d4:	80 e0       	ldi	r24, 0x00	; 0
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	9e d2       	rcall	.+1340   	; 0x916 <_Z8InitUARTmhb>
 3da:	88 e1       	ldi	r24, 0x18	; 24
volatile unsigned int MotorMode = 0;

void InitUARTnul(unsigned long BAUD)
{
	
	UCSR0B = 0b00011000;
 3dc:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
 3e0:	86 e0       	ldi	r24, 0x06	; 6
	
	UCSR0C = 0b00000110;
 3e2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
 3e6:	87 e6       	ldi	r24, 0x67	; 103
	
	UBRR0L = ((F_CPU/(16*BAUD))-1);
 3e8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	sei();
	initCounter();
	initMotor();
	InitUART(9600, 8, 0);
	InitUARTnul(9600);
	bLightInit();
 3ec:	a8 de       	rcall	.-688    	; 0x13e <_Z10bLightInitv>
	bLightStrength(1);
 3ee:	81 e0       	ldi	r24, 0x01	; 1
 3f0:	90 e0       	ldi	r25, 0x00	; 0
	volumeUp();
 3f2:	bb de       	rcall	.-650    	; 0x16a <_Z14bLightStrengthi>
 3f4:	11 d3       	rcall	.+1570   	; 0xa18 <_Z8volumeUpv>
	volumeUp();
 3f6:	10 d3       	rcall	.+1568   	; 0xa18 <_Z8volumeUpv>
 3f8:	0f d3       	rcall	.+1566   	; 0xa18 <_Z8volumeUpv>
	volumeUp();
 3fa:	0e d3       	rcall	.+1564   	; 0xa18 <_Z8volumeUpv>
 3fc:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <counter+0x1>
	volumeUp();
 400:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <counter>
	counter = 0;
 404:	12 b8       	out	0x02, r1	; 2
 406:	c4 e8       	ldi	r28, 0x84	; 132
 408:	d0 e0       	ldi	r29, 0x00	; 0
	PORTA = 0b00000000;
 40a:	0f 2e       	mov	r0, r31
				newCount = false;
				setSpeed(0);
				MotorMode = 0;
				_delay_ms(2000);
				MotorMode = 1;
				TCNT1 = 0;
 40c:	fc e0       	ldi	r31, 0x0C	; 12
 40e:	8f 2e       	mov	r8, r31
				setSpeed(99.0);
				counter = 12;
 410:	91 2c       	mov	r9, r1
 412:	f0 2d       	mov	r31, r0
 414:	0f 2e       	mov	r0, r31
 416:	fb e0       	ldi	r31, 0x0B	; 11
 418:	af 2e       	mov	r10, r31
				newCount = false;
				MotorMode = 1;
				TCNT1 = 0;
				setSpeed(75.0);
				_delay_ms(200);
				counter = 11;
 41a:	b1 2c       	mov	r11, r1
 41c:	f0 2d       	mov	r31, r0
 41e:	0f 2e       	mov	r0, r31
 420:	fa e0       	ldi	r31, 0x0A	; 10
 422:	cf 2e       	mov	r12, r31
				bLightStrength(254);
				MotorMode = 1;
				_delay_ms(10);
				TCNT1 = 0;
				setSpeed(99.0);
				counter = 10;
 424:	d1 2c       	mov	r13, r1
 426:	f0 2d       	mov	r31, r0
 428:	68 94       	set
 42a:	66 24       	eor	r6, r6
 42c:	63 f8       	bld	r6, 3
				_delay_ms(10);
				newCount = false;
				TCNT1 = 0;
				setSpeed(99.0);
				_delay_ms(150);
				counter = 8;
 42e:	71 2c       	mov	r7, r1
 430:	68 94       	set
 432:	ee 24       	eor	r14, r14
 434:	e1 f8       	bld	r14, 1
				stopSOMO();
				playNext();
				//playCoinSound(); //Mario coin
				_delay_ms(10);
				newCount = false;
				MotorMode = 2;
 436:	f1 2c       	mov	r15, r1
 438:	0f 2e       	mov	r0, r31
 43a:	f7 e0       	ldi	r31, 0x07	; 7
 43c:	4f 2e       	mov	r4, r31
				TCNT1 = 0;
				setSpeed(99.0);
				bLightStrength(254);
				counter = 7;
 43e:	51 2c       	mov	r5, r1
 440:	f0 2d       	mov	r31, r0
 442:	0f 2e       	mov	r0, r31
 444:	f6 e0       	ldi	r31, 0x06	; 6
 446:	2f 2e       	mov	r2, r31
				_delay_ms(10);
				newCount = false;
				TCNT1 = 0;
				setSpeed(90);
				_delay_ms(150);
				counter = 6;
 448:	31 2c       	mov	r3, r1
 44a:	f0 2d       	mov	r31, r0
 44c:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <counter>
	volumeUp();
	counter = 0;
	PORTA = 0b00000000;
	while(1){
		
		SendInteger(counter);		
 450:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <counter+0x1>
 454:	bc de       	rcall	.-648    	; 0x1ce <_Z11SendIntegeri>
 456:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <counter>
 45a:	f0 91 05 02 	lds	r31, 0x0205	; 0x800205 <counter+0x1>
		switch(counter){
 45e:	31 97       	sbiw	r30, 0x01	; 1
 460:	ed 30       	cpi	r30, 0x0D	; 13
 462:	f1 05       	cpc	r31, r1
 464:	98 f7       	brcc	.-26     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 466:	88 27       	eor	r24, r24
 468:	ee 58       	subi	r30, 0x8E	; 142
 46a:	ff 4f       	sbci	r31, 0xFF	; 255
 46c:	8f 4f       	sbci	r24, 0xFF	; 255
 46e:	f1 c4       	rjmp	.+2530   	; 0xe52 <__tablejump2__>
 470:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
			case 1:   // Start manuelt med brik
			if(newCount){
 474:	88 23       	and	r24, r24
 476:	99 f1       	breq	.+102    	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 478:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
				newCount = false;
 47c:	ab d2       	rcall	.+1366   	; 0x9d4 <_Z8playNextv>
				playNext();
 47e:	8c de       	rcall	.-744    	; 0x198 <_Z8fLightOnv>
 480:	82 e3       	ldi	r24, 0x32	; 50
				//playStartSound(); //Mario Intro
				fLightOn();
 482:	90 e0       	ldi	r25, 0x00	; 0
 484:	72 de       	rcall	.-796    	; 0x16a <_Z14bLightStrengthi>
				bLightStrength(50);
 486:	2f ef       	ldi	r18, 0xFF	; 255
 488:	8d e3       	ldi	r24, 0x3D	; 61
 48a:	99 e4       	ldi	r25, 0x49	; 73
 48c:	21 50       	subi	r18, 0x01	; 1
 48e:	80 40       	sbci	r24, 0x00	; 0
 490:	90 40       	sbci	r25, 0x00	; 0
 492:	e1 f7       	brne	.-8      	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 494:	00 c0       	rjmp	.+0      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 496:	00 00       	nop
 498:	01 e0       	ldi	r16, 0x01	; 1
 49a:	10 e0       	ldi	r17, 0x00	; 0
 49c:	10 93 03 02 	sts	0x0203, r17	; 0x800203 <__data_end+0x1>
				_delay_ms(1500); //Delay for at spille intro 10 sek
				MotorMode = 1;
 4a0:	00 93 02 02 	sts	0x0202, r16	; 0x800202 <__data_end>
 4a4:	2f ef       	ldi	r18, 0xFF	; 255
 4a6:	80 e7       	ldi	r24, 0x70	; 112
 4a8:	92 e0       	ldi	r25, 0x02	; 2
 4aa:	21 50       	subi	r18, 0x01	; 1
 4ac:	80 40       	sbci	r24, 0x00	; 0
 4ae:	90 40       	sbci	r25, 0x00	; 0
 4b0:	e1 f7       	brne	.-8      	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 4b2:	00 c0       	rjmp	.+0      	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 4b4:	00 00       	nop
 4b6:	19 82       	std	Y+1, r1	; 0x01
 4b8:	18 82       	st	Y, r1
 4ba:	60 e0       	ldi	r22, 0x00	; 0
				_delay_ms(50);
				TCNT1 = 0;
 4bc:	70 e0       	ldi	r23, 0x00	; 0
 4be:	86 ec       	ldi	r24, 0xC6	; 198
				setSpeed(99.0);
 4c0:	92 e4       	ldi	r25, 0x42	; 66
 4c2:	fc d1       	rcall	.+1016   	; 0x8bc <_Z8setSpeedf>
 4c4:	2f ef       	ldi	r18, 0xFF	; 255
 4c6:	82 e5       	ldi	r24, 0x52	; 82
 4c8:	97 e0       	ldi	r25, 0x07	; 7
 4ca:	21 50       	subi	r18, 0x01	; 1
 4cc:	80 40       	sbci	r24, 0x00	; 0
 4ce:	90 40       	sbci	r25, 0x00	; 0
 4d0:	e1 f7       	brne	.-8      	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4d4:	00 00       	nop
 4d6:	10 93 05 02 	sts	0x0205, r17	; 0x800205 <counter+0x1>
 4da:	00 93 04 02 	sts	0x0204, r16	; 0x800204 <counter>
				_delay_ms(150);
				counter = 1;
 4de:	81 e0       	ldi	r24, 0x01	; 1
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <__data_end+0x1>
			}
			
			MotorMode = 1;
 4e6:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <__data_end>
 4ea:	b0 cf       	rjmp	.-160    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 4ec:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
			break;
 4f0:	88 23       	and	r24, r24
			
			case 2:  // 1. brik
			if(newCount){
 4f2:	09 f4       	brne	.+2      	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4f4:	ab cf       	rjmp	.-170    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 4f6:	6e d2       	rcall	.+1244   	; 0x9d4 <_Z8playNextv>
 4f8:	8f e3       	ldi	r24, 0x3F	; 63
 4fa:	9c e9       	ldi	r25, 0x9C	; 156
				//stopSOMO();
				playNext();
 4fc:	01 97       	sbiw	r24, 0x01	; 1
 4fe:	f1 f7       	brne	.-4      	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 500:	00 c0       	rjmp	.+0      	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 502:	00 00       	nop
 504:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
 508:	19 82       	std	Y+1, r1	; 0x01
				//playCoinSound(); //Mario coin
				_delay_ms(10);
				newCount = false;
 50a:	18 82       	st	Y, r1
 50c:	60 e0       	ldi	r22, 0x00	; 0
				TCNT1 = 0;
 50e:	70 e0       	ldi	r23, 0x00	; 0
 510:	86 ec       	ldi	r24, 0xC6	; 198
				setSpeed(99.0);
 512:	92 e4       	ldi	r25, 0x42	; 66
 514:	d3 d1       	rcall	.+934    	; 0x8bc <_Z8setSpeedf>
 516:	9f ef       	ldi	r25, 0xFF	; 255
 518:	22 e5       	ldi	r18, 0x52	; 82
 51a:	87 e0       	ldi	r24, 0x07	; 7
 51c:	91 50       	subi	r25, 0x01	; 1
 51e:	20 40       	sbci	r18, 0x00	; 0
 520:	80 40       	sbci	r24, 0x00	; 0
 522:	e1 f7       	brne	.-8      	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 524:	00 c0       	rjmp	.+0      	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 526:	00 00       	nop
 528:	f0 92 05 02 	sts	0x0205, r15	; 0x800205 <counter+0x1>
 52c:	e0 92 04 02 	sts	0x0204, r14	; 0x800204 <counter>
				_delay_ms(150);
				counter = 2;
 530:	8d cf       	rjmp	.-230    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 532:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
 536:	88 23       	and	r24, r24
			}
			
			break;
			case 3:   // 2. brik
			if(newCount){
 538:	09 f4       	brne	.+2      	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 53a:	88 cf       	rjmp	.-240    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 53c:	4b d2       	rcall	.+1174   	; 0x9d4 <_Z8playNextv>
 53e:	8f e3       	ldi	r24, 0x3F	; 63
				playNext();
 540:	9c e9       	ldi	r25, 0x9C	; 156
 542:	01 97       	sbiw	r24, 0x01	; 1
 544:	f1 f7       	brne	.-4      	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 546:	00 c0       	rjmp	.+0      	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 548:	00 00       	nop
 54a:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
 54e:	19 82       	std	Y+1, r1	; 0x01
				//playCoinSound(); //Mario coin
				_delay_ms(10);
				newCount = false;
 550:	18 82       	st	Y, r1
 552:	60 e0       	ldi	r22, 0x00	; 0
				TCNT1 = 0;
 554:	70 e0       	ldi	r23, 0x00	; 0
 556:	86 ec       	ldi	r24, 0xC6	; 198
				setSpeed(99.0);
 558:	92 e4       	ldi	r25, 0x42	; 66
 55a:	b0 d1       	rcall	.+864    	; 0x8bc <_Z8setSpeedf>
 55c:	9f ef       	ldi	r25, 0xFF	; 255
 55e:	22 e5       	ldi	r18, 0x52	; 82
 560:	87 e0       	ldi	r24, 0x07	; 7
 562:	91 50       	subi	r25, 0x01	; 1
 564:	20 40       	sbci	r18, 0x00	; 0
 566:	80 40       	sbci	r24, 0x00	; 0
 568:	e1 f7       	brne	.-8      	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 56a:	00 c0       	rjmp	.+0      	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 56c:	00 00       	nop
 56e:	83 e0       	ldi	r24, 0x03	; 3
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <counter+0x1>
				_delay_ms(150);
				counter = 3;
 576:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <counter>
 57a:	68 cf       	rjmp	.-304    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 57c:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
 580:	88 23       	and	r24, r24
			}
		
			
			break;
			case 4:   // 3. brik på bakken
			if(newCount){
 582:	09 f4       	brne	.+2      	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 584:	63 cf       	rjmp	.-314    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 586:	26 d2       	rcall	.+1100   	; 0x9d4 <_Z8playNextv>
 588:	8f e3       	ldi	r24, 0x3F	; 63
				_delay_ms(10);
				newCount = false;
				TCNT1 = 0;
				setSpeed(80.0);
				_delay_ms(150);*/
				playNext();
 58a:	9c e9       	ldi	r25, 0x9C	; 156
 58c:	01 97       	sbiw	r24, 0x01	; 1
 58e:	f1 f7       	brne	.-4      	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 590:	00 c0       	rjmp	.+0      	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 592:	00 00       	nop
 594:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
 598:	19 82       	std	Y+1, r1	; 0x01
				//playCoinSound(); //Mario coin
				_delay_ms(10);
				newCount = false;
 59a:	18 82       	st	Y, r1
 59c:	60 e0       	ldi	r22, 0x00	; 0
				TCNT1 = 0;
 59e:	70 e0       	ldi	r23, 0x00	; 0
 5a0:	86 ec       	ldi	r24, 0xC6	; 198
				setSpeed(99.0);
 5a2:	92 e4       	ldi	r25, 0x42	; 66
 5a4:	8b d1       	rcall	.+790    	; 0x8bc <_Z8setSpeedf>
 5a6:	9f ef       	ldi	r25, 0xFF	; 255
 5a8:	22 e5       	ldi	r18, 0x52	; 82
 5aa:	87 e0       	ldi	r24, 0x07	; 7
 5ac:	91 50       	subi	r25, 0x01	; 1
 5ae:	20 40       	sbci	r18, 0x00	; 0
 5b0:	80 40       	sbci	r24, 0x00	; 0
 5b2:	e1 f7       	brne	.-8      	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 5b4:	00 c0       	rjmp	.+0      	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 5b6:	00 00       	nop
 5b8:	84 e0       	ldi	r24, 0x04	; 4
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <counter+0x1>
				_delay_ms(150);
				counter = 4;
 5c0:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <counter>
 5c4:	43 cf       	rjmp	.-378    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 5c6:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
			}
			break;
			
			case 5:  // 4. brik
			if(newCount){
 5ca:	88 23       	and	r24, r24
 5cc:	09 f4       	brne	.+2      	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5ce:	3e cf       	rjmp	.-388    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 5d0:	01 d2       	rcall	.+1026   	; 0x9d4 <_Z8playNextv>
 5d2:	8f e3       	ldi	r24, 0x3F	; 63
				//stopSOMO();
				playNext();
 5d4:	9c e9       	ldi	r25, 0x9C	; 156
 5d6:	01 97       	sbiw	r24, 0x01	; 1
 5d8:	f1 f7       	brne	.-4      	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5da:	00 c0       	rjmp	.+0      	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5dc:	00 00       	nop
 5de:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
 5e2:	19 82       	std	Y+1, r1	; 0x01
				//playCoinSound(); //Mario coin
				_delay_ms(10);
				newCount = false;
 5e4:	18 82       	st	Y, r1
 5e6:	60 e0       	ldi	r22, 0x00	; 0
				TCNT1 = 0;
 5e8:	70 e0       	ldi	r23, 0x00	; 0
 5ea:	86 ec       	ldi	r24, 0xC6	; 198
				setSpeed(99.0);
 5ec:	92 e4       	ldi	r25, 0x42	; 66
 5ee:	66 d1       	rcall	.+716    	; 0x8bc <_Z8setSpeedf>
 5f0:	9f ef       	ldi	r25, 0xFF	; 255
 5f2:	22 e5       	ldi	r18, 0x52	; 82
 5f4:	87 e0       	ldi	r24, 0x07	; 7
 5f6:	91 50       	subi	r25, 0x01	; 1
 5f8:	20 40       	sbci	r18, 0x00	; 0
 5fa:	80 40       	sbci	r24, 0x00	; 0
 5fc:	e1 f7       	brne	.-8      	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5fe:	00 c0       	rjmp	.+0      	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 600:	00 00       	nop
 602:	85 e0       	ldi	r24, 0x05	; 5
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <counter+0x1>
				_delay_ms(150);
				counter = 5;
 60a:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <counter>
 60e:	1e cf       	rjmp	.-452    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 610:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
			}
			
			break;
			
			case 6:  // 5. brik
			if(newCount){
 614:	88 23       	and	r24, r24
 616:	09 f4       	brne	.+2      	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 618:	19 cf       	rjmp	.-462    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 61a:	ed d1       	rcall	.+986    	; 0x9f6 <_Z8stopSOMOv>
 61c:	db d1       	rcall	.+950    	; 0x9d4 <_Z8playNextv>
				stopSOMO();
 61e:	8f e3       	ldi	r24, 0x3F	; 63
 620:	9c e9       	ldi	r25, 0x9C	; 156
				playNext();
 622:	01 97       	sbiw	r24, 0x01	; 1
 624:	f1 f7       	brne	.-4      	; 0x622 <__LOCK_REGION_LENGTH__+0x222>
 626:	00 c0       	rjmp	.+0      	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 628:	00 00       	nop
 62a:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
 62e:	19 82       	std	Y+1, r1	; 0x01
 630:	18 82       	st	Y, r1
				//playCoinSound(); //Mario coin
				_delay_ms(10);
				newCount = false;
 632:	60 e0       	ldi	r22, 0x00	; 0
 634:	70 e0       	ldi	r23, 0x00	; 0
				TCNT1 = 0;
 636:	84 eb       	ldi	r24, 0xB4	; 180
				setSpeed(90);
 638:	92 e4       	ldi	r25, 0x42	; 66
 63a:	40 d1       	rcall	.+640    	; 0x8bc <_Z8setSpeedf>
 63c:	9f ef       	ldi	r25, 0xFF	; 255
 63e:	22 e5       	ldi	r18, 0x52	; 82
 640:	87 e0       	ldi	r24, 0x07	; 7
 642:	91 50       	subi	r25, 0x01	; 1
 644:	20 40       	sbci	r18, 0x00	; 0
 646:	80 40       	sbci	r24, 0x00	; 0
 648:	e1 f7       	brne	.-8      	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 64a:	00 c0       	rjmp	.+0      	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 64c:	00 00       	nop
 64e:	30 92 05 02 	sts	0x0205, r3	; 0x800205 <counter+0x1>
 652:	20 92 04 02 	sts	0x0204, r2	; 0x800204 <counter>
				_delay_ms(150);
				counter = 6;
 656:	fa ce       	rjmp	.-524    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 658:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
			}
			
			break;
			
			case 7: // stop ved 6. brik
			if(newCount){
 65c:	88 23       	and	r24, r24
 65e:	09 f4       	brne	.+2      	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 660:	f5 ce       	rjmp	.-534    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 662:	c9 d1       	rcall	.+914    	; 0x9f6 <_Z8stopSOMOv>
				stopSOMO();
 664:	b7 d1       	rcall	.+878    	; 0x9d4 <_Z8playNextv>
 666:	8f e3       	ldi	r24, 0x3F	; 63
				playNext();
 668:	9c e9       	ldi	r25, 0x9C	; 156
 66a:	01 97       	sbiw	r24, 0x01	; 1
 66c:	f1 f7       	brne	.-4      	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 66e:	00 c0       	rjmp	.+0      	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 670:	00 00       	nop
 672:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
 676:	f0 92 03 02 	sts	0x0203, r15	; 0x800203 <__data_end+0x1>
				//playCoinSound(); //Mario coin
				_delay_ms(10);
				newCount = false;
 67a:	e0 92 02 02 	sts	0x0202, r14	; 0x800202 <__data_end>
				MotorMode = 2;
 67e:	19 82       	std	Y+1, r1	; 0x01
 680:	18 82       	st	Y, r1
				TCNT1 = 0;
 682:	60 e0       	ldi	r22, 0x00	; 0
 684:	70 e0       	ldi	r23, 0x00	; 0
				setSpeed(99.0);
 686:	86 ec       	ldi	r24, 0xC6	; 198
 688:	92 e4       	ldi	r25, 0x42	; 66
 68a:	18 d1       	rcall	.+560    	; 0x8bc <_Z8setSpeedf>
 68c:	8e ef       	ldi	r24, 0xFE	; 254
				bLightStrength(254);
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	6c dd       	rcall	.-1320   	; 0x16a <_Z14bLightStrengthi>
 692:	50 92 05 02 	sts	0x0205, r5	; 0x800205 <counter+0x1>
				counter = 7;
 696:	40 92 04 02 	sts	0x0204, r4	; 0x800204 <counter>
 69a:	9f ef       	ldi	r25, 0xFF	; 255
 69c:	29 e6       	ldi	r18, 0x69	; 105
 69e:	88 e1       	ldi	r24, 0x18	; 24
 6a0:	91 50       	subi	r25, 0x01	; 1
 6a2:	20 40       	sbci	r18, 0x00	; 0
 6a4:	80 40       	sbci	r24, 0x00	; 0
 6a6:	e1 f7       	brne	.-8      	; 0x6a0 <__LOCK_REGION_LENGTH__+0x2a0>
 6a8:	00 c0       	rjmp	.+0      	; 0x6aa <__LOCK_REGION_LENGTH__+0x2aa>
 6aa:	00 00       	nop
 6ac:	82 e3       	ldi	r24, 0x32	; 50
				_delay_ms(500);
				bLightStrength(50);
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	5c dd       	rcall	.-1352   	; 0x16a <_Z14bLightStrengthi>
 6b2:	cc ce       	rjmp	.-616    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 6b4:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
			}
			
			break;
			
			case 8: // tilbage forbi 6. brik
			if(newCount){
 6b8:	88 23       	and	r24, r24
 6ba:	09 f4       	brne	.+2      	; 0x6be <__LOCK_REGION_LENGTH__+0x2be>
 6bc:	c7 ce       	rjmp	.-626    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 6be:	9b d1       	rcall	.+822    	; 0x9f6 <_Z8stopSOMOv>
 6c0:	89 d1       	rcall	.+786    	; 0x9d4 <_Z8playNextv>
				stopSOMO();
 6c2:	8f e3       	ldi	r24, 0x3F	; 63
				playNext();
 6c4:	9c e9       	ldi	r25, 0x9C	; 156
 6c6:	01 97       	sbiw	r24, 0x01	; 1
 6c8:	f1 f7       	brne	.-4      	; 0x6c6 <__LOCK_REGION_LENGTH__+0x2c6>
 6ca:	00 c0       	rjmp	.+0      	; 0x6cc <__LOCK_REGION_LENGTH__+0x2cc>
 6cc:	00 00       	nop
 6ce:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
 6d2:	19 82       	std	Y+1, r1	; 0x01
				//playCoinSound(); //Mario coin
				_delay_ms(10);
				newCount = false;
 6d4:	18 82       	st	Y, r1
 6d6:	60 e0       	ldi	r22, 0x00	; 0
				TCNT1 = 0;
 6d8:	70 e0       	ldi	r23, 0x00	; 0
 6da:	86 ec       	ldi	r24, 0xC6	; 198
				setSpeed(99.0);
 6dc:	92 e4       	ldi	r25, 0x42	; 66
 6de:	ee d0       	rcall	.+476    	; 0x8bc <_Z8setSpeedf>
 6e0:	9f ef       	ldi	r25, 0xFF	; 255
 6e2:	22 e5       	ldi	r18, 0x52	; 82
 6e4:	87 e0       	ldi	r24, 0x07	; 7
 6e6:	91 50       	subi	r25, 0x01	; 1
 6e8:	20 40       	sbci	r18, 0x00	; 0
 6ea:	80 40       	sbci	r24, 0x00	; 0
 6ec:	e1 f7       	brne	.-8      	; 0x6e6 <__LOCK_REGION_LENGTH__+0x2e6>
 6ee:	00 c0       	rjmp	.+0      	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
 6f0:	00 00       	nop
 6f2:	70 92 05 02 	sts	0x0205, r7	; 0x800205 <counter+0x1>
				_delay_ms(150);
				counter = 8;
 6f6:	60 92 04 02 	sts	0x0204, r6	; 0x800204 <counter>
 6fa:	a8 ce       	rjmp	.-688    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 6fc:	6b d1       	rcall	.+726    	; 0x9d4 <_Z8playNextv>
 6fe:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <counter>
				//newCount = false;
				//
				//TCNT1 = 0;
				//setSpeed(99);
			//}
			playNext();
 702:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <counter+0x1>
			counter++;
 706:	01 96       	adiw	r24, 0x01	; 1
 708:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <counter+0x1>
 70c:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <counter>
 710:	9d ce       	rjmp	.-710    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 712:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
			break;
 716:	88 23       	and	r24, r24
			
			case 10: //Stop ved 5. brik igen
			if(newCount){
 718:	09 f4       	brne	.+2      	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 71a:	98 ce       	rjmp	.-720    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 71c:	5b d1       	rcall	.+694    	; 0x9d4 <_Z8playNextv>
 71e:	8f e3       	ldi	r24, 0x3F	; 63
				//stopSOMO();
				playNext();
 720:	9c e9       	ldi	r25, 0x9C	; 156
 722:	01 97       	sbiw	r24, 0x01	; 1
 724:	f1 f7       	brne	.-4      	; 0x722 <__LOCK_REGION_LENGTH__+0x322>
 726:	00 c0       	rjmp	.+0      	; 0x728 <__LOCK_REGION_LENGTH__+0x328>
 728:	00 00       	nop
 72a:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
 72e:	8e ef       	ldi	r24, 0xFE	; 254
				//playCoinSound(); //Mario coin
				_delay_ms(10);
				newCount = false;
 730:	90 e0       	ldi	r25, 0x00	; 0
 732:	1b dd       	rcall	.-1482   	; 0x16a <_Z14bLightStrengthi>
				bLightStrength(254);
 734:	81 e0       	ldi	r24, 0x01	; 1
 736:	90 e0       	ldi	r25, 0x00	; 0
 738:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <__data_end+0x1>
				MotorMode = 1;
 73c:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <__data_end>
 740:	8f e3       	ldi	r24, 0x3F	; 63
 742:	9c e9       	ldi	r25, 0x9C	; 156
 744:	01 97       	sbiw	r24, 0x01	; 1
 746:	f1 f7       	brne	.-4      	; 0x744 <__LOCK_REGION_LENGTH__+0x344>
 748:	00 c0       	rjmp	.+0      	; 0x74a <__LOCK_REGION_LENGTH__+0x34a>
 74a:	00 00       	nop
 74c:	19 82       	std	Y+1, r1	; 0x01
 74e:	18 82       	st	Y, r1
				_delay_ms(10);
				TCNT1 = 0;
 750:	60 e0       	ldi	r22, 0x00	; 0
 752:	70 e0       	ldi	r23, 0x00	; 0
				setSpeed(99.0);
 754:	86 ec       	ldi	r24, 0xC6	; 198
 756:	92 e4       	ldi	r25, 0x42	; 66
 758:	b1 d0       	rcall	.+354    	; 0x8bc <_Z8setSpeedf>
 75a:	d0 92 05 02 	sts	0x0205, r13	; 0x800205 <counter+0x1>
 75e:	c0 92 04 02 	sts	0x0204, r12	; 0x800204 <counter>
				counter = 10;
 762:	9f ef       	ldi	r25, 0xFF	; 255
 764:	29 e6       	ldi	r18, 0x69	; 105
 766:	88 e1       	ldi	r24, 0x18	; 24
 768:	91 50       	subi	r25, 0x01	; 1
 76a:	20 40       	sbci	r18, 0x00	; 0
 76c:	80 40       	sbci	r24, 0x00	; 0
 76e:	e1 f7       	brne	.-8      	; 0x768 <__LOCK_REGION_LENGTH__+0x368>
 770:	00 c0       	rjmp	.+0      	; 0x772 <__LOCK_REGION_LENGTH__+0x372>
 772:	00 00       	nop
 774:	82 e3       	ldi	r24, 0x32	; 50
 776:	90 e0       	ldi	r25, 0x00	; 0
				_delay_ms(500);
				bLightStrength(50);
 778:	f8 dc       	rcall	.-1552   	; 0x16a <_Z14bLightStrengthi>
 77a:	68 ce       	rjmp	.-816    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 77c:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
 780:	88 23       	and	r24, r24
		
			}
			break;
			
			case 11: // 5. brik igen
			if(newCount){
 782:	09 f4       	brne	.+2      	; 0x786 <__LOCK_REGION_LENGTH__+0x386>
 784:	63 ce       	rjmp	.-826    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 786:	37 d1       	rcall	.+622    	; 0x9f6 <_Z8stopSOMOv>
 788:	25 d1       	rcall	.+586    	; 0x9d4 <_Z8playNextv>
 78a:	8f e3       	ldi	r24, 0x3F	; 63
				stopSOMO();
 78c:	9c e9       	ldi	r25, 0x9C	; 156
 78e:	01 97       	sbiw	r24, 0x01	; 1
				playNext();
 790:	f1 f7       	brne	.-4      	; 0x78e <__LOCK_REGION_LENGTH__+0x38e>
 792:	00 c0       	rjmp	.+0      	; 0x794 <__LOCK_REGION_LENGTH__+0x394>
 794:	00 00       	nop
 796:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
 79a:	81 e0       	ldi	r24, 0x01	; 1
				//playCoinSound(); //Mario coin
				_delay_ms(10);
				newCount = false;
 79c:	90 e0       	ldi	r25, 0x00	; 0
 79e:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <__data_end+0x1>
				MotorMode = 1;
 7a2:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <__data_end>
 7a6:	19 82       	std	Y+1, r1	; 0x01
 7a8:	18 82       	st	Y, r1
				TCNT1 = 0;
 7aa:	60 e0       	ldi	r22, 0x00	; 0
 7ac:	70 e0       	ldi	r23, 0x00	; 0
				setSpeed(75.0);
 7ae:	86 e9       	ldi	r24, 0x96	; 150
 7b0:	92 e4       	ldi	r25, 0x42	; 66
 7b2:	84 d0       	rcall	.+264    	; 0x8bc <_Z8setSpeedf>
 7b4:	9f ef       	ldi	r25, 0xFF	; 255
 7b6:	23 ec       	ldi	r18, 0xC3	; 195
 7b8:	89 e0       	ldi	r24, 0x09	; 9
 7ba:	91 50       	subi	r25, 0x01	; 1
 7bc:	20 40       	sbci	r18, 0x00	; 0
 7be:	80 40       	sbci	r24, 0x00	; 0
 7c0:	e1 f7       	brne	.-8      	; 0x7ba <__LOCK_REGION_LENGTH__+0x3ba>
 7c2:	00 c0       	rjmp	.+0      	; 0x7c4 <__LOCK_REGION_LENGTH__+0x3c4>
 7c4:	00 00       	nop
 7c6:	b0 92 05 02 	sts	0x0205, r11	; 0x800205 <counter+0x1>
 7ca:	a0 92 04 02 	sts	0x0204, r10	; 0x800204 <counter>
				_delay_ms(200);
				counter = 11;
 7ce:	3e ce       	rjmp	.-900    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 7d0:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
 7d4:	88 23       	and	r24, r24
			}
			break;
			
			case 12: // 6. brik igen 
			if(newCount){
 7d6:	09 f4       	brne	.+2      	; 0x7da <__LOCK_REGION_LENGTH__+0x3da>
 7d8:	39 ce       	rjmp	.-910    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 7da:	0d d1       	rcall	.+538    	; 0x9f6 <_Z8stopSOMOv>
 7dc:	fb d0       	rcall	.+502    	; 0x9d4 <_Z8playNextv>
				stopSOMO();
 7de:	8f e3       	ldi	r24, 0x3F	; 63
 7e0:	9c e9       	ldi	r25, 0x9C	; 156
				playNext();
 7e2:	01 97       	sbiw	r24, 0x01	; 1
 7e4:	f1 f7       	brne	.-4      	; 0x7e2 <__LOCK_REGION_LENGTH__+0x3e2>
 7e6:	00 c0       	rjmp	.+0      	; 0x7e8 <__LOCK_REGION_LENGTH__+0x3e8>
 7e8:	00 00       	nop
 7ea:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
 7ee:	60 e0       	ldi	r22, 0x00	; 0
				//playCoinSound(); //Mario coin
				_delay_ms(10);
				newCount = false;
 7f0:	70 e0       	ldi	r23, 0x00	; 0
 7f2:	cb 01       	movw	r24, r22
				setSpeed(0);
 7f4:	63 d0       	rcall	.+198    	; 0x8bc <_Z8setSpeedf>
 7f6:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <__data_end+0x1>
 7fa:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <__data_end>
				MotorMode = 0;
 7fe:	9f ef       	ldi	r25, 0xFF	; 255
 800:	27 ea       	ldi	r18, 0xA7	; 167
 802:	81 e6       	ldi	r24, 0x61	; 97
 804:	91 50       	subi	r25, 0x01	; 1
 806:	20 40       	sbci	r18, 0x00	; 0
 808:	80 40       	sbci	r24, 0x00	; 0
 80a:	e1 f7       	brne	.-8      	; 0x804 <__LOCK_REGION_LENGTH__+0x404>
 80c:	00 c0       	rjmp	.+0      	; 0x80e <__LOCK_REGION_LENGTH__+0x40e>
 80e:	00 00       	nop
 810:	81 e0       	ldi	r24, 0x01	; 1
 812:	90 e0       	ldi	r25, 0x00	; 0
 814:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <__data_end+0x1>
				_delay_ms(2000);
				MotorMode = 1;
 818:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <__data_end>
 81c:	19 82       	std	Y+1, r1	; 0x01
 81e:	18 82       	st	Y, r1
 820:	60 e0       	ldi	r22, 0x00	; 0
				TCNT1 = 0;
 822:	70 e0       	ldi	r23, 0x00	; 0
 824:	86 ec       	ldi	r24, 0xC6	; 198
				setSpeed(99.0);
 826:	92 e4       	ldi	r25, 0x42	; 66
 828:	49 d0       	rcall	.+146    	; 0x8bc <_Z8setSpeedf>
 82a:	90 92 05 02 	sts	0x0205, r9	; 0x800205 <counter+0x1>
 82e:	80 92 04 02 	sts	0x0204, r8	; 0x800204 <counter>
				counter = 12;
 832:	0c ce       	rjmp	.-1000   	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 834:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
			}
			
			break;
			
			case 13: // Stop efter 7. brik
			if(newCount){
 838:	88 23       	and	r24, r24
 83a:	09 f4       	brne	.+2      	; 0x83e <__LOCK_REGION_LENGTH__+0x43e>
 83c:	07 ce       	rjmp	.-1010   	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 83e:	db d0       	rcall	.+438    	; 0x9f6 <_Z8stopSOMOv>
				stopSOMO();
 840:	8f e3       	ldi	r24, 0x3F	; 63
 842:	9c e9       	ldi	r25, 0x9C	; 156
 844:	01 97       	sbiw	r24, 0x01	; 1
 846:	f1 f7       	brne	.-4      	; 0x844 <__LOCK_REGION_LENGTH__+0x444>
 848:	00 c0       	rjmp	.+0      	; 0x84a <__LOCK_REGION_LENGTH__+0x44a>
 84a:	00 00       	nop
 84c:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__data_start>
				
				//playCoinSound(); //Mario coin
				_delay_ms(10);
				newCount = false;
 850:	8e ef       	ldi	r24, 0xFE	; 254
 852:	90 e0       	ldi	r25, 0x00	; 0
				bLightStrength(254);
 854:	8a dc       	rcall	.-1772   	; 0x16a <_Z14bLightStrengthi>
 856:	9f ef       	ldi	r25, 0xFF	; 255
 858:	23 ed       	ldi	r18, 0xD3	; 211
 85a:	80 e3       	ldi	r24, 0x30	; 48
 85c:	91 50       	subi	r25, 0x01	; 1
 85e:	20 40       	sbci	r18, 0x00	; 0
 860:	80 40       	sbci	r24, 0x00	; 0
 862:	e1 f7       	brne	.-8      	; 0x85c <__LOCK_REGION_LENGTH__+0x45c>
 864:	00 c0       	rjmp	.+0      	; 0x866 <__LOCK_REGION_LENGTH__+0x466>
 866:	00 00       	nop
 868:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <__data_end+0x1>
 86c:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <__data_end>
				_delay_ms(1000);
				MotorMode = 0;
 870:	9f ef       	ldi	r25, 0xFF	; 255
 872:	29 e6       	ldi	r18, 0x69	; 105
 874:	88 e1       	ldi	r24, 0x18	; 24
 876:	91 50       	subi	r25, 0x01	; 1
 878:	20 40       	sbci	r18, 0x00	; 0
 87a:	80 40       	sbci	r24, 0x00	; 0
 87c:	e1 f7       	brne	.-8      	; 0x876 <__LOCK_REGION_LENGTH__+0x476>
 87e:	00 c0       	rjmp	.+0      	; 0x880 <__LOCK_REGION_LENGTH__+0x480>
 880:	00 00       	nop
 882:	8d dc       	rcall	.-1766   	; 0x19e <_Z9fLightOffv>
 884:	81 e0       	ldi	r24, 0x01	; 1
 886:	90 e0       	ldi	r25, 0x00	; 0
				_delay_ms(500);
				fLightOff();
 888:	70 dc       	rcall	.-1824   	; 0x16a <_Z14bLightStrengthi>
 88a:	b5 d0       	rcall	.+362    	; 0x9f6 <_Z8stopSOMOv>
				bLightStrength(1);
 88c:	a3 d0       	rcall	.+326    	; 0x9d4 <_Z8playNextv>
 88e:	de cd       	rjmp	.-1092   	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>

00000890 <_Z9initMotorv>:
#include "MotorDriver.h"
#include <stdio.h>
#include <avr/io.h>

void initMotor(){
	TCCR1A = (1<<COM1A1)|(0<<COM1A0)|(1<<WGM11)|(0<<WGM10); // Set compare mode for OCR1A
 890:	82 e8       	ldi	r24, 0x82	; 130
 892:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
	TCCR1B = (1<<WGM13)|(0<<WGM12)|(1<<CS12)|(0<<CS11)|(0<<CS10); // Set Mode 1, PWM Phase correct 8-bit & 256 prescaler
 896:	84 e1       	ldi	r24, 0x14	; 20
 898:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
	ICR1 = 125;
 89c:	8d e7       	ldi	r24, 0x7D	; 125
 89e:	90 e0       	ldi	r25, 0x00	; 0
 8a0:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x700087>
 8a4:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x700086>
	TIMSK1 = 0b00000010;
 8a8:	82 e0       	ldi	r24, 0x02	; 2
 8aa:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x70006f>
	OCR1A = 0;
 8ae:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 8b2:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
	DDRA = 0xFF; // Make pin A ports outputs, so we can trigger the H-Bridge.
 8b6:	8f ef       	ldi	r24, 0xFF	; 255
 8b8:	81 b9       	out	0x01, r24	; 1
 8ba:	08 95       	ret

000008bc <_Z8setSpeedf>:
}

void setSpeed(float speed) {
 8bc:	cf 92       	push	r12
 8be:	df 92       	push	r13
 8c0:	ef 92       	push	r14
 8c2:	ff 92       	push	r15
 8c4:	cf 93       	push	r28
 8c6:	df 93       	push	r29
	//else {
		//dutyCycle = speed;
	//}

	speed = speed / 100;
	OCR1A = (1-speed)*ICR1;
 8c8:	c0 91 86 00 	lds	r28, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x700086>
 8cc:	d0 91 87 00 	lds	r29, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x700087>
 8d0:	20 e0       	ldi	r18, 0x00	; 0
 8d2:	30 e0       	ldi	r19, 0x00	; 0
 8d4:	48 ec       	ldi	r20, 0xC8	; 200
 8d6:	52 e4       	ldi	r21, 0x42	; 66
 8d8:	15 d1       	rcall	.+554    	; 0xb04 <__divsf3>
 8da:	9b 01       	movw	r18, r22
 8dc:	ac 01       	movw	r20, r24
 8de:	60 e0       	ldi	r22, 0x00	; 0
 8e0:	70 e0       	ldi	r23, 0x00	; 0
 8e2:	80 e8       	ldi	r24, 0x80	; 128
 8e4:	9f e3       	ldi	r25, 0x3F	; 63
 8e6:	a9 d0       	rcall	.+338    	; 0xa3a <__subsf3>
 8e8:	6b 01       	movw	r12, r22
 8ea:	7c 01       	movw	r14, r24
 8ec:	be 01       	movw	r22, r28
 8ee:	80 e0       	ldi	r24, 0x00	; 0
 8f0:	90 e0       	ldi	r25, 0x00	; 0
 8f2:	9c d1       	rcall	.+824    	; 0xc2c <__floatunsisf>
 8f4:	9b 01       	movw	r18, r22
 8f6:	ac 01       	movw	r20, r24
 8f8:	c7 01       	movw	r24, r14
 8fa:	b6 01       	movw	r22, r12
 8fc:	25 d2       	rcall	.+1098   	; 0xd48 <__mulsf3>
 8fe:	6a d1       	rcall	.+724    	; 0xbd4 <__fixunssfsi>
 900:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 904:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
 908:	df 91       	pop	r29
 90a:	cf 91       	pop	r28
 90c:	ff 90       	pop	r15
 90e:	ef 90       	pop	r14
 910:	df 90       	pop	r13
 912:	cf 90       	pop	r12
 914:	08 95       	ret

00000916 <_Z8InitUARTmhb>:
	SendChar(0x00);
	SendChar(0x00);
	SendChar(0x03);
	SendChar(0xFF);
	SendChar(0xFA);
	SendChar(0xEF);
 916:	0f 93       	push	r16
 918:	1f 93       	push	r17
 91a:	22 23       	and	r18, r18
 91c:	29 f0       	breq	.+10     	; 0x928 <_Z8InitUARTmhb+0x12>
 91e:	28 e9       	ldi	r18, 0x98	; 152
 920:	20 93 c9 00 	sts	0x00C9, r18	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7000c9>
 924:	78 94       	sei
 926:	03 c0       	rjmp	.+6      	; 0x92e <_Z8InitUARTmhb+0x18>
 928:	28 e1       	ldi	r18, 0x18	; 24
 92a:	20 93 c9 00 	sts	0x00C9, r18	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7000c9>
 92e:	8b 01       	movw	r16, r22
 930:	9c 01       	movw	r18, r24
 932:	0c 52       	subi	r16, 0x2C	; 44
 934:	11 40       	sbci	r17, 0x01	; 1
 936:	21 09       	sbc	r18, r1
 938:	31 09       	sbc	r19, r1
 93a:	05 3d       	cpi	r16, 0xD5	; 213
 93c:	10 4c       	sbci	r17, 0xC0	; 192
 93e:	21 40       	sbci	r18, 0x01	; 1
 940:	31 05       	cpc	r19, r1
 942:	08 f5       	brcc	.+66     	; 0x986 <_Z8InitUARTmhb+0x70>
 944:	2b ef       	ldi	r18, 0xFB	; 251
 946:	24 0f       	add	r18, r20
 948:	24 30       	cpi	r18, 0x04	; 4
 94a:	e8 f4       	brcc	.+58     	; 0x986 <_Z8InitUARTmhb+0x70>
 94c:	46 30       	cpi	r20, 0x06	; 6
 94e:	61 f0       	breq	.+24     	; 0x968 <_Z8InitUARTmhb+0x52>
 950:	18 f4       	brcc	.+6      	; 0x958 <_Z8InitUARTmhb+0x42>
 952:	45 30       	cpi	r20, 0x05	; 5
 954:	31 f0       	breq	.+12     	; 0x962 <_Z8InitUARTmhb+0x4c>
 956:	14 c0       	rjmp	.+40     	; 0x980 <_Z8InitUARTmhb+0x6a>
 958:	47 30       	cpi	r20, 0x07	; 7
 95a:	51 f0       	breq	.+20     	; 0x970 <_Z8InitUARTmhb+0x5a>
 95c:	48 30       	cpi	r20, 0x08	; 8
 95e:	61 f0       	breq	.+24     	; 0x978 <_Z8InitUARTmhb+0x62>
 960:	0f c0       	rjmp	.+30     	; 0x980 <_Z8InitUARTmhb+0x6a>
 962:	10 92 ca 00 	sts	0x00CA, r1	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7000ca>
 966:	0f c0       	rjmp	.+30     	; 0x986 <_Z8InitUARTmhb+0x70>
 968:	22 e0       	ldi	r18, 0x02	; 2
 96a:	20 93 ca 00 	sts	0x00CA, r18	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7000ca>
 96e:	0b c0       	rjmp	.+22     	; 0x986 <_Z8InitUARTmhb+0x70>
 970:	24 e0       	ldi	r18, 0x04	; 4
 972:	20 93 ca 00 	sts	0x00CA, r18	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7000ca>
 976:	07 c0       	rjmp	.+14     	; 0x986 <_Z8InitUARTmhb+0x70>
 978:	26 e0       	ldi	r18, 0x06	; 6
 97a:	20 93 ca 00 	sts	0x00CA, r18	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7000ca>
 97e:	03 c0       	rjmp	.+6      	; 0x986 <_Z8InitUARTmhb+0x70>
 980:	26 e0       	ldi	r18, 0x06	; 6
 982:	20 93 ca 00 	sts	0x00CA, r18	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7000ca>
 986:	dc 01       	movw	r26, r24
 988:	cb 01       	movw	r24, r22
 98a:	88 0f       	add	r24, r24
 98c:	99 1f       	adc	r25, r25
 98e:	aa 1f       	adc	r26, r26
 990:	bb 1f       	adc	r27, r27
 992:	88 0f       	add	r24, r24
 994:	99 1f       	adc	r25, r25
 996:	aa 1f       	adc	r26, r26
 998:	bb 1f       	adc	r27, r27
 99a:	9c 01       	movw	r18, r24
 99c:	ad 01       	movw	r20, r26
 99e:	22 0f       	add	r18, r18
 9a0:	33 1f       	adc	r19, r19
 9a2:	44 1f       	adc	r20, r20
 9a4:	55 1f       	adc	r21, r21
 9a6:	22 0f       	add	r18, r18
 9a8:	33 1f       	adc	r19, r19
 9aa:	44 1f       	adc	r20, r20
 9ac:	55 1f       	adc	r21, r21
 9ae:	60 e0       	ldi	r22, 0x00	; 0
 9b0:	74 e2       	ldi	r23, 0x24	; 36
 9b2:	84 ef       	ldi	r24, 0xF4	; 244
 9b4:	90 e0       	ldi	r25, 0x00	; 0
 9b6:	2b d2       	rcall	.+1110   	; 0xe0e <__udivmodsi4>
 9b8:	21 50       	subi	r18, 0x01	; 1
 9ba:	20 93 cc 00 	sts	0x00CC, r18	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 9be:	1f 91       	pop	r17
 9c0:	0f 91       	pop	r16
 9c2:	08 95       	ret

000009c4 <_Z8SendCharc>:
 9c4:	e8 ec       	ldi	r30, 0xC8	; 200
 9c6:	f0 e0       	ldi	r31, 0x00	; 0
 9c8:	90 81       	ld	r25, Z
 9ca:	95 ff       	sbrs	r25, 5
 9cc:	fd cf       	rjmp	.-6      	; 0x9c8 <_Z8SendCharc+0x4>
 9ce:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
 9d2:	08 95       	ret

000009d4 <_Z8playNextv>:
 9d4:	8e e7       	ldi	r24, 0x7E	; 126
 9d6:	f6 df       	rcall	.-20     	; 0x9c4 <_Z8SendCharc>
 9d8:	81 e0       	ldi	r24, 0x01	; 1
 9da:	f4 df       	rcall	.-24     	; 0x9c4 <_Z8SendCharc>
 9dc:	80 e0       	ldi	r24, 0x00	; 0
 9de:	f2 df       	rcall	.-28     	; 0x9c4 <_Z8SendCharc>
 9e0:	80 e0       	ldi	r24, 0x00	; 0
 9e2:	f0 df       	rcall	.-32     	; 0x9c4 <_Z8SendCharc>
 9e4:	80 e0       	ldi	r24, 0x00	; 0
 9e6:	ee df       	rcall	.-36     	; 0x9c4 <_Z8SendCharc>
 9e8:	8f ef       	ldi	r24, 0xFF	; 255
 9ea:	ec df       	rcall	.-40     	; 0x9c4 <_Z8SendCharc>
 9ec:	8f ef       	ldi	r24, 0xFF	; 255
 9ee:	ea df       	rcall	.-44     	; 0x9c4 <_Z8SendCharc>
 9f0:	8f ee       	ldi	r24, 0xEF	; 239
 9f2:	e8 cf       	rjmp	.-48     	; 0x9c4 <_Z8SendCharc>
 9f4:	08 95       	ret

000009f6 <_Z8stopSOMOv>:
 9f6:	8e e7       	ldi	r24, 0x7E	; 126
 9f8:	e5 df       	rcall	.-54     	; 0x9c4 <_Z8SendCharc>
 9fa:	86 e1       	ldi	r24, 0x16	; 22
 9fc:	e3 df       	rcall	.-58     	; 0x9c4 <_Z8SendCharc>
 9fe:	80 e0       	ldi	r24, 0x00	; 0
 a00:	e1 df       	rcall	.-62     	; 0x9c4 <_Z8SendCharc>
 a02:	80 e0       	ldi	r24, 0x00	; 0
 a04:	df df       	rcall	.-66     	; 0x9c4 <_Z8SendCharc>
 a06:	80 e0       	ldi	r24, 0x00	; 0
 a08:	dd df       	rcall	.-70     	; 0x9c4 <_Z8SendCharc>
 a0a:	8f ef       	ldi	r24, 0xFF	; 255
 a0c:	db df       	rcall	.-74     	; 0x9c4 <_Z8SendCharc>
 a0e:	8a ee       	ldi	r24, 0xEA	; 234
 a10:	d9 df       	rcall	.-78     	; 0x9c4 <_Z8SendCharc>
 a12:	8f ee       	ldi	r24, 0xEF	; 239
 a14:	d7 cf       	rjmp	.-82     	; 0x9c4 <_Z8SendCharc>
 a16:	08 95       	ret

00000a18 <_Z8volumeUpv>:
};

void volumeUp()
{

	SendChar(0x7E);
 a18:	8e e7       	ldi	r24, 0x7E	; 126
 a1a:	d4 df       	rcall	.-88     	; 0x9c4 <_Z8SendCharc>
	SendChar(0x04);
 a1c:	84 e0       	ldi	r24, 0x04	; 4
 a1e:	d2 df       	rcall	.-92     	; 0x9c4 <_Z8SendCharc>
	SendChar(0x00);
 a20:	80 e0       	ldi	r24, 0x00	; 0
 a22:	d0 df       	rcall	.-96     	; 0x9c4 <_Z8SendCharc>
	SendChar(0x00);
 a24:	80 e0       	ldi	r24, 0x00	; 0
 a26:	ce df       	rcall	.-100    	; 0x9c4 <_Z8SendCharc>
	SendChar(0x00);
 a28:	80 e0       	ldi	r24, 0x00	; 0
 a2a:	cc df       	rcall	.-104    	; 0x9c4 <_Z8SendCharc>
	SendChar(0xFF);
 a2c:	8f ef       	ldi	r24, 0xFF	; 255
 a2e:	ca df       	rcall	.-108    	; 0x9c4 <_Z8SendCharc>
	SendChar(0xFC);
 a30:	8c ef       	ldi	r24, 0xFC	; 252
 a32:	c8 df       	rcall	.-112    	; 0x9c4 <_Z8SendCharc>
 a34:	8f ee       	ldi	r24, 0xEF	; 239
	SendChar(0xEF);
 a36:	c6 cf       	rjmp	.-116    	; 0x9c4 <_Z8SendCharc>
 a38:	08 95       	ret

00000a3a <__subsf3>:
 a3a:	50 58       	subi	r21, 0x80	; 128

00000a3c <__addsf3>:
 a3c:	bb 27       	eor	r27, r27
 a3e:	aa 27       	eor	r26, r26
 a40:	0e d0       	rcall	.+28     	; 0xa5e <__addsf3x>
 a42:	48 c1       	rjmp	.+656    	; 0xcd4 <__fp_round>
 a44:	39 d1       	rcall	.+626    	; 0xcb8 <__fp_pscA>
 a46:	30 f0       	brcs	.+12     	; 0xa54 <__addsf3+0x18>
 a48:	3e d1       	rcall	.+636    	; 0xcc6 <__fp_pscB>
 a4a:	20 f0       	brcs	.+8      	; 0xa54 <__addsf3+0x18>
 a4c:	31 f4       	brne	.+12     	; 0xa5a <__addsf3+0x1e>
 a4e:	9f 3f       	cpi	r25, 0xFF	; 255
 a50:	11 f4       	brne	.+4      	; 0xa56 <__addsf3+0x1a>
 a52:	1e f4       	brtc	.+6      	; 0xa5a <__addsf3+0x1e>
 a54:	2e c1       	rjmp	.+604    	; 0xcb2 <__fp_nan>
 a56:	0e f4       	brtc	.+2      	; 0xa5a <__addsf3+0x1e>
 a58:	e0 95       	com	r30
 a5a:	e7 fb       	bst	r30, 7
 a5c:	24 c1       	rjmp	.+584    	; 0xca6 <__fp_inf>

00000a5e <__addsf3x>:
 a5e:	e9 2f       	mov	r30, r25
 a60:	4a d1       	rcall	.+660    	; 0xcf6 <__fp_split3>
 a62:	80 f3       	brcs	.-32     	; 0xa44 <__addsf3+0x8>
 a64:	ba 17       	cp	r27, r26
 a66:	62 07       	cpc	r22, r18
 a68:	73 07       	cpc	r23, r19
 a6a:	84 07       	cpc	r24, r20
 a6c:	95 07       	cpc	r25, r21
 a6e:	18 f0       	brcs	.+6      	; 0xa76 <__addsf3x+0x18>
 a70:	71 f4       	brne	.+28     	; 0xa8e <__addsf3x+0x30>
 a72:	9e f5       	brtc	.+102    	; 0xada <__addsf3x+0x7c>
 a74:	62 c1       	rjmp	.+708    	; 0xd3a <__fp_zero>
 a76:	0e f4       	brtc	.+2      	; 0xa7a <__addsf3x+0x1c>
 a78:	e0 95       	com	r30
 a7a:	0b 2e       	mov	r0, r27
 a7c:	ba 2f       	mov	r27, r26
 a7e:	a0 2d       	mov	r26, r0
 a80:	0b 01       	movw	r0, r22
 a82:	b9 01       	movw	r22, r18
 a84:	90 01       	movw	r18, r0
 a86:	0c 01       	movw	r0, r24
 a88:	ca 01       	movw	r24, r20
 a8a:	a0 01       	movw	r20, r0
 a8c:	11 24       	eor	r1, r1
 a8e:	ff 27       	eor	r31, r31
 a90:	59 1b       	sub	r21, r25
 a92:	99 f0       	breq	.+38     	; 0xaba <__addsf3x+0x5c>
 a94:	59 3f       	cpi	r21, 0xF9	; 249
 a96:	50 f4       	brcc	.+20     	; 0xaac <__addsf3x+0x4e>
 a98:	50 3e       	cpi	r21, 0xE0	; 224
 a9a:	68 f1       	brcs	.+90     	; 0xaf6 <__addsf3x+0x98>
 a9c:	1a 16       	cp	r1, r26
 a9e:	f0 40       	sbci	r31, 0x00	; 0
 aa0:	a2 2f       	mov	r26, r18
 aa2:	23 2f       	mov	r18, r19
 aa4:	34 2f       	mov	r19, r20
 aa6:	44 27       	eor	r20, r20
 aa8:	58 5f       	subi	r21, 0xF8	; 248
 aaa:	f3 cf       	rjmp	.-26     	; 0xa92 <__addsf3x+0x34>
 aac:	46 95       	lsr	r20
 aae:	37 95       	ror	r19
 ab0:	27 95       	ror	r18
 ab2:	a7 95       	ror	r26
 ab4:	f0 40       	sbci	r31, 0x00	; 0
 ab6:	53 95       	inc	r21
 ab8:	c9 f7       	brne	.-14     	; 0xaac <__addsf3x+0x4e>
 aba:	7e f4       	brtc	.+30     	; 0xada <__addsf3x+0x7c>
 abc:	1f 16       	cp	r1, r31
 abe:	ba 0b       	sbc	r27, r26
 ac0:	62 0b       	sbc	r22, r18
 ac2:	73 0b       	sbc	r23, r19
 ac4:	84 0b       	sbc	r24, r20
 ac6:	ba f0       	brmi	.+46     	; 0xaf6 <__addsf3x+0x98>
 ac8:	91 50       	subi	r25, 0x01	; 1
 aca:	a1 f0       	breq	.+40     	; 0xaf4 <__addsf3x+0x96>
 acc:	ff 0f       	add	r31, r31
 ace:	bb 1f       	adc	r27, r27
 ad0:	66 1f       	adc	r22, r22
 ad2:	77 1f       	adc	r23, r23
 ad4:	88 1f       	adc	r24, r24
 ad6:	c2 f7       	brpl	.-16     	; 0xac8 <__addsf3x+0x6a>
 ad8:	0e c0       	rjmp	.+28     	; 0xaf6 <__addsf3x+0x98>
 ada:	ba 0f       	add	r27, r26
 adc:	62 1f       	adc	r22, r18
 ade:	73 1f       	adc	r23, r19
 ae0:	84 1f       	adc	r24, r20
 ae2:	48 f4       	brcc	.+18     	; 0xaf6 <__addsf3x+0x98>
 ae4:	87 95       	ror	r24
 ae6:	77 95       	ror	r23
 ae8:	67 95       	ror	r22
 aea:	b7 95       	ror	r27
 aec:	f7 95       	ror	r31
 aee:	9e 3f       	cpi	r25, 0xFE	; 254
 af0:	08 f0       	brcs	.+2      	; 0xaf4 <__addsf3x+0x96>
 af2:	b3 cf       	rjmp	.-154    	; 0xa5a <__addsf3+0x1e>
 af4:	93 95       	inc	r25
 af6:	88 0f       	add	r24, r24
 af8:	08 f0       	brcs	.+2      	; 0xafc <__addsf3x+0x9e>
 afa:	99 27       	eor	r25, r25
 afc:	ee 0f       	add	r30, r30
 afe:	97 95       	ror	r25
 b00:	87 95       	ror	r24
 b02:	08 95       	ret

00000b04 <__divsf3>:
 b04:	0c d0       	rcall	.+24     	; 0xb1e <__divsf3x>
 b06:	e6 c0       	rjmp	.+460    	; 0xcd4 <__fp_round>
 b08:	de d0       	rcall	.+444    	; 0xcc6 <__fp_pscB>
 b0a:	40 f0       	brcs	.+16     	; 0xb1c <__divsf3+0x18>
 b0c:	d5 d0       	rcall	.+426    	; 0xcb8 <__fp_pscA>
 b0e:	30 f0       	brcs	.+12     	; 0xb1c <__divsf3+0x18>
 b10:	21 f4       	brne	.+8      	; 0xb1a <__divsf3+0x16>
 b12:	5f 3f       	cpi	r21, 0xFF	; 255
 b14:	19 f0       	breq	.+6      	; 0xb1c <__divsf3+0x18>
 b16:	c7 c0       	rjmp	.+398    	; 0xca6 <__fp_inf>
 b18:	51 11       	cpse	r21, r1
 b1a:	10 c1       	rjmp	.+544    	; 0xd3c <__fp_szero>
 b1c:	ca c0       	rjmp	.+404    	; 0xcb2 <__fp_nan>

00000b1e <__divsf3x>:
 b1e:	eb d0       	rcall	.+470    	; 0xcf6 <__fp_split3>
 b20:	98 f3       	brcs	.-26     	; 0xb08 <__divsf3+0x4>

00000b22 <__divsf3_pse>:
 b22:	99 23       	and	r25, r25
 b24:	c9 f3       	breq	.-14     	; 0xb18 <__divsf3+0x14>
 b26:	55 23       	and	r21, r21
 b28:	b1 f3       	breq	.-20     	; 0xb16 <__divsf3+0x12>
 b2a:	95 1b       	sub	r25, r21
 b2c:	55 0b       	sbc	r21, r21
 b2e:	bb 27       	eor	r27, r27
 b30:	aa 27       	eor	r26, r26
 b32:	62 17       	cp	r22, r18
 b34:	73 07       	cpc	r23, r19
 b36:	84 07       	cpc	r24, r20
 b38:	38 f0       	brcs	.+14     	; 0xb48 <__divsf3_pse+0x26>
 b3a:	9f 5f       	subi	r25, 0xFF	; 255
 b3c:	5f 4f       	sbci	r21, 0xFF	; 255
 b3e:	22 0f       	add	r18, r18
 b40:	33 1f       	adc	r19, r19
 b42:	44 1f       	adc	r20, r20
 b44:	aa 1f       	adc	r26, r26
 b46:	a9 f3       	breq	.-22     	; 0xb32 <__divsf3_pse+0x10>
 b48:	33 d0       	rcall	.+102    	; 0xbb0 <__divsf3_pse+0x8e>
 b4a:	0e 2e       	mov	r0, r30
 b4c:	3a f0       	brmi	.+14     	; 0xb5c <__divsf3_pse+0x3a>
 b4e:	e0 e8       	ldi	r30, 0x80	; 128
 b50:	30 d0       	rcall	.+96     	; 0xbb2 <__divsf3_pse+0x90>
 b52:	91 50       	subi	r25, 0x01	; 1
 b54:	50 40       	sbci	r21, 0x00	; 0
 b56:	e6 95       	lsr	r30
 b58:	00 1c       	adc	r0, r0
 b5a:	ca f7       	brpl	.-14     	; 0xb4e <__divsf3_pse+0x2c>
 b5c:	29 d0       	rcall	.+82     	; 0xbb0 <__divsf3_pse+0x8e>
 b5e:	fe 2f       	mov	r31, r30
 b60:	27 d0       	rcall	.+78     	; 0xbb0 <__divsf3_pse+0x8e>
 b62:	66 0f       	add	r22, r22
 b64:	77 1f       	adc	r23, r23
 b66:	88 1f       	adc	r24, r24
 b68:	bb 1f       	adc	r27, r27
 b6a:	26 17       	cp	r18, r22
 b6c:	37 07       	cpc	r19, r23
 b6e:	48 07       	cpc	r20, r24
 b70:	ab 07       	cpc	r26, r27
 b72:	b0 e8       	ldi	r27, 0x80	; 128
 b74:	09 f0       	breq	.+2      	; 0xb78 <__divsf3_pse+0x56>
 b76:	bb 0b       	sbc	r27, r27
 b78:	80 2d       	mov	r24, r0
 b7a:	bf 01       	movw	r22, r30
 b7c:	ff 27       	eor	r31, r31
 b7e:	93 58       	subi	r25, 0x83	; 131
 b80:	5f 4f       	sbci	r21, 0xFF	; 255
 b82:	2a f0       	brmi	.+10     	; 0xb8e <__divsf3_pse+0x6c>
 b84:	9e 3f       	cpi	r25, 0xFE	; 254
 b86:	51 05       	cpc	r21, r1
 b88:	68 f0       	brcs	.+26     	; 0xba4 <__divsf3_pse+0x82>
 b8a:	8d c0       	rjmp	.+282    	; 0xca6 <__fp_inf>
 b8c:	d7 c0       	rjmp	.+430    	; 0xd3c <__fp_szero>
 b8e:	5f 3f       	cpi	r21, 0xFF	; 255
 b90:	ec f3       	brlt	.-6      	; 0xb8c <__divsf3_pse+0x6a>
 b92:	98 3e       	cpi	r25, 0xE8	; 232
 b94:	dc f3       	brlt	.-10     	; 0xb8c <__divsf3_pse+0x6a>
 b96:	86 95       	lsr	r24
 b98:	77 95       	ror	r23
 b9a:	67 95       	ror	r22
 b9c:	b7 95       	ror	r27
 b9e:	f7 95       	ror	r31
 ba0:	9f 5f       	subi	r25, 0xFF	; 255
 ba2:	c9 f7       	brne	.-14     	; 0xb96 <__divsf3_pse+0x74>
 ba4:	88 0f       	add	r24, r24
 ba6:	91 1d       	adc	r25, r1
 ba8:	96 95       	lsr	r25
 baa:	87 95       	ror	r24
 bac:	97 f9       	bld	r25, 7
 bae:	08 95       	ret
 bb0:	e1 e0       	ldi	r30, 0x01	; 1
 bb2:	66 0f       	add	r22, r22
 bb4:	77 1f       	adc	r23, r23
 bb6:	88 1f       	adc	r24, r24
 bb8:	bb 1f       	adc	r27, r27
 bba:	62 17       	cp	r22, r18
 bbc:	73 07       	cpc	r23, r19
 bbe:	84 07       	cpc	r24, r20
 bc0:	ba 07       	cpc	r27, r26
 bc2:	20 f0       	brcs	.+8      	; 0xbcc <__divsf3_pse+0xaa>
 bc4:	62 1b       	sub	r22, r18
 bc6:	73 0b       	sbc	r23, r19
 bc8:	84 0b       	sbc	r24, r20
 bca:	ba 0b       	sbc	r27, r26
 bcc:	ee 1f       	adc	r30, r30
 bce:	88 f7       	brcc	.-30     	; 0xbb2 <__divsf3_pse+0x90>
 bd0:	e0 95       	com	r30
 bd2:	08 95       	ret

00000bd4 <__fixunssfsi>:
 bd4:	98 d0       	rcall	.+304    	; 0xd06 <__fp_splitA>
 bd6:	88 f0       	brcs	.+34     	; 0xbfa <__fixunssfsi+0x26>
 bd8:	9f 57       	subi	r25, 0x7F	; 127
 bda:	90 f0       	brcs	.+36     	; 0xc00 <__fixunssfsi+0x2c>
 bdc:	b9 2f       	mov	r27, r25
 bde:	99 27       	eor	r25, r25
 be0:	b7 51       	subi	r27, 0x17	; 23
 be2:	a0 f0       	brcs	.+40     	; 0xc0c <__fixunssfsi+0x38>
 be4:	d1 f0       	breq	.+52     	; 0xc1a <__fixunssfsi+0x46>
 be6:	66 0f       	add	r22, r22
 be8:	77 1f       	adc	r23, r23
 bea:	88 1f       	adc	r24, r24
 bec:	99 1f       	adc	r25, r25
 bee:	1a f0       	brmi	.+6      	; 0xbf6 <__fixunssfsi+0x22>
 bf0:	ba 95       	dec	r27
 bf2:	c9 f7       	brne	.-14     	; 0xbe6 <__fixunssfsi+0x12>
 bf4:	12 c0       	rjmp	.+36     	; 0xc1a <__fixunssfsi+0x46>
 bf6:	b1 30       	cpi	r27, 0x01	; 1
 bf8:	81 f0       	breq	.+32     	; 0xc1a <__fixunssfsi+0x46>
 bfa:	9f d0       	rcall	.+318    	; 0xd3a <__fp_zero>
 bfc:	b1 e0       	ldi	r27, 0x01	; 1
 bfe:	08 95       	ret
 c00:	9c c0       	rjmp	.+312    	; 0xd3a <__fp_zero>
 c02:	67 2f       	mov	r22, r23
 c04:	78 2f       	mov	r23, r24
 c06:	88 27       	eor	r24, r24
 c08:	b8 5f       	subi	r27, 0xF8	; 248
 c0a:	39 f0       	breq	.+14     	; 0xc1a <__fixunssfsi+0x46>
 c0c:	b9 3f       	cpi	r27, 0xF9	; 249
 c0e:	cc f3       	brlt	.-14     	; 0xc02 <__fixunssfsi+0x2e>
 c10:	86 95       	lsr	r24
 c12:	77 95       	ror	r23
 c14:	67 95       	ror	r22
 c16:	b3 95       	inc	r27
 c18:	d9 f7       	brne	.-10     	; 0xc10 <__fixunssfsi+0x3c>
 c1a:	3e f4       	brtc	.+14     	; 0xc2a <__fixunssfsi+0x56>
 c1c:	90 95       	com	r25
 c1e:	80 95       	com	r24
 c20:	70 95       	com	r23
 c22:	61 95       	neg	r22
 c24:	7f 4f       	sbci	r23, 0xFF	; 255
 c26:	8f 4f       	sbci	r24, 0xFF	; 255
 c28:	9f 4f       	sbci	r25, 0xFF	; 255
 c2a:	08 95       	ret

00000c2c <__floatunsisf>:
 c2c:	e8 94       	clt
 c2e:	09 c0       	rjmp	.+18     	; 0xc42 <__floatsisf+0x12>

00000c30 <__floatsisf>:
 c30:	97 fb       	bst	r25, 7
 c32:	3e f4       	brtc	.+14     	; 0xc42 <__floatsisf+0x12>
 c34:	90 95       	com	r25
 c36:	80 95       	com	r24
 c38:	70 95       	com	r23
 c3a:	61 95       	neg	r22
 c3c:	7f 4f       	sbci	r23, 0xFF	; 255
 c3e:	8f 4f       	sbci	r24, 0xFF	; 255
 c40:	9f 4f       	sbci	r25, 0xFF	; 255
 c42:	99 23       	and	r25, r25
 c44:	a9 f0       	breq	.+42     	; 0xc70 <__floatsisf+0x40>
 c46:	f9 2f       	mov	r31, r25
 c48:	96 e9       	ldi	r25, 0x96	; 150
 c4a:	bb 27       	eor	r27, r27
 c4c:	93 95       	inc	r25
 c4e:	f6 95       	lsr	r31
 c50:	87 95       	ror	r24
 c52:	77 95       	ror	r23
 c54:	67 95       	ror	r22
 c56:	b7 95       	ror	r27
 c58:	f1 11       	cpse	r31, r1
 c5a:	f8 cf       	rjmp	.-16     	; 0xc4c <__floatsisf+0x1c>
 c5c:	fa f4       	brpl	.+62     	; 0xc9c <__floatsisf+0x6c>
 c5e:	bb 0f       	add	r27, r27
 c60:	11 f4       	brne	.+4      	; 0xc66 <__floatsisf+0x36>
 c62:	60 ff       	sbrs	r22, 0
 c64:	1b c0       	rjmp	.+54     	; 0xc9c <__floatsisf+0x6c>
 c66:	6f 5f       	subi	r22, 0xFF	; 255
 c68:	7f 4f       	sbci	r23, 0xFF	; 255
 c6a:	8f 4f       	sbci	r24, 0xFF	; 255
 c6c:	9f 4f       	sbci	r25, 0xFF	; 255
 c6e:	16 c0       	rjmp	.+44     	; 0xc9c <__floatsisf+0x6c>
 c70:	88 23       	and	r24, r24
 c72:	11 f0       	breq	.+4      	; 0xc78 <__floatsisf+0x48>
 c74:	96 e9       	ldi	r25, 0x96	; 150
 c76:	11 c0       	rjmp	.+34     	; 0xc9a <__floatsisf+0x6a>
 c78:	77 23       	and	r23, r23
 c7a:	21 f0       	breq	.+8      	; 0xc84 <__floatsisf+0x54>
 c7c:	9e e8       	ldi	r25, 0x8E	; 142
 c7e:	87 2f       	mov	r24, r23
 c80:	76 2f       	mov	r23, r22
 c82:	05 c0       	rjmp	.+10     	; 0xc8e <__floatsisf+0x5e>
 c84:	66 23       	and	r22, r22
 c86:	71 f0       	breq	.+28     	; 0xca4 <__floatsisf+0x74>
 c88:	96 e8       	ldi	r25, 0x86	; 134
 c8a:	86 2f       	mov	r24, r22
 c8c:	70 e0       	ldi	r23, 0x00	; 0
 c8e:	60 e0       	ldi	r22, 0x00	; 0
 c90:	2a f0       	brmi	.+10     	; 0xc9c <__floatsisf+0x6c>
 c92:	9a 95       	dec	r25
 c94:	66 0f       	add	r22, r22
 c96:	77 1f       	adc	r23, r23
 c98:	88 1f       	adc	r24, r24
 c9a:	da f7       	brpl	.-10     	; 0xc92 <__floatsisf+0x62>
 c9c:	88 0f       	add	r24, r24
 c9e:	96 95       	lsr	r25
 ca0:	87 95       	ror	r24
 ca2:	97 f9       	bld	r25, 7
 ca4:	08 95       	ret

00000ca6 <__fp_inf>:
 ca6:	97 f9       	bld	r25, 7
 ca8:	9f 67       	ori	r25, 0x7F	; 127
 caa:	80 e8       	ldi	r24, 0x80	; 128
 cac:	70 e0       	ldi	r23, 0x00	; 0
 cae:	60 e0       	ldi	r22, 0x00	; 0
 cb0:	08 95       	ret

00000cb2 <__fp_nan>:
 cb2:	9f ef       	ldi	r25, 0xFF	; 255
 cb4:	80 ec       	ldi	r24, 0xC0	; 192
 cb6:	08 95       	ret

00000cb8 <__fp_pscA>:
 cb8:	00 24       	eor	r0, r0
 cba:	0a 94       	dec	r0
 cbc:	16 16       	cp	r1, r22
 cbe:	17 06       	cpc	r1, r23
 cc0:	18 06       	cpc	r1, r24
 cc2:	09 06       	cpc	r0, r25
 cc4:	08 95       	ret

00000cc6 <__fp_pscB>:
 cc6:	00 24       	eor	r0, r0
 cc8:	0a 94       	dec	r0
 cca:	12 16       	cp	r1, r18
 ccc:	13 06       	cpc	r1, r19
 cce:	14 06       	cpc	r1, r20
 cd0:	05 06       	cpc	r0, r21
 cd2:	08 95       	ret

00000cd4 <__fp_round>:
 cd4:	09 2e       	mov	r0, r25
 cd6:	03 94       	inc	r0
 cd8:	00 0c       	add	r0, r0
 cda:	11 f4       	brne	.+4      	; 0xce0 <__fp_round+0xc>
 cdc:	88 23       	and	r24, r24
 cde:	52 f0       	brmi	.+20     	; 0xcf4 <__fp_round+0x20>
 ce0:	bb 0f       	add	r27, r27
 ce2:	40 f4       	brcc	.+16     	; 0xcf4 <__fp_round+0x20>
 ce4:	bf 2b       	or	r27, r31
 ce6:	11 f4       	brne	.+4      	; 0xcec <__fp_round+0x18>
 ce8:	60 ff       	sbrs	r22, 0
 cea:	04 c0       	rjmp	.+8      	; 0xcf4 <__fp_round+0x20>
 cec:	6f 5f       	subi	r22, 0xFF	; 255
 cee:	7f 4f       	sbci	r23, 0xFF	; 255
 cf0:	8f 4f       	sbci	r24, 0xFF	; 255
 cf2:	9f 4f       	sbci	r25, 0xFF	; 255
 cf4:	08 95       	ret

00000cf6 <__fp_split3>:
 cf6:	57 fd       	sbrc	r21, 7
 cf8:	90 58       	subi	r25, 0x80	; 128
 cfa:	44 0f       	add	r20, r20
 cfc:	55 1f       	adc	r21, r21
 cfe:	59 f0       	breq	.+22     	; 0xd16 <__fp_splitA+0x10>
 d00:	5f 3f       	cpi	r21, 0xFF	; 255
 d02:	71 f0       	breq	.+28     	; 0xd20 <__fp_splitA+0x1a>
 d04:	47 95       	ror	r20

00000d06 <__fp_splitA>:
 d06:	88 0f       	add	r24, r24
 d08:	97 fb       	bst	r25, 7
 d0a:	99 1f       	adc	r25, r25
 d0c:	61 f0       	breq	.+24     	; 0xd26 <__fp_splitA+0x20>
 d0e:	9f 3f       	cpi	r25, 0xFF	; 255
 d10:	79 f0       	breq	.+30     	; 0xd30 <__fp_splitA+0x2a>
 d12:	87 95       	ror	r24
 d14:	08 95       	ret
 d16:	12 16       	cp	r1, r18
 d18:	13 06       	cpc	r1, r19
 d1a:	14 06       	cpc	r1, r20
 d1c:	55 1f       	adc	r21, r21
 d1e:	f2 cf       	rjmp	.-28     	; 0xd04 <__fp_split3+0xe>
 d20:	46 95       	lsr	r20
 d22:	f1 df       	rcall	.-30     	; 0xd06 <__fp_splitA>
 d24:	08 c0       	rjmp	.+16     	; 0xd36 <__fp_splitA+0x30>
 d26:	16 16       	cp	r1, r22
 d28:	17 06       	cpc	r1, r23
 d2a:	18 06       	cpc	r1, r24
 d2c:	99 1f       	adc	r25, r25
 d2e:	f1 cf       	rjmp	.-30     	; 0xd12 <__fp_splitA+0xc>
 d30:	86 95       	lsr	r24
 d32:	71 05       	cpc	r23, r1
 d34:	61 05       	cpc	r22, r1
 d36:	08 94       	sec
 d38:	08 95       	ret

00000d3a <__fp_zero>:
 d3a:	e8 94       	clt

00000d3c <__fp_szero>:
 d3c:	bb 27       	eor	r27, r27
 d3e:	66 27       	eor	r22, r22
 d40:	77 27       	eor	r23, r23
 d42:	cb 01       	movw	r24, r22
 d44:	97 f9       	bld	r25, 7
 d46:	08 95       	ret

00000d48 <__mulsf3>:
 d48:	0b d0       	rcall	.+22     	; 0xd60 <__mulsf3x>
 d4a:	c4 cf       	rjmp	.-120    	; 0xcd4 <__fp_round>
 d4c:	b5 df       	rcall	.-150    	; 0xcb8 <__fp_pscA>
 d4e:	28 f0       	brcs	.+10     	; 0xd5a <__mulsf3+0x12>
 d50:	ba df       	rcall	.-140    	; 0xcc6 <__fp_pscB>
 d52:	18 f0       	brcs	.+6      	; 0xd5a <__mulsf3+0x12>
 d54:	95 23       	and	r25, r21
 d56:	09 f0       	breq	.+2      	; 0xd5a <__mulsf3+0x12>
 d58:	a6 cf       	rjmp	.-180    	; 0xca6 <__fp_inf>
 d5a:	ab cf       	rjmp	.-170    	; 0xcb2 <__fp_nan>
 d5c:	11 24       	eor	r1, r1
 d5e:	ee cf       	rjmp	.-36     	; 0xd3c <__fp_szero>

00000d60 <__mulsf3x>:
 d60:	ca df       	rcall	.-108    	; 0xcf6 <__fp_split3>
 d62:	a0 f3       	brcs	.-24     	; 0xd4c <__mulsf3+0x4>

00000d64 <__mulsf3_pse>:
 d64:	95 9f       	mul	r25, r21
 d66:	d1 f3       	breq	.-12     	; 0xd5c <__mulsf3+0x14>
 d68:	95 0f       	add	r25, r21
 d6a:	50 e0       	ldi	r21, 0x00	; 0
 d6c:	55 1f       	adc	r21, r21
 d6e:	62 9f       	mul	r22, r18
 d70:	f0 01       	movw	r30, r0
 d72:	72 9f       	mul	r23, r18
 d74:	bb 27       	eor	r27, r27
 d76:	f0 0d       	add	r31, r0
 d78:	b1 1d       	adc	r27, r1
 d7a:	63 9f       	mul	r22, r19
 d7c:	aa 27       	eor	r26, r26
 d7e:	f0 0d       	add	r31, r0
 d80:	b1 1d       	adc	r27, r1
 d82:	aa 1f       	adc	r26, r26
 d84:	64 9f       	mul	r22, r20
 d86:	66 27       	eor	r22, r22
 d88:	b0 0d       	add	r27, r0
 d8a:	a1 1d       	adc	r26, r1
 d8c:	66 1f       	adc	r22, r22
 d8e:	82 9f       	mul	r24, r18
 d90:	22 27       	eor	r18, r18
 d92:	b0 0d       	add	r27, r0
 d94:	a1 1d       	adc	r26, r1
 d96:	62 1f       	adc	r22, r18
 d98:	73 9f       	mul	r23, r19
 d9a:	b0 0d       	add	r27, r0
 d9c:	a1 1d       	adc	r26, r1
 d9e:	62 1f       	adc	r22, r18
 da0:	83 9f       	mul	r24, r19
 da2:	a0 0d       	add	r26, r0
 da4:	61 1d       	adc	r22, r1
 da6:	22 1f       	adc	r18, r18
 da8:	74 9f       	mul	r23, r20
 daa:	33 27       	eor	r19, r19
 dac:	a0 0d       	add	r26, r0
 dae:	61 1d       	adc	r22, r1
 db0:	23 1f       	adc	r18, r19
 db2:	84 9f       	mul	r24, r20
 db4:	60 0d       	add	r22, r0
 db6:	21 1d       	adc	r18, r1
 db8:	82 2f       	mov	r24, r18
 dba:	76 2f       	mov	r23, r22
 dbc:	6a 2f       	mov	r22, r26
 dbe:	11 24       	eor	r1, r1
 dc0:	9f 57       	subi	r25, 0x7F	; 127
 dc2:	50 40       	sbci	r21, 0x00	; 0
 dc4:	8a f0       	brmi	.+34     	; 0xde8 <__mulsf3_pse+0x84>
 dc6:	e1 f0       	breq	.+56     	; 0xe00 <__mulsf3_pse+0x9c>
 dc8:	88 23       	and	r24, r24
 dca:	4a f0       	brmi	.+18     	; 0xdde <__mulsf3_pse+0x7a>
 dcc:	ee 0f       	add	r30, r30
 dce:	ff 1f       	adc	r31, r31
 dd0:	bb 1f       	adc	r27, r27
 dd2:	66 1f       	adc	r22, r22
 dd4:	77 1f       	adc	r23, r23
 dd6:	88 1f       	adc	r24, r24
 dd8:	91 50       	subi	r25, 0x01	; 1
 dda:	50 40       	sbci	r21, 0x00	; 0
 ddc:	a9 f7       	brne	.-22     	; 0xdc8 <__mulsf3_pse+0x64>
 dde:	9e 3f       	cpi	r25, 0xFE	; 254
 de0:	51 05       	cpc	r21, r1
 de2:	70 f0       	brcs	.+28     	; 0xe00 <__mulsf3_pse+0x9c>
 de4:	60 cf       	rjmp	.-320    	; 0xca6 <__fp_inf>
 de6:	aa cf       	rjmp	.-172    	; 0xd3c <__fp_szero>
 de8:	5f 3f       	cpi	r21, 0xFF	; 255
 dea:	ec f3       	brlt	.-6      	; 0xde6 <__mulsf3_pse+0x82>
 dec:	98 3e       	cpi	r25, 0xE8	; 232
 dee:	dc f3       	brlt	.-10     	; 0xde6 <__mulsf3_pse+0x82>
 df0:	86 95       	lsr	r24
 df2:	77 95       	ror	r23
 df4:	67 95       	ror	r22
 df6:	b7 95       	ror	r27
 df8:	f7 95       	ror	r31
 dfa:	e7 95       	ror	r30
 dfc:	9f 5f       	subi	r25, 0xFF	; 255
 dfe:	c1 f7       	brne	.-16     	; 0xdf0 <__mulsf3_pse+0x8c>
 e00:	fe 2b       	or	r31, r30
 e02:	88 0f       	add	r24, r24
 e04:	91 1d       	adc	r25, r1
 e06:	96 95       	lsr	r25
 e08:	87 95       	ror	r24
 e0a:	97 f9       	bld	r25, 7
 e0c:	08 95       	ret

00000e0e <__udivmodsi4>:
 e0e:	a1 e2       	ldi	r26, 0x21	; 33
 e10:	1a 2e       	mov	r1, r26
 e12:	aa 1b       	sub	r26, r26
 e14:	bb 1b       	sub	r27, r27
 e16:	fd 01       	movw	r30, r26
 e18:	0d c0       	rjmp	.+26     	; 0xe34 <__udivmodsi4_ep>

00000e1a <__udivmodsi4_loop>:
 e1a:	aa 1f       	adc	r26, r26
 e1c:	bb 1f       	adc	r27, r27
 e1e:	ee 1f       	adc	r30, r30
 e20:	ff 1f       	adc	r31, r31
 e22:	a2 17       	cp	r26, r18
 e24:	b3 07       	cpc	r27, r19
 e26:	e4 07       	cpc	r30, r20
 e28:	f5 07       	cpc	r31, r21
 e2a:	20 f0       	brcs	.+8      	; 0xe34 <__udivmodsi4_ep>
 e2c:	a2 1b       	sub	r26, r18
 e2e:	b3 0b       	sbc	r27, r19
 e30:	e4 0b       	sbc	r30, r20
 e32:	f5 0b       	sbc	r31, r21

00000e34 <__udivmodsi4_ep>:
 e34:	66 1f       	adc	r22, r22
 e36:	77 1f       	adc	r23, r23
 e38:	88 1f       	adc	r24, r24
 e3a:	99 1f       	adc	r25, r25
 e3c:	1a 94       	dec	r1
 e3e:	69 f7       	brne	.-38     	; 0xe1a <__udivmodsi4_loop>
 e40:	60 95       	com	r22
 e42:	70 95       	com	r23
 e44:	80 95       	com	r24
 e46:	90 95       	com	r25
 e48:	9b 01       	movw	r18, r22
 e4a:	ac 01       	movw	r20, r24
 e4c:	bd 01       	movw	r22, r26
 e4e:	cf 01       	movw	r24, r30
 e50:	08 95       	ret

00000e52 <__tablejump2__>:
 e52:	ee 0f       	add	r30, r30
 e54:	ff 1f       	adc	r31, r31
 e56:	88 1f       	adc	r24, r24
 e58:	8b bf       	out	0x3b, r24	; 59
 e5a:	07 90       	elpm	r0, Z+
 e5c:	f6 91       	elpm	r31, Z
 e5e:	e0 2d       	mov	r30, r0
 e60:	19 94       	eijmp

00000e62 <__itoa_ncheck>:
 e62:	bb 27       	eor	r27, r27
 e64:	4a 30       	cpi	r20, 0x0A	; 10
 e66:	31 f4       	brne	.+12     	; 0xe74 <__itoa_ncheck+0x12>
 e68:	99 23       	and	r25, r25
 e6a:	22 f4       	brpl	.+8      	; 0xe74 <__itoa_ncheck+0x12>
 e6c:	bd e2       	ldi	r27, 0x2D	; 45
 e6e:	90 95       	com	r25
 e70:	81 95       	neg	r24
 e72:	9f 4f       	sbci	r25, 0xFF	; 255
 e74:	01 c0       	rjmp	.+2      	; 0xe78 <__utoa_common>

00000e76 <__utoa_ncheck>:
 e76:	bb 27       	eor	r27, r27

00000e78 <__utoa_common>:
 e78:	fb 01       	movw	r30, r22
 e7a:	55 27       	eor	r21, r21
 e7c:	aa 27       	eor	r26, r26
 e7e:	88 0f       	add	r24, r24
 e80:	99 1f       	adc	r25, r25
 e82:	aa 1f       	adc	r26, r26
 e84:	a4 17       	cp	r26, r20
 e86:	10 f0       	brcs	.+4      	; 0xe8c <__utoa_common+0x14>
 e88:	a4 1b       	sub	r26, r20
 e8a:	83 95       	inc	r24
 e8c:	50 51       	subi	r21, 0x10	; 16
 e8e:	b9 f7       	brne	.-18     	; 0xe7e <__utoa_common+0x6>
 e90:	a0 5d       	subi	r26, 0xD0	; 208
 e92:	aa 33       	cpi	r26, 0x3A	; 58
 e94:	08 f0       	brcs	.+2      	; 0xe98 <__utoa_common+0x20>
 e96:	a9 5d       	subi	r26, 0xD9	; 217
 e98:	a1 93       	st	Z+, r26
 e9a:	00 97       	sbiw	r24, 0x00	; 0
 e9c:	79 f7       	brne	.-34     	; 0xe7c <__utoa_common+0x4>
 e9e:	b1 11       	cpse	r27, r1
 ea0:	b1 93       	st	Z+, r27
 ea2:	11 92       	st	Z+, r1
 ea4:	cb 01       	movw	r24, r22
 ea6:	00 c0       	rjmp	.+0      	; 0xea8 <strrev>

00000ea8 <strrev>:
 ea8:	dc 01       	movw	r26, r24
 eaa:	fc 01       	movw	r30, r24
 eac:	67 2f       	mov	r22, r23
 eae:	71 91       	ld	r23, Z+
 eb0:	77 23       	and	r23, r23
 eb2:	e1 f7       	brne	.-8      	; 0xeac <strrev+0x4>
 eb4:	32 97       	sbiw	r30, 0x02	; 2
 eb6:	04 c0       	rjmp	.+8      	; 0xec0 <strrev+0x18>
 eb8:	7c 91       	ld	r23, X
 eba:	6d 93       	st	X+, r22
 ebc:	70 83       	st	Z, r23
 ebe:	62 91       	ld	r22, -Z
 ec0:	ae 17       	cp	r26, r30
 ec2:	bf 07       	cpc	r27, r31
 ec4:	c8 f3       	brcs	.-14     	; 0xeb8 <strrev+0x10>
 ec6:	08 95       	ret

00000ec8 <_exit>:
 ec8:	f8 94       	cli

00000eca <__stop_program>:
 eca:	ff cf       	rjmp	.-2      	; 0xeca <__stop_program>
